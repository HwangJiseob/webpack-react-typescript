/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={935:e=>{function t(){return e.exports=t=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},t.apply(this,arguments)}e.exports=t},814:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(a[l]=!0)}for(var i=0;i<e.length;i++){var u=[].concat(e[i]);r&&a[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},122:e=>{"use strict";function t(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,a=!1,o=void 0;try{for(var l,i=e[Symbol.iterator]();!(r=(l=i.next()).done)&&(n.push(l.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==i.return||i.return()}finally{if(a)throw o}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return n(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n=t(e,4),r=n[1],a=n[3];if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(l," */"),u=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[r].concat(u).concat([i]).join("\n")}return[r].join("\n")}},121:(e,t,n)=>{"use strict";var r=n(216),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function u(e){return r.isMemo(e)?l:i[e.$$typeof]||a}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=l;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=p(n);a&&a!==h&&e(t,a,r)}var l=s(n);f&&(l=l.concat(f(n)));for(var i=u(t),m=u(n),v=0;v<l.length;++v){var y=l[v];if(!(o[y]||r&&r[y]||m&&m[y]||i&&i[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},597:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},702:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var l,i,u=a(e),c=1;c<arguments.length;c++){for(var s in l=Object(arguments[c]))n.call(l,s)&&(u[s]=l[s]);if(t){i=t(l);for(var f=0;f<i.length;f++)r.call(l,i[f])&&(u[i[f]]=l[i[f]])}}return u}},961:(e,t,n)=>{var r=n(597);e.exports=p,e.exports.parse=o,e.exports.compile=function(e,t){return i(o(e,t),t)},e.exports.tokensToFunction=i,e.exports.tokensToRegExp=d;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function o(e,t){for(var n,r=[],o=0,l=0,i="",s=t&&t.delimiter||"/";null!=(n=a.exec(e));){var f=n[0],d=n[1],p=n.index;if(i+=e.slice(l,p),l=p+f.length,d)i+=d[1];else{var h=e[l],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];i&&(r.push(i),i="");var k=null!=m&&null!=h&&h!==m,E="+"===b||"*"===b,S="?"===b||"*"===b,x=n[2]||s,C=y||g;r.push({name:v||o++,prefix:m||"",delimiter:x,optional:S,repeat:E,partial:k,asterisk:!!w,pattern:C?c(C):w?".*":"[^"+u(x)+"]+?"})}}return l<e.length&&(i+=e.substr(l)),i&&r.push(i),r}function l(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function i(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",f(t)));return function(t,a){for(var o="",i=t||{},u=(a||{}).pretty?l:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=i[s.name];if(null==d){if(s.optional){s.partial&&(o+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");o+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');o+=s.prefix+f}}else o+=s}return o}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,o=!1!==n.end,l="",i=0;i<e.length;i++){var c=e[i];if("string"==typeof c)l+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),l+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=l.slice(-h.length)===h;return a||(l=(m?l.slice(0,-h.length):l)+"(?:"+h+"(?=$))?"),l+=o?"$":a&&m?"":"(?="+h+"|$)",s(new RegExp("^"+l,f(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],a=0;a<e.length;a++)r.push(p(e[a],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return d(o(e,n),t,n)}(e,t,n)}},102:(e,t,n)=>{"use strict";var r=n(135);function a(){}function o(){}o.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,o,l){if(l!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:a};return n.PropTypes=n,n}},398:(e,t,n)=>{e.exports=n(102)()},135:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},223:(e,t,n)=>{"use strict";var r=n(401),a=n(702),o=n(779);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));var i=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)i.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function v(e,t,n,r,a,o,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=l}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var a=y.hasOwnProperty(t)?y[t]:null;(null!==a?0===a.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,S=60106,x=60107,C=60108,_=60114,P=60109,T=60110,O=60112,N=60113,L=60120,R=60115,z=60116,M=60121,A=60128,I=60129,F=60130,D=60131;if("function"==typeof Symbol&&Symbol.for){var U=Symbol.for;E=U("react.element"),S=U("react.portal"),x=U("react.fragment"),C=U("react.strict_mode"),_=U("react.profiler"),P=U("react.provider"),T=U("react.context"),O=U("react.forward_ref"),N=U("react.suspense"),L=U("react.suspense_list"),R=U("react.memo"),z=U("react.lazy"),M=U("react.block"),U("react.scope"),A=U("react.opaque.id"),I=U("react.debug_trace_mode"),F=U("react.offscreen"),D=U("react.legacy_hidden")}var j,$="function"==typeof Symbol&&Symbol.iterator;function B(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=$&&e[$]||e["@@iterator"])?e:null}function V(e){if(void 0===j)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);j=t&&t[1]||""}return"\n"+j+e}var W=!1;function H(e,t){if(!e||W)return"";W=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=r.stack.split("\n"),l=a.length-1,i=o.length-1;1<=l&&0<=i&&a[l]!==o[i];)i--;for(;1<=l&&0<=i;l--,i--)if(a[l]!==o[i]){if(1!==l||1!==i)do{if(l--,0>--i||a[l]!==o[i])return"\n"+a[l].replace(" at new "," at ")}while(1<=l&&0<=i);break}}}finally{W=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?V(e):""}function Q(e){switch(e.tag){case 5:return V(e.type);case 16:return V("Lazy");case 13:return V("Suspense");case 19:return V("SuspenseList");case 0:case 2:case 15:return e=H(e.type,!1);case 11:return e=H(e.type.render,!1);case 22:return e=H(e.type._render,!1);case 1:return e=H(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case S:return"Portal";case _:return"Profiler";case C:return"StrictMode";case N:return"Suspense";case L:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case O:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case R:return q(e.type);case M:return q(e._render);case z:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function G(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Y(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&Z(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function oe(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function le(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function ce(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml",de="http://www.w3.org/2000/svg";function pe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function he(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?pe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var me,ve,ye=(ve=function(e,t){if(e.namespaceURI!==de||"innerHTML"in e)e.innerHTML=t;else{for((me=me||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=me.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ve(e,t)}))}:ve);function ge(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var be={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},we=["Webkit","ms","Moz","O"];function ke(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||be.hasOwnProperty(e)&&be[e]?(""+t).trim():t+"px"}function Ee(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=ke(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(be).forEach((function(e){we.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),be[t]=be[e]}))}));var Se=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function xe(e,t){if(t){if(Se[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62))}}function Ce(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function _e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Pe=null,Te=null,Oe=null;function Ne(e){if(e=ea(e)){if("function"!=typeof Pe)throw Error(l(280));var t=e.stateNode;t&&(t=na(t),Pe(e.stateNode,e.type,t))}}function Le(e){Te?Oe?Oe.push(e):Oe=[e]:Te=e}function Re(){if(Te){var e=Te,t=Oe;if(Oe=Te=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function ze(e,t){return e(t)}function Me(e,t,n,r,a){return e(t,n,r,a)}function Ae(){}var Ie=ze,Fe=!1,De=!1;function Ue(){null===Te&&null===Oe||(Ae(),Re())}function je(e,t){var n=e.stateNode;if(null===n)return null;var r=na(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}var $e=!1;if(f)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){$e=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(ve){$e=!1}function Ve(e,t,n,r,a,o,l,i,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var We=!1,He=null,Qe=!1,qe=null,Ke={onError:function(e){We=!0,He=e}};function Ye(e,t,n,r,a,o,l,i,u){We=!1,He=null,Ve.apply(Ke,arguments)}function Ge(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Ze(e){if(Ge(e)!==e)throw Error(l(188))}function Je(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ge(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Ze(a),e;if(o===r)return Ze(a),t;o=o.sibling}throw Error(l(188))}if(n.return!==r.return)n=a,r=o;else{for(var i=!1,u=a.child;u;){if(u===n){i=!0,n=a,r=o;break}if(u===r){i=!0,r=a,n=o;break}u=u.sibling}if(!i){for(u=o.child;u;){if(u===n){i=!0,n=o,r=a;break}if(u===r){i=!0,r=o,n=a;break}u=u.sibling}if(!i)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function et(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var tt,nt,rt,at,ot=!1,lt=[],it=null,ut=null,ct=null,st=new Map,ft=new Map,dt=[],pt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function ht(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function mt(e,t){switch(e){case"focusin":case"focusout":it=null;break;case"dragenter":case"dragleave":ut=null;break;case"mouseover":case"mouseout":ct=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ft.delete(t.pointerId)}}function vt(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e=ht(t,n,r,a,o),null!==t&&(null!==(t=ea(t))&&nt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function yt(e){var t=Jr(e.target);if(null!==t){var n=Ge(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Xe(n)))return e.blockedOn=t,void at(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){rt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function gt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ea(n))&&nt(t),e.blockedOn=n,!1;t.shift()}return!0}function bt(e,t,n){gt(e)&&n.delete(t)}function wt(){for(ot=!1;0<lt.length;){var e=lt[0];if(null!==e.blockedOn){null!==(e=ea(e.blockedOn))&&tt(e);break}for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&lt.shift()}null!==it&&gt(it)&&(it=null),null!==ut&&gt(ut)&&(ut=null),null!==ct&&gt(ct)&&(ct=null),st.forEach(bt),ft.forEach(bt)}function kt(e,t){e.blockedOn===t&&(e.blockedOn=null,ot||(ot=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,wt)))}function Et(e){function t(t){return kt(t,e)}if(0<lt.length){kt(lt[0],e);for(var n=1;n<lt.length;n++){var r=lt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==it&&kt(it,e),null!==ut&&kt(ut,e),null!==ct&&kt(ct,e),st.forEach(t),ft.forEach(t),n=0;n<dt.length;n++)(r=dt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<dt.length&&null===(n=dt[0]).blockedOn;)yt(n),null===n.blockedOn&&dt.shift()}function St(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var xt={animationend:St("Animation","AnimationEnd"),animationiteration:St("Animation","AnimationIteration"),animationstart:St("Animation","AnimationStart"),transitionend:St("Transition","TransitionEnd")},Ct={},_t={};function Pt(e){if(Ct[e])return Ct[e];if(!xt[e])return e;var t,n=xt[e];for(t in n)if(n.hasOwnProperty(t)&&t in _t)return Ct[e]=n[t];return e}f&&(_t=document.createElement("div").style,"AnimationEvent"in window||(delete xt.animationend.animation,delete xt.animationiteration.animation,delete xt.animationstart.animation),"TransitionEvent"in window||delete xt.transitionend.transition);var Tt=Pt("animationend"),Ot=Pt("animationiteration"),Nt=Pt("animationstart"),Lt=Pt("transitionend"),Rt=new Map,zt=new Map,Mt=["abort","abort",Tt,"animationEnd",Ot,"animationIteration",Nt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Lt,"transitionEnd","waiting","waiting"];function At(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),zt.set(r,t),Rt.set(r,a),c(a,[r])}}(0,o.unstable_now)();var It=8;function Ft(e){if(0!=(1&e))return It=15,1;if(0!=(2&e))return It=14,2;if(0!=(4&e))return It=13,4;var t=24&e;return 0!==t?(It=12,t):0!=(32&e)?(It=11,32):0!==(t=192&e)?(It=10,t):0!=(256&e)?(It=9,256):0!==(t=3584&e)?(It=8,t):0!=(4096&e)?(It=7,4096):0!==(t=4186112&e)?(It=6,t):0!==(t=62914560&e)?(It=5,t):67108864&e?(It=4,67108864):0!=(134217728&e)?(It=3,134217728):0!==(t=805306368&e)?(It=2,t):0!=(1073741824&e)?(It=1,1073741824):(It=8,e)}function Dt(e,t){var n=e.pendingLanes;if(0===n)return It=0;var r=0,a=0,o=e.expiredLanes,l=e.suspendedLanes,i=e.pingedLanes;if(0!==o)r=o,a=It=15;else if(0!==(o=134217727&n)){var u=o&~l;0!==u?(r=Ft(u),a=It):0!==(i&=o)&&(r=Ft(i),a=It)}else 0!==(o=n&~l)?(r=Ft(o),a=It):0!==i&&(r=Ft(i),a=It);if(0===r)return 0;if(r=n&((0>(r=31-Wt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&l)){if(Ft(t),a<=It)return t;It=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-Wt(t)),r|=e[n],t&=~a;return r}function Ut(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function jt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=$t(24&~t))?jt(10,t):e;case 10:return 0===(e=$t(192&~t))?jt(8,t):e;case 8:return 0===(e=$t(3584&~t))&&(0===(e=$t(4186112&~t))&&(e=512)),e;case 2:return 0===(t=$t(805306368&~t))&&(t=268435456),t}throw Error(l(358,e))}function $t(e){return e&-e}function Bt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Vt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Wt(t)]=n}var Wt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Ht(e)/Qt|0)|0},Ht=Math.log,Qt=Math.LN2;var qt=o.unstable_UserBlockingPriority,Kt=o.unstable_runWithPriority,Yt=!0;function Gt(e,t,n,r){Fe||Ae();var a=Zt,o=Fe;Fe=!0;try{Me(a,e,t,n,r)}finally{(Fe=o)||Ue()}}function Xt(e,t,n,r){Kt(qt,Zt.bind(null,e,t,n,r))}function Zt(e,t,n,r){var a;if(Yt)if((a=0==(4&t))&&0<lt.length&&-1<pt.indexOf(e))e=ht(null,e,t,n,r),lt.push(e);else{var o=Jt(e,t,n,r);if(null===o)a&&mt(e,r);else{if(a){if(-1<pt.indexOf(e))return e=ht(o,e,t,n,r),void lt.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return it=vt(it,e,t,n,r,a),!0;case"dragenter":return ut=vt(ut,e,t,n,r,a),!0;case"mouseover":return ct=vt(ct,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return st.set(o,vt(st.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,ft.set(o,vt(ft.get(o)||null,e,t,n,r,a)),!0}return!1}(o,e,t,n,r))return;mt(e,r)}Rr(e,t,r,null,n)}}}function Jt(e,t,n,r){var a=_e(r);if(null!==(a=Jr(a))){var o=Ge(a);if(null===o)a=null;else{var l=o.tag;if(13===l){if(null!==(a=Xe(o)))return a;a=null}else if(3===l){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;a=null}else o!==a&&(a=null)}}return Rr(e,t,r,a,n),null}var en=null,tn=null,nn=null;function rn(){if(nn)return nn;var e,t,n=tn,r=n.length,a="value"in en?en.value:en.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===a[o-t];t++);return nn=a.slice(e,1<t?1-t:void 0)}function an(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function on(){return!0}function ln(){return!1}function un(e){function t(t,n,r,a,o){for(var l in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(l)&&(t=e[l],this[l]=t?t(a):a[l]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?on:ln,this.isPropagationStopped=ln,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=on)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=on)},persist:function(){},isPersistent:on}),t}var cn,sn,fn,dn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},pn=un(dn),hn=a({},dn,{view:0,detail:0}),mn=un(hn),vn=a({},hn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Pn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==fn&&(fn&&"mousemove"===e.type?(cn=e.screenX-fn.screenX,sn=e.screenY-fn.screenY):sn=cn=0,fn=e),cn)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),yn=un(vn),gn=un(a({},vn,{dataTransfer:0})),bn=un(a({},hn,{relatedTarget:0})),wn=un(a({},dn,{animationName:0,elapsedTime:0,pseudoElement:0})),kn=un(a({},dn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),En=un(a({},dn,{data:0})),Sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Cn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _n(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cn[e])&&!!t[e]}function Pn(){return _n}var Tn=un(a({},hn,{key:function(e){if(e.key){var t=Sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=an(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Pn,charCode:function(e){return"keypress"===e.type?an(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?an(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),On=un(a({},vn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Nn=un(a({},hn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Pn})),Ln=un(a({},dn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Rn=un(a({},vn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),zn=[9,13,27,32],Mn=f&&"CompositionEvent"in window,An=null;f&&"documentMode"in document&&(An=document.documentMode);var In=f&&"TextEvent"in window&&!An,Fn=f&&(!Mn||An&&8<An&&11>=An),Dn=String.fromCharCode(32),Un=!1;function jn(e,t){switch(e){case"keyup":return-1!==zn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function $n(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Bn=!1;var Vn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Wn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Vn[e.type]:"textarea"===t}function Hn(e,t,n,r){Le(r),0<(t=Mr(t,"onChange")).length&&(n=new pn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Qn=null,qn=null;function Kn(e){_r(e,0)}function Yn(e){if(X(ta(e)))return e}function Gn(e,t){if("change"===e)return t}var Xn=!1;if(f){var Zn;if(f){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"==typeof er.oninput}Zn=Jn}else Zn=!1;Xn=Zn&&(!document.documentMode||9<document.documentMode)}function tr(){Qn&&(Qn.detachEvent("onpropertychange",nr),qn=Qn=null)}function nr(e){if("value"===e.propertyName&&Yn(qn)){var t=[];if(Hn(t,qn,e,_e(e)),e=Kn,Fe)e(t);else{Fe=!0;try{ze(e,t)}finally{Fe=!1,Ue()}}}}function rr(e,t,n){"focusin"===e?(tr(),qn=n,(Qn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn(qn)}function or(e,t){if("click"===e)return Yn(t)}function lr(e,t){if("input"===e||"change"===e)return Yn(t)}var ir="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ur=Object.prototype.hasOwnProperty;function cr(e,t){if(ir(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ur.call(t,n[r])||!ir(e[n[r]],t[n[r]]))return!1;return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function dr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pr(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Z((e=t.contentWindow).document)}return t}function hr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var mr=f&&"documentMode"in document&&11>=document.documentMode,vr=null,yr=null,gr=null,br=!1;function wr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==vr||vr!==Z(r)||("selectionStart"in(r=vr)&&hr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&cr(gr,r)||(gr=r,0<(r=Mr(yr,"onSelect")).length&&(t=new pn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=vr)))}At("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),At("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),At(Mt,2);for(var kr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Er=0;Er<kr.length;Er++)zt.set(kr[Er],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Sr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),xr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Sr));function Cr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,i,u,c){if(Ye.apply(this,arguments),We){if(!We)throw Error(l(198));var s=He;We=!1,He=null,Qe||(Qe=!0,qe=s)}}(r,t,void 0,e),e.currentTarget=null}function _r(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var l=r.length-1;0<=l;l--){var i=r[l],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==o&&a.isPropagationStopped())break e;Cr(a,i,c),o=u}else for(l=0;l<r.length;l++){if(u=(i=r[l]).instance,c=i.currentTarget,i=i.listener,u!==o&&a.isPropagationStopped())break e;Cr(a,i,c),o=u}}}if(Qe)throw e=qe,Qe=!1,qe=null,e}function Pr(e,t){var n=ra(t),r=e+"__bubble";n.has(r)||(Lr(t,e,2,!1),n.add(r))}var Tr="_reactListening"+Math.random().toString(36).slice(2);function Or(e){e[Tr]||(e[Tr]=!0,i.forEach((function(t){xr.has(t)||Nr(t,!1,e,null),Nr(t,!0,e,null)})))}function Nr(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=n;if("selectionchange"===e&&9!==n.nodeType&&(o=n.ownerDocument),null!==r&&!t&&xr.has(e)){if("scroll"!==e)return;a|=2,o=r}var l=ra(o),i=e+"__"+(t?"capture":"bubble");l.has(i)||(t&&(a|=4),Lr(o,e,a,t),l.add(i))}function Lr(e,t,n,r){var a=zt.get(t);switch(void 0===a?2:a){case 0:a=Gt;break;case 1:a=Xt;break;default:a=Zt}n=a.bind(null,t,n,e),a=void 0,!$e||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Rr(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var l=r.tag;if(3===l||4===l){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===l)for(l=r.return;null!==l;){var u=l.tag;if((3===u||4===u)&&((u=l.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;l=l.return}for(;null!==i;){if(null===(l=Jr(i)))return;if(5===(u=l.tag)||6===u){r=o=l;continue e}i=i.parentNode}}r=r.return}!function(e,t,n){if(De)return e(t,n);De=!0;try{Ie(e,t,n)}finally{De=!1,Ue()}}((function(){var r=o,a=_e(n),l=[];e:{var i=Rt.get(e);if(void 0!==i){var u=pn,c=e;switch(e){case"keypress":if(0===an(n))break e;case"keydown":case"keyup":u=Tn;break;case"focusin":c="focus",u=bn;break;case"focusout":c="blur",u=bn;break;case"beforeblur":case"afterblur":u=bn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=yn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Nn;break;case Tt:case Ot:case Nt:u=wn;break;case Lt:u=Ln;break;case"scroll":u=mn;break;case"wheel":u=Rn;break;case"copy":case"cut":case"paste":u=kn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=On}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==i?i+"Capture":null:i;s=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&(null!=(m=je(h,d))&&s.push(zr(h,m,p)))),f)break;h=h.return}0<s.length&&(i=new u(i,c,null,n,a),l.push({event:i,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=n.relatedTarget||n.fromElement)||!Jr(c)&&!c[Xr])&&(u||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?Jr(c):null)&&(c!==(f=Ge(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=yn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=On,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?i:ta(u),p=null==c?i:ta(c),(i=new s(m,h+"leave",u,n,a)).target=f,i.relatedTarget=p,m=null,Jr(a)===r&&((s=new s(d,h+"enter",c,n,a)).target=p,s.relatedTarget=f,m=s),f=m,u&&c)e:{for(d=c,h=0,p=s=u;p;p=Ar(p))h++;for(p=0,m=d;m;m=Ar(m))p++;for(;0<h-p;)s=Ar(s),h--;for(;0<p-h;)d=Ar(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=Ar(s),d=Ar(d)}s=null}else s=null;null!==u&&Ir(l,i,u,s,!1),null!==c&&null!==f&&Ir(l,f,c,s,!0)}if("select"===(u=(i=r?ta(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var v=Gn;else if(Wn(i))if(Xn)v=lr;else{v=ar;var y=rr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(v=or);switch(v&&(v=v(e,r))?Hn(l,v,n,a):(y&&y(e,i,r),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ae(i,"number",i.value)),y=r?ta(r):window,e){case"focusin":(Wn(y)||"true"===y.contentEditable)&&(vr=y,yr=r,gr=null);break;case"focusout":gr=yr=vr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,wr(l,n,a);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":wr(l,n,a)}var g;if(Mn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Bn?jn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Fn&&"ko"!==n.locale&&(Bn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Bn&&(g=rn()):(tn="value"in(en=a)?en.value:en.textContent,Bn=!0)),0<(y=Mr(r,b)).length&&(b=new En(b,e,null,n,a),l.push({event:b,listeners:y}),g?b.data=g:null!==(g=$n(n))&&(b.data=g))),(g=In?function(e,t){switch(e){case"compositionend":return $n(t);case"keypress":return 32!==t.which?null:(Un=!0,Dn);case"textInput":return(e=t.data)===Dn&&Un?null:e;default:return null}}(e,n):function(e,t){if(Bn)return"compositionend"===e||!Mn&&jn(e,t)?(e=rn(),nn=tn=en=null,Bn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Fn&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&(0<(r=Mr(r,"onBeforeInput")).length&&(a=new En("onBeforeInput","beforeinput",null,n,a),l.push({event:a,listeners:r}),a.data=g))}_r(l,t)}))}function zr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Mr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=je(e,n))&&r.unshift(zr(e,o,a)),null!=(o=je(e,t))&&r.push(zr(e,o,a))),e=e.return}return r}function Ar(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ir(e,t,n,r,a){for(var o=t._reactName,l=[];null!==n&&n!==r;){var i=n,u=i.alternate,c=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==c&&(i=c,a?null!=(u=je(n,o))&&l.unshift(zr(n,u,i)):a||null!=(u=je(n,o))&&l.push(zr(n,u,i))),n=n.return}0!==l.length&&e.push({event:t,listeners:l})}function Fr(){}var Dr=null,Ur=null;function jr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function $r(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Br="function"==typeof setTimeout?setTimeout:void 0,Vr="function"==typeof clearTimeout?clearTimeout:void 0;function Wr(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function Hr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Qr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var qr=0;var Kr=Math.random().toString(36).slice(2),Yr="__reactFiber$"+Kr,Gr="__reactProps$"+Kr,Xr="__reactContainer$"+Kr,Zr="__reactEvents$"+Kr;function Jr(e){var t=e[Yr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Xr]||n[Yr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Qr(e);null!==e;){if(n=e[Yr])return n;e=Qr(e)}return t}n=(e=n).parentNode}return null}function ea(e){return!(e=e[Yr]||e[Xr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ta(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function na(e){return e[Gr]||null}function ra(e){var t=e[Zr];return void 0===t&&(t=e[Zr]=new Set),t}var aa=[],oa=-1;function la(e){return{current:e}}function ia(e){0>oa||(e.current=aa[oa],aa[oa]=null,oa--)}function ua(e,t){oa++,aa[oa]=e.current,e.current=t}var ca={},sa=la(ca),fa=la(!1),da=ca;function pa(e,t){var n=e.type.contextTypes;if(!n)return ca;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function ha(e){return null!=(e=e.childContextTypes)}function ma(){ia(fa),ia(sa)}function va(e,t,n){if(sa.current!==ca)throw Error(l(168));ua(sa,t),ua(fa,n)}function ya(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(l(108,q(t)||"Unknown",o));return a({},n,r)}function ga(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ca,da=sa.current,ua(sa,e),ua(fa,fa.current),!0}function ba(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=ya(e,t,da),r.__reactInternalMemoizedMergedChildContext=e,ia(fa),ia(sa),ua(sa,e)):ia(fa),ua(fa,n)}var wa=null,ka=null,Ea=o.unstable_runWithPriority,Sa=o.unstable_scheduleCallback,xa=o.unstable_cancelCallback,Ca=o.unstable_shouldYield,_a=o.unstable_requestPaint,Pa=o.unstable_now,Ta=o.unstable_getCurrentPriorityLevel,Oa=o.unstable_ImmediatePriority,Na=o.unstable_UserBlockingPriority,La=o.unstable_NormalPriority,Ra=o.unstable_LowPriority,za=o.unstable_IdlePriority,Ma={},Aa=void 0!==_a?_a:function(){},Ia=null,Fa=null,Da=!1,Ua=Pa(),ja=1e4>Ua?Pa:function(){return Pa()-Ua};function $a(){switch(Ta()){case Oa:return 99;case Na:return 98;case La:return 97;case Ra:return 96;case za:return 95;default:throw Error(l(332))}}function Ba(e){switch(e){case 99:return Oa;case 98:return Na;case 97:return La;case 96:return Ra;case 95:return za;default:throw Error(l(332))}}function Va(e,t){return e=Ba(e),Ea(e,t)}function Wa(e,t,n){return e=Ba(e),Sa(e,t,n)}function Ha(){if(null!==Fa){var e=Fa;Fa=null,xa(e)}Qa()}function Qa(){if(!Da&&null!==Ia){Da=!0;var e=0;try{var t=Ia;Va(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ia=null}catch(t){throw null!==Ia&&(Ia=Ia.slice(e+1)),Sa(Oa,Ha),t}finally{Da=!1}}}var qa=k.ReactCurrentBatchConfig;function Ka(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Ya=la(null),Ga=null,Xa=null,Za=null;function Ja(){Za=Xa=Ga=null}function eo(e){var t=Ya.current;ia(Ya),e.type._context._currentValue=t}function to(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function no(e,t){Ga=e,Za=Xa=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ml=!0),e.firstContext=null)}function ro(e,t){if(Za!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Za=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Xa){if(null===Ga)throw Error(l(308));Xa=t,Ga.dependencies={lanes:0,firstContext:t,responders:null}}else Xa=Xa.next=t;return e._currentValue}var ao=!1;function oo(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function lo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function io(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function uo(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function co(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=l:o=o.next=l,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function so(e,t,n,r){var o=e.updateQueue;ao=!1;var l=o.firstBaseUpdate,i=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var c=u,s=c.next;c.next=null,null===i?l=s:i.next=s,i=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==i&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==l){for(d=o.baseState,i=0,f=s=c=null;;){u=l.lane;var p=l.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var h=e,m=l;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=a({},d,u);break e;case 2:ao=!0}}null!==l.callback&&(e.flags|=32,null===(u=o.effects)?o.effects=[l]:u.push(l))}else p={eventTime:p,lane:u,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,i|=u;if(null===(l=l.next)){if(null===(u=o.shared.pending))break;l=u.next,u.next=null,o.lastBaseUpdate=u,o.shared.pending=null}}null===f&&(c=d),o.baseState=c,o.firstBaseUpdate=s,o.lastBaseUpdate=f,Di|=i,e.lanes=i,e.memoizedState=d}}function fo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(l(191,a));a.call(r)}}}var po=(new r.Component).refs;function ho(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var mo={isMounted:function(e){return!!(e=e._reactInternals)&&Ge(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=cu(),a=su(e),o=io(r,a);o.payload=t,null!=n&&(o.callback=n),uo(e,o),fu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=cu(),a=su(e),o=io(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),uo(e,o),fu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=cu(),r=su(e),a=io(n,r);a.tag=2,null!=t&&(a.callback=t),uo(e,a),fu(e,r,n)}};function vo(e,t,n,r,a,o,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,l):!t.prototype||!t.prototype.isPureReactComponent||(!cr(n,r)||!cr(a,o))}function yo(e,t,n){var r=!1,a=ca,o=t.contextType;return"object"==typeof o&&null!==o?o=ro(o):(a=ha(t)?da:sa.current,o=(r=null!=(r=t.contextTypes))?pa(e,a):ca),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=mo,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function go(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&mo.enqueueReplaceState(t,t.state,null)}function bo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=po,oo(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=ro(o):(o=ha(t)?da:sa.current,a.context=pa(e,o)),so(e,n,a,r),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(ho(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&mo.enqueueReplaceState(a,a.state,null),so(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var wo=Array.isArray;function ko(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===po&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function Eo(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function So(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Vu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function i(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=qu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=ko(e,t,n),r.return=e,r):((r=Wu(n.type,n.key,n.props,null,e.mode,r)).ref=ko(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ku(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Hu(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=qu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case E:return(n=Wu(t.type,t.key,t.props,null,e.mode,n)).ref=ko(e,null,t),n.return=e,n;case S:return(t=Ku(t,e.mode,n)).return=e,t}if(wo(t)||B(t))return(t=Hu(t,e.mode,n,null)).return=e,t;Eo(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case E:return n.key===a?n.type===x?f(e,t,n.props.children,r,a):c(e,t,n,r):null;case S:return n.key===a?s(e,t,n,r):null}if(wo(n)||B(n))return null!==a?null:f(e,t,n,r,null);Eo(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case E:return e=e.get(null===r.key?n:r.key)||null,r.type===x?f(t,e,r.props.children,a,r.key):c(t,e,r,a);case S:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(wo(r)||B(r))return f(t,e=e.get(n)||null,r,a,null);Eo(t,r)}return null}function m(a,l,i,u){for(var c=null,s=null,f=l,m=l=0,v=null;null!==f&&m<i.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var y=p(a,f,i[m],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(a,f),l=o(y,l,m),null===s?c=y:s.sibling=y,s=y,f=v}if(m===i.length)return n(a,f),c;if(null===f){for(;m<i.length;m++)null!==(f=d(a,i[m],u))&&(l=o(f,l,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(a,f);m<i.length;m++)null!==(v=h(f,a,m,i[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),l=o(v,l,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(a,e)})),c}function v(a,i,u,c){var s=B(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,m=i,v=i=0,y=null,g=u.next();null!==m&&!g.done;v++,g=u.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=p(a,m,g.value,c);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&t(a,m),i=o(b,i,v),null===f?s=b:f.sibling=b,f=b,m=y}if(g.done)return n(a,m),s;if(null===m){for(;!g.done;v++,g=u.next())null!==(g=d(a,g.value,c))&&(i=o(g,i,v),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(a,m);!g.done;v++,g=u.next())null!==(g=h(m,a,v,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),i=o(g,i,v),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach((function(e){return t(a,e)})),s}return function(e,r,o,u){var c="object"==typeof o&&null!==o&&o.type===x&&null===o.key;c&&(o=o.props.children);var s="object"==typeof o&&null!==o;if(s)switch(o.$$typeof){case E:e:{for(s=o.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(o.type===x){n(e,c.sibling),(r=a(c,o.props.children)).return=e,e=r;break e}break;default:if(c.elementType===o.type){n(e,c.sibling),(r=a(c,o.props)).ref=ko(e,c,o),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}o.type===x?((r=Hu(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=Wu(o.type,o.key,o.props,null,e.mode,u)).ref=ko(e,r,o),u.return=e,e=u)}return i(e);case S:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=a(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Ku(o,e.mode,u)).return=e,e=r}return i(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,o)).return=e,e=r):(n(e,r),(r=qu(o,e.mode,u)).return=e,e=r),i(e);if(wo(o))return m(e,r,o,u);if(B(o))return v(e,r,o,u);if(s&&Eo(e,o),void 0===o&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(l(152,q(e.type)||"Component"))}return n(e,r)}}var xo=So(!0),Co=So(!1),_o={},Po=la(_o),To=la(_o),Oo=la(_o);function No(e){if(e===_o)throw Error(l(174));return e}function Lo(e,t){switch(ua(Oo,t),ua(To,e),ua(Po,_o),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:he(null,"");break;default:t=he(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ia(Po),ua(Po,t)}function Ro(){ia(Po),ia(To),ia(Oo)}function zo(e){No(Oo.current);var t=No(Po.current),n=he(t,e.type);t!==n&&(ua(To,e),ua(Po,n))}function Mo(e){To.current===e&&(ia(Po),ia(To))}var Ao=la(0);function Io(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Fo=null,Do=null,Uo=!1;function jo(e,t){var n=$u(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function $o(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Bo(e){if(Uo){var t=Do;if(t){var n=t;if(!$o(e,t)){if(!(t=Hr(n.nextSibling))||!$o(e,t))return e.flags=-1025&e.flags|2,Uo=!1,void(Fo=e);jo(Fo,n)}Fo=e,Do=Hr(t.firstChild)}else e.flags=-1025&e.flags|2,Uo=!1,Fo=e}}function Vo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Fo=e}function Wo(e){if(e!==Fo)return!1;if(!Uo)return Vo(e),Uo=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!$r(t,e.memoizedProps))for(t=Do;t;)jo(e,t),t=Hr(t.nextSibling);if(Vo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Do=Hr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Do=null}}else Do=Fo?Hr(e.stateNode.nextSibling):null;return!0}function Ho(){Do=Fo=null,Uo=!1}var Qo=[];function qo(){for(var e=0;e<Qo.length;e++)Qo[e]._workInProgressVersionPrimary=null;Qo.length=0}var Ko=k.ReactCurrentDispatcher,Yo=k.ReactCurrentBatchConfig,Go=0,Xo=null,Zo=null,Jo=null,el=!1,tl=!1;function nl(){throw Error(l(321))}function rl(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ir(e[n],t[n]))return!1;return!0}function al(e,t,n,r,a,o){if(Go=o,Xo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Ko.current=null===e||null===e.memoizedState?Nl:Ll,e=n(r,a),tl){o=0;do{if(tl=!1,!(25>o))throw Error(l(301));o+=1,Jo=Zo=null,t.updateQueue=null,Ko.current=Rl,e=n(r,a)}while(tl)}if(Ko.current=Ol,t=null!==Zo&&null!==Zo.next,Go=0,Jo=Zo=Xo=null,el=!1,t)throw Error(l(300));return e}function ol(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Jo?Xo.memoizedState=Jo=e:Jo=Jo.next=e,Jo}function ll(){if(null===Zo){var e=Xo.alternate;e=null!==e?e.memoizedState:null}else e=Zo.next;var t=null===Jo?Xo.memoizedState:Jo.next;if(null!==t)Jo=t,Zo=e;else{if(null===e)throw Error(l(310));e={memoizedState:(Zo=e).memoizedState,baseState:Zo.baseState,baseQueue:Zo.baseQueue,queue:Zo.queue,next:null},null===Jo?Xo.memoizedState=Jo=e:Jo=Jo.next=e}return Jo}function il(e,t){return"function"==typeof t?t(e):t}function ul(e){var t=ll(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=Zo,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var i=a.next;a.next=o.next,o.next=i}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=i=o=null,c=a;do{var s=c.lane;if((Go&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(i=u=f,o=r):u=u.next=f,Xo.lanes|=s,Di|=s}c=c.next}while(null!==c&&c!==a);null===u?o=r:u.next=i,ir(r,t.memoizedState)||(Ml=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function cl(e){var t=ll(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{o=e(o,i.action),i=i.next}while(i!==a);ir(o,t.memoizedState)||(Ml=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function sl(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Go&e)===e)&&(t._workInProgressVersionPrimary=r,Qo.push(t))),e)return n(t._source);throw Qo.push(t),Error(l(350))}function fl(e,t,n,r){var a=Ni;if(null===a)throw Error(l(349));var o=t._getVersion,i=o(t._source),u=Ko.current,c=u.useState((function(){return sl(a,t,n)})),s=c[1],f=c[0];c=Jo;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var v=Xo;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=s;var e=o(t._source);if(!ir(i,e)){e=n(t._source),ir(f,e)||(s(e),e=su(v),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,l=e;0<l;){var u=31-Wt(l),c=1<<u;r[u]|=e,l&=~c}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=su(v);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),ir(h,n)&&ir(m,t)&&ir(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:il,lastRenderedState:f}).dispatch=s=Tl.bind(null,Xo,e),c.queue=e,c.baseQueue=null,f=sl(a,t,n),c.memoizedState=c.baseState=f),f}function dl(e,t,n){return fl(ll(),e,t,n)}function pl(e){var t=ol();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:il,lastRenderedState:e}).dispatch=Tl.bind(null,Xo,e),[t.memoizedState,e]}function hl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Xo.updateQueue)?(t={lastEffect:null},Xo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ml(e){return e={current:e},ol().memoizedState=e}function vl(){return ll().memoizedState}function yl(e,t,n,r){var a=ol();Xo.flags|=e,a.memoizedState=hl(1|t,n,void 0,void 0===r?null:r)}function gl(e,t,n,r){var a=ll();r=void 0===r?null:r;var o=void 0;if(null!==Zo){var l=Zo.memoizedState;if(o=l.destroy,null!==r&&rl(r,l.deps))return void hl(t,n,o,r)}Xo.flags|=e,a.memoizedState=hl(1|t,n,o,r)}function bl(e,t){return yl(516,4,e,t)}function wl(e,t){return gl(516,4,e,t)}function kl(e,t){return gl(4,2,e,t)}function El(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Sl(e,t,n){return n=null!=n?n.concat([e]):null,gl(4,2,El.bind(null,t,e),n)}function xl(){}function Cl(e,t){var n=ll();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&rl(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function _l(e,t){var n=ll();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&rl(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Pl(e,t){var n=$a();Va(98>n?98:n,(function(){e(!0)})),Va(97<n?97:n,(function(){var n=Yo.transition;Yo.transition=1;try{e(!1),t()}finally{Yo.transition=n}}))}function Tl(e,t,n){var r=cu(),a=su(e),o={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},l=t.pending;if(null===l?o.next=o:(o.next=l.next,l.next=o),t.pending=o,l=e.alternate,e===Xo||null!==l&&l===Xo)tl=el=!0;else{if(0===e.lanes&&(null===l||0===l.lanes)&&null!==(l=t.lastRenderedReducer))try{var i=t.lastRenderedState,u=l(i,n);if(o.eagerReducer=l,o.eagerState=u,ir(u,i))return}catch(e){}fu(e,a,r)}}var Ol={readContext:ro,useCallback:nl,useContext:nl,useEffect:nl,useImperativeHandle:nl,useLayoutEffect:nl,useMemo:nl,useReducer:nl,useRef:nl,useState:nl,useDebugValue:nl,useDeferredValue:nl,useTransition:nl,useMutableSource:nl,useOpaqueIdentifier:nl,unstable_isNewReconciler:!1},Nl={readContext:ro,useCallback:function(e,t){return ol().memoizedState=[e,void 0===t?null:t],e},useContext:ro,useEffect:bl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,yl(4,2,El.bind(null,t,e),n)},useLayoutEffect:function(e,t){return yl(4,2,e,t)},useMemo:function(e,t){var n=ol();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ol();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Tl.bind(null,Xo,e),[r.memoizedState,e]},useRef:ml,useState:pl,useDebugValue:xl,useDeferredValue:function(e){var t=pl(e),n=t[0],r=t[1];return bl((function(){var t=Yo.transition;Yo.transition=1;try{r(e)}finally{Yo.transition=t}}),[e]),n},useTransition:function(){var e=pl(!1),t=e[0];return ml(e=Pl.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ol();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},fl(r,e,t,n)},useOpaqueIdentifier:function(){if(Uo){var e=!1,t=function(e){return{$$typeof:A,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(qr++).toString(36))),Error(l(355))})),n=pl(t)[1];return 0==(2&Xo.mode)&&(Xo.flags|=516,hl(5,(function(){n("r:"+(qr++).toString(36))}),void 0,null)),t}return pl(t="r:"+(qr++).toString(36)),t},unstable_isNewReconciler:!1},Ll={readContext:ro,useCallback:Cl,useContext:ro,useEffect:wl,useImperativeHandle:Sl,useLayoutEffect:kl,useMemo:_l,useReducer:ul,useRef:vl,useState:function(){return ul(il)},useDebugValue:xl,useDeferredValue:function(e){var t=ul(il),n=t[0],r=t[1];return wl((function(){var t=Yo.transition;Yo.transition=1;try{r(e)}finally{Yo.transition=t}}),[e]),n},useTransition:function(){var e=ul(il)[0];return[vl().current,e]},useMutableSource:dl,useOpaqueIdentifier:function(){return ul(il)[0]},unstable_isNewReconciler:!1},Rl={readContext:ro,useCallback:Cl,useContext:ro,useEffect:wl,useImperativeHandle:Sl,useLayoutEffect:kl,useMemo:_l,useReducer:cl,useRef:vl,useState:function(){return cl(il)},useDebugValue:xl,useDeferredValue:function(e){var t=cl(il),n=t[0],r=t[1];return wl((function(){var t=Yo.transition;Yo.transition=1;try{r(e)}finally{Yo.transition=t}}),[e]),n},useTransition:function(){var e=cl(il)[0];return[vl().current,e]},useMutableSource:dl,useOpaqueIdentifier:function(){return cl(il)[0]},unstable_isNewReconciler:!1},zl=k.ReactCurrentOwner,Ml=!1;function Al(e,t,n,r){t.child=null===e?Co(t,null,n,r):xo(t,e.child,n,r)}function Il(e,t,n,r,a){n=n.render;var o=t.ref;return no(t,a),r=al(e,t,n,r,o,a),null===e||Ml?(t.flags|=1,Al(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,ni(e,t,a))}function Fl(e,t,n,r,a,o){if(null===e){var l=n.type;return"function"!=typeof l||Bu(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Wu(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Dl(e,t,l,r,a,o))}return l=e.child,0==(a&o)&&(a=l.memoizedProps,(n=null!==(n=n.compare)?n:cr)(a,r)&&e.ref===t.ref)?ni(e,t,o):(t.flags|=1,(e=Vu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Dl(e,t,n,r,a,o){if(null!==e&&cr(e.memoizedProps,r)&&e.ref===t.ref){if(Ml=!1,0==(o&a))return t.lanes=e.lanes,ni(e,t,o);0!=(16384&e.flags)&&(Ml=!0)}return $l(e,t,n,r,o)}function Ul(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},bu(t,n);else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},bu(t,e),null;t.memoizedState={baseLanes:0},bu(t,null!==o?o.baseLanes:n)}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,bu(t,r);return Al(e,t,a,n),t.child}function jl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function $l(e,t,n,r,a){var o=ha(n)?da:sa.current;return o=pa(t,o),no(t,a),n=al(e,t,n,r,o,a),null===e||Ml?(t.flags|=1,Al(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,ni(e,t,a))}function Bl(e,t,n,r,a){if(ha(n)){var o=!0;ga(t)}else o=!1;if(no(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),yo(t,n,r),bo(t,n,r,a),r=!0;else if(null===e){var l=t.stateNode,i=t.memoizedProps;l.props=i;var u=l.context,c=n.contextType;"object"==typeof c&&null!==c?c=ro(c):c=pa(t,c=ha(n)?da:sa.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==r||u!==c)&&go(t,l,r,c),ao=!1;var d=t.memoizedState;l.state=d,so(t,r,l,a),u=t.memoizedState,i!==r||d!==u||fa.current||ao?("function"==typeof s&&(ho(t,n,s,r),u=t.memoizedState),(i=ao||vo(t,n,i,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.flags|=4)):("function"==typeof l.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=i):("function"==typeof l.componentDidMount&&(t.flags|=4),r=!1)}else{l=t.stateNode,lo(e,t),i=t.memoizedProps,c=t.type===t.elementType?i:Ka(t.type,i),l.props=c,f=t.pendingProps,d=l.context,"object"==typeof(u=n.contextType)&&null!==u?u=ro(u):u=pa(t,u=ha(n)?da:sa.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==f||d!==u)&&go(t,l,r,u),ao=!1,d=t.memoizedState,l.state=d,so(t,r,l,a);var h=t.memoizedState;i!==f||d!==h||fa.current||ao?("function"==typeof p&&(ho(t,n,p,r),h=t.memoizedState),(c=ao||vo(t,n,c,r,d,h,u))?(s||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,h,u),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof l.componentDidUpdate&&(t.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),l.props=r,l.state=h,l.context=u,r=c):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Vl(e,t,n,r,o,a)}function Vl(e,t,n,r,a,o){jl(e,t);var l=0!=(64&t.flags);if(!r&&!l)return a&&ba(t,n,!1),ni(e,t,o);r=t.stateNode,zl.current=t;var i=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&l?(t.child=xo(t,e.child,null,o),t.child=xo(t,null,i,o)):Al(e,t,i,o),t.memoizedState=r.state,a&&ba(t,n,!0),t.child}function Wl(e){var t=e.stateNode;t.pendingContext?va(0,t.pendingContext,t.pendingContext!==t.context):t.context&&va(0,t.context,!1),Lo(e,t.containerInfo)}var Hl,Ql,ql,Kl={dehydrated:null,retryLane:0};function Yl(e,t,n){var r,a=t.pendingProps,o=Ao.current,l=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(l=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),ua(Ao,1&o),null===e?(void 0!==a.fallback&&Bo(t),e=a.children,o=a.fallback,l?(e=Gl(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Kl,e):"number"==typeof a.unstable_expectedLoadTime?(e=Gl(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Kl,t.lanes=33554432,e):((n=Qu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,l?(a=Zl(e,t,a.children,a.fallback,n),l=t.child,o=e.child.memoizedState,l.memoizedState=null===o?{baseLanes:n}:{baseLanes:o.baseLanes|n},l.childLanes=e.childLanes&~n,t.memoizedState=Kl,a):(n=Xl(e,t,a.children,n),t.memoizedState=null,n))}function Gl(e,t,n,r){var a=e.mode,o=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==o?(o.childLanes=0,o.pendingProps=t):o=Qu(t,a,0,null),n=Hu(n,a,r,null),o.return=e,n.return=e,o.sibling=n,e.child=o,n}function Xl(e,t,n,r){var a=e.child;return e=a.sibling,n=Vu(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}function Zl(e,t,n,r,a){var o=t.mode,l=e.child;e=l.sibling;var i={mode:"hidden",children:n};return 0==(2&o)&&t.child!==l?((n=t.child).childLanes=0,n.pendingProps=i,null!==(l=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=l,l.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Vu(l,i),null!==e?r=Vu(e,r):(r=Hu(r,o,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}function Jl(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),to(e.return,t)}function ei(e,t,n,r,a,o){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:o}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailMode=a,l.lastEffect=o)}function ti(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(Al(e,t,r.children,n),0!=(2&(r=Ao.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Jl(e,n);else if(19===e.tag)Jl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ua(Ao,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===Io(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),ei(t,!1,a,n,o,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Io(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}ei(t,!0,n,null,o,t.lastEffect);break;case"together":ei(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function ni(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Di|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Vu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Vu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function ri(e,t){if(!Uo)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ai(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ha(t.type)&&ma(),null;case 3:return Ro(),ia(fa),ia(sa),qo(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Wo(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Mo(t);var o=No(Oo.current);if(n=t.type,null!==e&&null!=t.stateNode)Ql(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=No(Po.current),Wo(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[Yr]=t,r[Gr]=i,n){case"dialog":Pr("cancel",r),Pr("close",r);break;case"iframe":case"object":case"embed":Pr("load",r);break;case"video":case"audio":for(e=0;e<Sr.length;e++)Pr(Sr[e],r);break;case"source":Pr("error",r);break;case"img":case"image":case"link":Pr("error",r),Pr("load",r);break;case"details":Pr("toggle",r);break;case"input":ee(r,i),Pr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Pr("invalid",r);break;case"textarea":ue(r,i),Pr("invalid",r)}for(var c in xe(n,i),e=null,i)i.hasOwnProperty(c)&&(o=i[c],"children"===c?"string"==typeof o?r.textContent!==o&&(e=["children",o]):"number"==typeof o&&r.textContent!==""+o&&(e=["children",""+o]):u.hasOwnProperty(c)&&null!=o&&"onScroll"===c&&Pr("scroll",r));switch(n){case"input":G(r),re(r,i,!0);break;case"textarea":G(r),se(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Fr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(c=9===o.nodeType?o:o.ownerDocument,e===fe&&(e=pe(n)),e===fe?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(n,{is:r.is}):(e=c.createElement(n),"select"===n&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,n),e[Yr]=t,e[Gr]=r,Hl(e,t),t.stateNode=e,c=Ce(n,r),n){case"dialog":Pr("cancel",e),Pr("close",e),o=r;break;case"iframe":case"object":case"embed":Pr("load",e),o=r;break;case"video":case"audio":for(o=0;o<Sr.length;o++)Pr(Sr[o],e);o=r;break;case"source":Pr("error",e),o=r;break;case"img":case"image":case"link":Pr("error",e),Pr("load",e),o=r;break;case"details":Pr("toggle",e),o=r;break;case"input":ee(e,r),o=J(e,r),Pr("invalid",e);break;case"option":o=oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=a({},r,{value:void 0}),Pr("invalid",e);break;case"textarea":ue(e,r),o=ie(e,r),Pr("invalid",e);break;default:o=r}xe(n,o);var s=o;for(i in s)if(s.hasOwnProperty(i)){var f=s[i];"style"===i?Ee(e,f):"dangerouslySetInnerHTML"===i?null!=(f=f?f.__html:void 0)&&ye(e,f):"children"===i?"string"==typeof f?("textarea"!==n||""!==f)&&ge(e,f):"number"==typeof f&&ge(e,""+f):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(u.hasOwnProperty(i)?null!=f&&"onScroll"===i&&Pr("scroll",e):null!=f&&w(e,i,f,c))}switch(n){case"input":G(e),re(e,r,!1);break;case"textarea":G(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?le(e,!!r.multiple,i,!1):null!=r.defaultValue&&le(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Fr)}jr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)ql(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=No(Oo.current),No(Po.current),Wo(t)?(r=t.stateNode,n=t.memoizedProps,r[Yr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Yr]=t,t.stateNode=r)}return null;case 13:return ia(Ao),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Wo(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ao.current)?0===Ai&&(Ai=3):(0!==Ai&&3!==Ai||(Ai=4),null===Ni||0==(134217727&Di)&&0==(134217727&Ui)||mu(Ni,Ri))),(r||n)&&(t.flags|=4),null);case 4:return Ro(),null===e&&Or(t.stateNode.containerInfo),null;case 10:return eo(t),null;case 17:return ha(t.type)&&ma(),null;case 19:if(ia(Ao),null===(r=t.memoizedState))return null;if(i=0!=(64&t.flags),null===(c=r.rendering))if(i)ri(r,!1);else{if(0!==Ai||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=Io(e))){for(t.flags|=64,ri(r,!1),null!==(i=c.updateQueue)&&(t.updateQueue=i,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(c=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=c.childLanes,i.lanes=c.lanes,i.child=c.child,i.memoizedProps=c.memoizedProps,i.memoizedState=c.memoizedState,i.updateQueue=c.updateQueue,i.type=c.type,e=c.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ua(Ao,1&Ao.current|2),t.child}e=e.sibling}null!==r.tail&&ja()>Vi&&(t.flags|=64,i=!0,ri(r,!1),t.lanes=33554432)}else{if(!i)if(null!==(e=Io(c))){if(t.flags|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ri(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!Uo)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*ja()-r.renderingStartTime>Vi&&1073741824!==n&&(t.flags|=64,i=!0,ri(r,!1),t.lanes=33554432);r.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=r.last)?n.sibling=c:t.child=c,r.last=c)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=ja(),n.sibling=null,t=Ao.current,ua(Ao,i?1&t|2:1&t),n):null;case 23:case 24:return wu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(l(156,t.tag))}function oi(e){switch(e.tag){case 1:ha(e.type)&&ma();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Ro(),ia(fa),ia(sa),qo(),0!=(64&(t=e.flags)))throw Error(l(285));return e.flags=-4097&t|64,e;case 5:return Mo(e),null;case 13:return ia(Ao),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return ia(Ao),null;case 4:return Ro(),null;case 10:return eo(e),null;case 23:case 24:return wu(),null;default:return null}}function li(e,t){try{var n="",r=t;do{n+=Q(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function ii(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Hl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ql=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,No(Po.current);var l,i=null;switch(n){case"input":o=J(e,o),r=J(e,r),i=[];break;case"option":o=oe(e,o),r=oe(e,r),i=[];break;case"select":o=a({},o,{value:void 0}),r=a({},r,{value:void 0}),i=[];break;case"textarea":o=ie(e,o),r=ie(e,r),i=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=Fr)}for(f in xe(n,r),n=null,o)if(!r.hasOwnProperty(f)&&o.hasOwnProperty(f)&&null!=o[f])if("style"===f){var c=o[f];for(l in c)c.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?i||(i=[]):(i=i||[]).push(f,null));for(f in r){var s=r[f];if(c=null!=o?o[f]:void 0,r.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(n||(n={}),n[l]=s[l])}else n||(i||(i=[]),i.push(f,n)),n=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(i=i||[]).push(f,s)):"children"===f?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Pr("scroll",e),i||c===s||(i=[])):"object"==typeof s&&null!==s&&s.$$typeof===A?s.toString():(i=i||[]).push(f,s))}n&&(i=i||[]).push("style",n);var f=i;(t.updateQueue=f)&&(t.flags|=4)}},ql=function(e,t,n,r){n!==r&&(t.flags|=4)};var ui="function"==typeof WeakMap?WeakMap:Map;function ci(e,t,n){(n=io(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){qi||(qi=!0,Ki=r),ii(0,t)},n}function si(e,t,n){(n=io(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return ii(0,t),r(a)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Yi?Yi=new Set([this]):Yi.add(this),ii(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var fi="function"==typeof WeakSet?WeakSet:Set;function di(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Fu(e,t)}else t.current=null}function pi(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Ka(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Wr(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(l(163))}function hi(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Mu(n,e),zu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Ka(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&fo(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fo(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&jr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Et(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(l(163))}function mi(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=ke("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function vi(e,t){if(ka&&"function"==typeof ka.onCommitFiberUnmount)try{ka.onCommitFiberUnmount(wa,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Mu(t,n);else{r=t;try{a()}catch(e){Fu(r,e)}}n=n.next}while(n!==e)}break;case 1:if(di(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Fu(t,e)}break;case 5:di(t);break;case 4:Ei(e,t)}}function yi(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function gi(e){return 5===e.tag||3===e.tag||4===e.tag}function bi(e){e:{for(var t=e.return;null!==t;){if(gi(t))break e;t=t.return}throw Error(l(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.flags&&(ge(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||gi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?wi(e,n,t):ki(e,n,t)}function wi(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Fr));else if(4!==r&&null!==(e=e.child))for(wi(e,t,n),e=e.sibling;null!==e;)wi(e,t,n),e=e.sibling}function ki(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ki(e,t,n),e=e.sibling;null!==e;)ki(e,t,n),e=e.sibling}function Ei(e,t){for(var n,r,a=t,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(l(160));switch(n=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var i=e,u=a,c=u;;)if(vi(i,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(i=n,u=a.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(vi(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function Si(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Gr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Ce(e,a),t=Ce(e,r),a=0;a<o.length;a+=2){var i=o[a],u=o[a+1];"style"===i?Ee(n,u):"dangerouslySetInnerHTML"===i?ye(n,u):"children"===i?ge(n,u):w(n,i,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":ce(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?le(n,!!r.multiple,o,!1):e!==!!r.multiple&&(null!=r.defaultValue?le(n,!!r.multiple,r.defaultValue,!0):le(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,Et(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Bi=ja(),mi(t.child,!0)),void xi(t);case 19:return void xi(t);case 17:return;case 23:case 24:return void mi(t,null!==t.memoizedState)}throw Error(l(163))}function xi(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new fi),t.forEach((function(t){var r=Uu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function Ci(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(t=t.memoizedState)&&null===t.dehydrated)}var _i=Math.ceil,Pi=k.ReactCurrentDispatcher,Ti=k.ReactCurrentOwner,Oi=0,Ni=null,Li=null,Ri=0,zi=0,Mi=la(0),Ai=0,Ii=null,Fi=0,Di=0,Ui=0,ji=0,$i=null,Bi=0,Vi=1/0;function Wi(){Vi=ja()+500}var Hi,Qi=null,qi=!1,Ki=null,Yi=null,Gi=!1,Xi=null,Zi=90,Ji=[],eu=[],tu=null,nu=0,ru=null,au=-1,ou=0,lu=0,iu=null,uu=!1;function cu(){return 0!=(48&Oi)?ja():-1!==au?au:au=ja()}function su(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===$a()?1:2;if(0===ou&&(ou=Fi),0!==qa.transition){0!==lu&&(lu=null!==$i?$i.pendingLanes:0),e=ou;var t=4186112&~lu;return 0===(t&=-t)&&(0===(t=(e=4186112&~e)&-e)&&(t=8192)),t}return e=$a(),0!=(4&Oi)&&98===e?e=jt(12,ou):e=jt(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),ou),e}function fu(e,t,n){if(50<nu)throw nu=0,ru=null,Error(l(185));if(null===(e=du(e,t)))return null;Vt(e,t,n),e===Ni&&(Ui|=t,4===Ai&&mu(e,Ri));var r=$a();1===t?0!=(8&Oi)&&0==(48&Oi)?vu(e):(pu(e,n),0===Oi&&(Wi(),Ha())):(0==(4&Oi)||98!==r&&99!==r||(null===tu?tu=new Set([e]):tu.add(e)),pu(e,n)),$i=e}function du(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function pu(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,o=e.expirationTimes,i=e.pendingLanes;0<i;){var u=31-Wt(i),c=1<<u,s=o[u];if(-1===s){if(0==(c&r)||0!=(c&a)){s=t,Ft(c);var f=It;o[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);i&=~c}if(r=Dt(e,e===Ni?Ri:0),t=It,0===r)null!==n&&(n!==Ma&&xa(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Ma&&xa(n)}15===t?(n=vu.bind(null,e),null===Ia?(Ia=[n],Fa=Sa(Oa,Qa)):Ia.push(n),n=Ma):14===t?n=Wa(99,vu.bind(null,e)):n=Wa(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(l(358,e))}}(t),hu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function hu(e){if(au=-1,lu=ou=0,0!=(48&Oi))throw Error(l(327));var t=e.callbackNode;if(Ru()&&e.callbackNode!==t)return null;var n=Dt(e,e===Ni?Ri:0);if(0===n)return null;var r=n,a=Oi;Oi|=16;var o=Su();for(Ni===e&&Ri===r||(Wi(),ku(e,r));;)try{_u();break}catch(t){Eu(e,t)}if(Ja(),Pi.current=o,Oi=a,null!==Li?r=0:(Ni=null,Ri=0,r=Ai),0!=(Fi&Ui))ku(e,0);else if(0!==r){if(2===r&&(Oi|=64,e.hydrate&&(e.hydrate=!1,Wr(e.containerInfo)),0!==(n=Ut(e))&&(r=xu(e,n))),1===r)throw t=Ii,ku(e,0),mu(e,n),pu(e,ja()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(l(345));case 2:Ou(e);break;case 3:if(mu(e,n),(62914560&n)===n&&10<(r=Bi+500-ja())){if(0!==Dt(e,0))break;if(((a=e.suspendedLanes)&n)!==n){cu(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Br(Ou.bind(null,e),r);break}Ou(e);break;case 4:if(mu(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var i=31-Wt(n);o=1<<i,(i=r[i])>a&&(a=i),n&=~o}if(n=a,10<(n=(120>(n=ja()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*_i(n/1960))-n)){e.timeoutHandle=Br(Ou.bind(null,e),n);break}Ou(e);break;case 5:Ou(e);break;default:throw Error(l(329))}}return pu(e,ja()),e.callbackNode===t?hu.bind(null,e):null}function mu(e,t){for(t&=~ji,t&=~Ui,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Wt(t),r=1<<n;e[n]=-1,t&=~r}}function vu(e){if(0!=(48&Oi))throw Error(l(327));if(Ru(),e===Ni&&0!=(e.expiredLanes&Ri)){var t=Ri,n=xu(e,t);0!=(Fi&Ui)&&(n=xu(e,t=Dt(e,t)))}else n=xu(e,t=Dt(e,0));if(0!==e.tag&&2===n&&(Oi|=64,e.hydrate&&(e.hydrate=!1,Wr(e.containerInfo)),0!==(t=Ut(e))&&(n=xu(e,t))),1===n)throw n=Ii,ku(e,0),mu(e,t),pu(e,ja()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Ou(e),pu(e,ja()),null}function yu(e,t){var n=Oi;Oi|=1;try{return e(t)}finally{0===(Oi=n)&&(Wi(),Ha())}}function gu(e,t){var n=Oi;Oi&=-2,Oi|=8;try{return e(t)}finally{0===(Oi=n)&&(Wi(),Ha())}}function bu(e,t){ua(Mi,zi),zi|=t,Fi|=t}function wu(){zi=Mi.current,ia(Mi)}function ku(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Vr(n)),null!==Li)for(n=Li.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ma();break;case 3:Ro(),ia(fa),ia(sa),qo();break;case 5:Mo(r);break;case 4:Ro();break;case 13:case 19:ia(Ao);break;case 10:eo(r);break;case 23:case 24:wu()}n=n.return}Ni=e,Li=Vu(e.current,null),Ri=zi=Fi=t,Ai=0,Ii=null,ji=Ui=Di=0}function Eu(e,t){for(;;){var n=Li;try{if(Ja(),Ko.current=Ol,el){for(var r=Xo.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}el=!1}if(Go=0,Jo=Zo=Xo=null,tl=!1,Ti.current=null,null===n||null===n.return){Ai=1,Ii=t,Li=null;break}e:{var o=e,l=n.return,i=n,u=t;if(t=Ri,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u;if(0==(2&i.mode)){var s=i.alternate;s?(i.updateQueue=s.updateQueue,i.memoizedState=s.memoizedState,i.lanes=s.lanes):(i.updateQueue=null,i.memoizedState=null)}var f=0!=(1&Ao.current),d=l;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var y=new Set;y.add(c),d.updateQueue=y}else v.add(c);if(0==(2&d.mode)){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var g=io(-1,1);g.tag=2,uo(i,g)}i.lanes|=1;break e}u=void 0,i=t;var b=o.pingCache;if(null===b?(b=o.pingCache=new ui,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(i)){u.add(i);var w=Du.bind(null,o,c,i);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((q(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Ai&&(Ai=2),u=li(u,i),d=l;do{switch(d.tag){case 3:o=u,d.flags|=4096,t&=-t,d.lanes|=t,co(d,ci(0,o,t));break e;case 1:o=u;var k=d.type,E=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==E&&"function"==typeof E.componentDidCatch&&(null===Yi||!Yi.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,co(d,si(d,o,t));break e}}d=d.return}while(null!==d)}Tu(n)}catch(e){t=e,Li===n&&null!==n&&(Li=n=n.return);continue}break}}function Su(){var e=Pi.current;return Pi.current=Ol,null===e?Ol:e}function xu(e,t){var n=Oi;Oi|=16;var r=Su();for(Ni===e&&Ri===t||ku(e,t);;)try{Cu();break}catch(t){Eu(e,t)}if(Ja(),Oi=n,Pi.current=r,null!==Li)throw Error(l(261));return Ni=null,Ri=0,Ai}function Cu(){for(;null!==Li;)Pu(Li)}function _u(){for(;null!==Li&&!Ca();)Pu(Li)}function Pu(e){var t=Hi(e.alternate,e,zi);e.memoizedProps=e.pendingProps,null===t?Tu(e):Li=t,Ti.current=null}function Tu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=ai(n,t,zi)))return void(Li=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&zi)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=oi(t)))return n.flags&=2047,void(Li=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Li=t);Li=t=e}while(null!==t);0===Ai&&(Ai=5)}function Ou(e){var t=$a();return Va(99,Nu.bind(null,e,t)),null}function Nu(e,t){do{Ru()}while(null!==Xi);if(0!=(48&Oi))throw Error(l(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(l(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,o=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var i=e.eventTimes,u=e.expirationTimes;0<o;){var c=31-Wt(o),s=1<<c;a[c]=0,i[c]=-1,u[c]=-1,o&=~s}if(null!==tu&&0==(24&r)&&tu.has(e)&&tu.delete(e),e===Ni&&(Li=Ni=null,Ri=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=Oi,Oi|=32,Ti.current=null,Dr=Yt,hr(i=pr())){if("selectionStart"in i)u={start:i.selectionStart,end:i.selectionEnd};else e:if(u=(u=i.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,o=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,v=i,y=null;t:for(;;){for(var g;v!==u||0!==o&&3!==v.nodeType||(d=f+o),v!==c||0!==s&&3!==v.nodeType||(p=f+s),3===v.nodeType&&(f+=v.nodeValue.length),null!==(g=v.firstChild);)y=v,v=g;for(;;){if(v===i)break t;if(y===u&&++h===o&&(d=f),y===c&&++m===s&&(p=f),null!==(g=v.nextSibling))break;y=(v=y).parentNode}v=g}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Ur={focusedElem:i,selectionRange:u},Yt=!1,iu=null,uu=!1,Qi=r;do{try{Lu()}catch(e){if(null===Qi)throw Error(l(330));Fu(Qi,e),Qi=Qi.nextEffect}}while(null!==Qi);iu=null,Qi=r;do{try{for(i=e;null!==Qi;){var b=Qi.flags;if(16&b&&ge(Qi.stateNode,""),128&b){var w=Qi.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:bi(Qi),Qi.flags&=-3;break;case 6:bi(Qi),Qi.flags&=-3,Si(Qi.alternate,Qi);break;case 1024:Qi.flags&=-1025;break;case 1028:Qi.flags&=-1025,Si(Qi.alternate,Qi);break;case 4:Si(Qi.alternate,Qi);break;case 8:Ei(i,u=Qi);var E=u.alternate;yi(u),null!==E&&yi(E)}Qi=Qi.nextEffect}}catch(e){if(null===Qi)throw Error(l(330));Fu(Qi,e),Qi=Qi.nextEffect}}while(null!==Qi);if(k=Ur,w=pr(),b=k.focusedElem,i=k.selectionRange,w!==b&&b&&b.ownerDocument&&dr(b.ownerDocument.documentElement,b)){null!==i&&hr(b)&&(w=i.start,void 0===(k=i.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,E=Math.min(i.start,u),i=void 0===i.end?E:Math.min(i.end,u),!k.extend&&E>i&&(u=i,i=E,E=u),u=fr(b,E),o=fr(b,i),u&&o&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==o.node||k.focusOffset!==o.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),E>i?(k.addRange(w),k.extend(o.node,o.offset)):(w.setEnd(o.node,o.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Yt=!!Dr,Ur=Dr=null,e.current=n,Qi=r;do{try{for(b=e;null!==Qi;){var S=Qi.flags;if(36&S&&hi(b,Qi.alternate,Qi),128&S){w=void 0;var x=Qi.ref;if(null!==x){var C=Qi.stateNode;switch(Qi.tag){case 5:w=C;break;default:w=C}"function"==typeof x?x(w):x.current=w}}Qi=Qi.nextEffect}}catch(e){if(null===Qi)throw Error(l(330));Fu(Qi,e),Qi=Qi.nextEffect}}while(null!==Qi);Qi=null,Aa(),Oi=a}else e.current=n;if(Gi)Gi=!1,Xi=e,Zi=t;else for(Qi=r;null!==Qi;)t=Qi.nextEffect,Qi.nextEffect=null,8&Qi.flags&&((S=Qi).sibling=null,S.stateNode=null),Qi=t;if(0===(r=e.pendingLanes)&&(Yi=null),1===r?e===ru?nu++:(nu=0,ru=e):nu=0,n=n.stateNode,ka&&"function"==typeof ka.onCommitFiberRoot)try{ka.onCommitFiberRoot(wa,n,void 0,64==(64&n.current.flags))}catch(e){}if(pu(e,ja()),qi)throw qi=!1,e=Ki,Ki=null,e;return 0!=(8&Oi)||Ha(),null}function Lu(){for(;null!==Qi;){var e=Qi.alternate;uu||null===iu||(0!=(8&Qi.flags)?et(Qi,iu)&&(uu=!0):13===Qi.tag&&Ci(e,Qi)&&et(Qi,iu)&&(uu=!0));var t=Qi.flags;0!=(256&t)&&pi(e,Qi),0==(512&t)||Gi||(Gi=!0,Wa(97,(function(){return Ru(),null}))),Qi=Qi.nextEffect}}function Ru(){if(90!==Zi){var e=97<Zi?97:Zi;return Zi=90,Va(e,Au)}return!1}function zu(e,t){Ji.push(t,e),Gi||(Gi=!0,Wa(97,(function(){return Ru(),null})))}function Mu(e,t){eu.push(t,e),Gi||(Gi=!0,Wa(97,(function(){return Ru(),null})))}function Au(){if(null===Xi)return!1;var e=Xi;if(Xi=null,0!=(48&Oi))throw Error(l(331));var t=Oi;Oi|=32;var n=eu;eu=[];for(var r=0;r<n.length;r+=2){var a=n[r],o=n[r+1],i=a.destroy;if(a.destroy=void 0,"function"==typeof i)try{i()}catch(e){if(null===o)throw Error(l(330));Fu(o,e)}}for(n=Ji,Ji=[],r=0;r<n.length;r+=2){a=n[r],o=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===o)throw Error(l(330));Fu(o,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Oi=t,Ha(),!0}function Iu(e,t,n){uo(e,t=ci(0,t=li(n,t),1)),t=cu(),null!==(e=du(e,1))&&(Vt(e,1,t),pu(e,t))}function Fu(e,t){if(3===e.tag)Iu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Iu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Yi||!Yi.has(r))){var a=si(n,e=li(t,e),1);if(uo(n,a),a=cu(),null!==(n=du(n,1)))Vt(n,1,a),pu(n,a);else if("function"==typeof r.componentDidCatch&&(null===Yi||!Yi.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Du(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=cu(),e.pingedLanes|=e.suspendedLanes&n,Ni===e&&(Ri&n)===n&&(4===Ai||3===Ai&&(62914560&Ri)===Ri&&500>ja()-Bi?ku(e,0):ji|=n),pu(e,t)}function Uu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===$a()?1:2:(0===ou&&(ou=Fi),0===(t=$t(62914560&~ou))&&(t=4194304))),n=cu(),null!==(e=du(e,t))&&(Vt(e,t,n),pu(e,n))}function ju(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function $u(e,t,n,r){return new ju(e,t,n,r)}function Bu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Vu(e,t){var n=e.alternate;return null===n?((n=$u(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Wu(e,t,n,r,a,o){var i=2;if(r=e,"function"==typeof e)Bu(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case x:return Hu(n.children,a,o,t);case I:i=8,a|=16;break;case C:i=8,a|=1;break;case _:return(e=$u(12,n,t,8|a)).elementType=_,e.type=_,e.lanes=o,e;case N:return(e=$u(13,n,t,a)).type=N,e.elementType=N,e.lanes=o,e;case L:return(e=$u(19,n,t,a)).elementType=L,e.lanes=o,e;case F:return Qu(n,a,o,t);case D:return(e=$u(24,n,t,a)).elementType=D,e.lanes=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:i=10;break e;case T:i=9;break e;case O:i=11;break e;case R:i=14;break e;case z:i=16,r=null;break e;case M:i=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=$u(i,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Hu(e,t,n,r){return(e=$u(7,e,r,t)).lanes=n,e}function Qu(e,t,n,r){return(e=$u(23,e,r,t)).elementType=F,e.lanes=n,e}function qu(e,t,n){return(e=$u(6,e,null,t)).lanes=n,e}function Ku(e,t,n){return(t=$u(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Yu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Bt(0),this.expirationTimes=Bt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Bt(0),this.mutableSourceEagerHydrationData=null}function Gu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Xu(e,t,n,r){var a=t.current,o=cu(),i=su(a);e:if(n){t:{if(Ge(n=n._reactInternals)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(ha(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(ha(c)){n=ya(n,c,u);break e}}n=u}else n=ca;return null===t.context?t.context=n:t.pendingContext=n,(t=io(o,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),uo(a,t),fu(a,i,o),i}function Zu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Ju(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function ec(e,t){Ju(e,t),(e=e.alternate)&&Ju(e,t)}function tc(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Yu(e,t,null!=n&&!0===n.hydrate),t=$u(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,oo(t),e[Xr]=n.current,Or(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function nc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function rc(e,t,n,r,a){var o=n._reactRootContainer;if(o){var l=o._internalRoot;if("function"==typeof a){var i=a;a=function(){var e=Zu(l);i.call(e)}}Xu(t,l,e,a)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new tc(e,0,t?{hydrate:!0}:void 0)}(n,r),l=o._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Zu(l);u.call(e)}}gu((function(){Xu(t,l,e,a)}))}return Zu(l)}function ac(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nc(t))throw Error(l(200));return Gu(e,t,null,n)}Hi=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||fa.current)Ml=!0;else{if(0==(n&r)){switch(Ml=!1,t.tag){case 3:Wl(t),Ho();break;case 5:zo(t);break;case 1:ha(t.type)&&ga(t);break;case 4:Lo(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;ua(Ya,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Yl(e,t,n):(ua(Ao,1&Ao.current),null!==(t=ni(e,t,n))?t.sibling:null);ua(Ao,1&Ao.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return ti(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ua(Ao,Ao.current),r)break;return null;case 23:case 24:return t.lanes=0,Ul(e,t,n)}return ni(e,t,n)}Ml=0!=(16384&e.flags)}else Ml=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=pa(t,sa.current),no(t,n),a=al(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ha(r)){var o=!0;ga(t)}else o=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,oo(t);var i=r.getDerivedStateFromProps;"function"==typeof i&&ho(t,r,i,e),a.updater=mo,t.stateNode=a,a._reactInternals=t,bo(t,r,e,n),t=Vl(null,t,r,!0,o,n)}else t.tag=0,Al(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(o=a._init)(a._payload),t.type=a,o=t.tag=function(e){if("function"==typeof e)return Bu(e)?1:0;if(null!=e){if((e=e.$$typeof)===O)return 11;if(e===R)return 14}return 2}(a),e=Ka(a,e),o){case 0:t=$l(null,t,a,e,n);break e;case 1:t=Bl(null,t,a,e,n);break e;case 11:t=Il(null,t,a,e,n);break e;case 14:t=Fl(null,t,a,Ka(a.type,e),r,n);break e}throw Error(l(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,$l(e,t,r,a=t.elementType===r?a:Ka(r,a),n);case 1:return r=t.type,a=t.pendingProps,Bl(e,t,r,a=t.elementType===r?a:Ka(r,a),n);case 3:if(Wl(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,lo(e,t),so(t,r,null,n),(r=t.memoizedState.element)===a)Ho(),t=ni(e,t,n);else{if((o=(a=t.stateNode).hydrate)&&(Do=Hr(t.stateNode.containerInfo.firstChild),Fo=t,o=Uo=!0),o){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(o=e[a])._workInProgressVersionPrimary=e[a+1],Qo.push(o);for(n=Co(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Al(e,t,r,n),Ho();t=t.child}return t;case 5:return zo(t),null===e&&Bo(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,i=a.children,$r(r,a)?i=null:null!==o&&$r(r,o)&&(t.flags|=16),jl(e,t),Al(e,t,i,n),t.child;case 6:return null===e&&Bo(t),null;case 13:return Yl(e,t,n);case 4:return Lo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=xo(t,null,r,n):Al(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Il(e,t,r,a=t.elementType===r?a:Ka(r,a),n);case 7:return Al(e,t,t.pendingProps,n),t.child;case 8:case 12:return Al(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,i=t.memoizedProps,o=a.value;var u=t.type._context;if(ua(Ya,u._currentValue),u._currentValue=o,null!==i)if(u=i.value,0===(o=ir(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(i.children===a.children&&!fa.current){t=ni(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){i=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&o)){1===u.tag&&((s=io(-1,n&-n)).tag=2,uo(u,s)),u.lanes|=n,null!==(s=u.alternate)&&(s.lanes|=n),to(u.return,n),c.lanes|=n;break}s=s.next}}else i=10===u.tag&&u.type===t.type?null:u.child;if(null!==i)i.return=u;else for(i=u;null!==i;){if(i===t){i=null;break}if(null!==(u=i.sibling)){u.return=i.return,i=u;break}i=i.return}u=i}Al(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,no(t,n),r=r(a=ro(a,o.unstable_observedBits)),t.flags|=1,Al(e,t,r,n),t.child;case 14:return o=Ka(a=t.type,t.pendingProps),Fl(e,t,a,o=Ka(a.type,o),r,n);case 15:return Dl(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Ka(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,ha(r)?(e=!0,ga(t)):e=!1,no(t,n),yo(t,r,a),bo(t,r,a,n),Vl(null,t,r,!0,e,n);case 19:return ti(e,t,n);case 23:case 24:return Ul(e,t,n)}throw Error(l(156,t.tag))},tc.prototype.render=function(e){Xu(e,this._internalRoot,null,null)},tc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Xu(null,e,null,(function(){t[Xr]=null}))},tt=function(e){13===e.tag&&(fu(e,4,cu()),ec(e,4))},nt=function(e){13===e.tag&&(fu(e,67108864,cu()),ec(e,67108864))},rt=function(e){if(13===e.tag){var t=cu(),n=su(e);fu(e,n,t),ec(e,n)}},at=function(e,t){return t()},Pe=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=na(r);if(!a)throw Error(l(90));X(r),ne(r,a)}}}break;case"textarea":ce(e,n);break;case"select":null!=(t=n.value)&&le(e,!!n.multiple,t,!1)}},ze=yu,Me=function(e,t,n,r,a){var o=Oi;Oi|=4;try{return Va(98,e.bind(null,t,n,r,a))}finally{0===(Oi=o)&&(Wi(),Ha())}},Ae=function(){0==(49&Oi)&&(function(){if(null!==tu){var e=tu;tu=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,pu(e,ja())}))}Ha()}(),Ru())},Ie=function(e,t){var n=Oi;Oi|=2;try{return e(t)}finally{0===(Oi=n)&&(Wi(),Ha())}};var oc={Events:[ea,ta,na,Le,Re,Ru,{current:!1}]},lc={findFiberByHostInstance:Jr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},ic={bundleType:lc.bundleType,version:lc.version,rendererPackageName:lc.rendererPackageName,rendererConfig:lc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Je(e))?null:e.stateNode},findFiberByHostInstance:lc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var uc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!uc.isDisabled&&uc.supportsFiber)try{wa=uc.inject(ic),ka=uc}catch(ve){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=oc,t.createPortal=ac,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return e=null===(e=Je(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Oi;if(0!=(48&n))return e(t);Oi|=1;try{if(e)return Va(99,e.bind(null,t))}finally{Oi=n,Ha()}},t.hydrate=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!0,n)},t.render=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!nc(e))throw Error(l(40));return!!e._reactRootContainer&&(gu((function(){rc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Xr]=null}))})),!0)},t.unstable_batchedUpdates=yu,t.unstable_createPortal=function(e,t){return ac(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!nc(n))throw Error(l(200));if(null==e||void 0===e._reactInternals)throw Error(l(38));return rc(e,t,n,!1,r)},t.version="17.0.1"},674:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(223)},257:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,o=n?Symbol.for("react.fragment"):60107,l=n?Symbol.for("react.strict_mode"):60108,i=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,s=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,v=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,g=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case s:case f:case o:case i:case l:case p:return e;default:switch(e=e&&e.$$typeof){case c:case d:case v:case m:case u:return e;default:return t}}case a:return t}}}function E(e){return k(e)===f}t.AsyncMode=s,t.ConcurrentMode=f,t.ContextConsumer=c,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=o,t.Lazy=v,t.Memo=m,t.Portal=a,t.Profiler=i,t.StrictMode=l,t.Suspense=p,t.isAsyncMode=function(e){return E(e)||k(e)===s},t.isConcurrentMode=E,t.isContextConsumer=function(e){return k(e)===c},t.isContextProvider=function(e){return k(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return k(e)===d},t.isFragment=function(e){return k(e)===o},t.isLazy=function(e){return k(e)===v},t.isMemo=function(e){return k(e)===m},t.isPortal=function(e){return k(e)===a},t.isProfiler=function(e){return k(e)===i},t.isStrictMode=function(e){return k(e)===l},t.isSuspense=function(e){return k(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===f||e===i||e===l||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===m||e.$$typeof===u||e.$$typeof===c||e.$$typeof===d||e.$$typeof===g||e.$$typeof===b||e.$$typeof===w||e.$$typeof===y)},t.typeOf=k},216:(e,t,n)=>{"use strict";e.exports=n(257)},47:(e,t,n)=>{"use strict";var r=n(702),a=60103,o=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var l=60109,i=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),o=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),l=f("react.provider"),i=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function v(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function y(){}function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=v.prototype;var b=g.prototype=new y;b.constructor=g,r(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r,o={},l=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(l=""+t.key),t)k.call(t,r)&&!E.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:l,ref:i,props:o,_owner:w.current}}function x(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var C=/\/+/g;function _(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,n,r,l){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case o:u=!0}}if(u)return l=l(u=e),e=""===r?"."+_(u,0):r,Array.isArray(l)?(n="",null!=e&&(n=e.replace(C,"$&/")+"/"),P(l,t,n,"",(function(e){return e}))):null!=l&&(x(l)&&(l=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(l,n+(!l.key||u&&u.key===l.key?"":(""+l.key).replace(C,"$&/")+"/")+e)),t.push(l)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=r+_(i=e[c],c);u+=P(i,t,n,s,l)}else if("function"==typeof(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(i=e.next()).done;)u+=P(i=i.value,t,n,s=r+_(i,c++),l);else if("object"===i)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function T(e,t,n){if(null==e)return e;var r=[],a=0;return P(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function O(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var N={current:null};function L(){var e=N.current;if(null===e)throw Error(p(321));return e}var R={ReactCurrentDispatcher:N,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:T,forEach:function(e,t,n){T(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!x(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=g,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var o=r({},e.props),l=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=w.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!E.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:a,type:e.type,key:l,ref:i,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=x,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:O}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return L().useCallback(e,t)},t.useContext=function(e,t){return L().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return L().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return L().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return L().useLayoutEffect(e,t)},t.useMemo=function(e,t){return L().useMemo(e,t)},t.useReducer=function(e,t,n){return L().useReducer(e,t,n)},t.useRef=function(e){return L().useRef(e)},t.useState=function(e){return L().useState(e)},t.version="17.0.1"},401:(e,t,n)=>{"use strict";e.exports=n(47)},397:(e,t)=>{"use strict";var n,r,a,o;if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(f,0))},r=function(e,t){s=setTimeout(e,t)},a=function(){clearTimeout(s)},t.unstable_shouldYield=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,v=null,y=-1,g=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):g=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();b=e+g;try{v(!0,e)?k.postMessage(null):(m=!1,v=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){v=e,m||(m=!0,k.postMessage(null))},r=function(e,n){y=d((function(){e(t.unstable_now())}),n)},a=function(){p(y),y=-1}}function E(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<C(a,t)))break e;e[r]=t,e[n]=a,n=r}}function S(e){return void 0===(e=e[0])?null:e}function x(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var o=2*(r+1)-1,l=e[o],i=o+1,u=e[i];if(void 0!==l&&0>C(l,n))void 0!==u&&0>C(u,l)?(e[r]=u,e[i]=n,r=i):(e[r]=l,e[o]=n,r=o);else{if(!(void 0!==u&&0>C(u,n)))break e;e[r]=u,e[i]=n,r=i}}}return t}return null}function C(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var _=[],P=[],T=1,O=null,N=3,L=!1,R=!1,z=!1;function M(e){for(var t=S(P);null!==t;){if(null===t.callback)x(P);else{if(!(t.startTime<=e))break;x(P),t.sortIndex=t.expirationTime,E(_,t)}t=S(P)}}function A(e){if(z=!1,M(e),!R)if(null!==S(_))R=!0,n(I);else{var t=S(P);null!==t&&r(A,t.startTime-e)}}function I(e,n){R=!1,z&&(z=!1,a()),L=!0;var o=N;try{for(M(n),O=S(_);null!==O&&(!(O.expirationTime>n)||e&&!t.unstable_shouldYield());){var l=O.callback;if("function"==typeof l){O.callback=null,N=O.priorityLevel;var i=l(O.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?O.callback=i:O===S(_)&&x(_),M(n)}else x(_);O=S(_)}if(null!==O)var u=!0;else{var c=S(P);null!==c&&r(A,c.startTime-n),u=!1}return u}finally{O=null,N=o,L=!1}}var F=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){R||L||(R=!0,n(I))},t.unstable_getCurrentPriorityLevel=function(){return N},t.unstable_getFirstCallbackNode=function(){return S(_)},t.unstable_next=function(e){switch(N){case 1:case 2:case 3:var t=3;break;default:t=N}var n=N;N=t;try{return e()}finally{N=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=F,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=N;N=e;try{return t()}finally{N=n}},t.unstable_scheduleCallback=function(e,o,l){var i=t.unstable_now();switch("object"==typeof l&&null!==l?l="number"==typeof(l=l.delay)&&0<l?i+l:i:l=i,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:T++,callback:o,priorityLevel:e,startTime:l,expirationTime:u=l+u,sortIndex:-1},l>i?(e.sortIndex=l,E(P,e),null===S(_)&&e===S(P)&&(z?a():z=!0,r(A,l-i))):(e.sortIndex=u,E(_,e),R||L||(R=!0,n(I))),e},t.unstable_wrapCallback=function(e){var t=N;return function(){var n=N;N=t;try{return e.apply(this,arguments)}finally{N=n}}}},779:(e,t,n)=>{"use strict";e.exports=n(397)},780:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(122),a=n.n(r),o=n(814),l=n.n(o)()(a());l.push([e.id,"body {\r\n  color: blue;\r\n}","",{version:3,sources:["webpack://./src/app.css"],names:[],mappings:"AAAA;EACE,WAAW;AACb",sourcesContent:["body {\r\n  color: blue;\r\n}"],sourceRoot:""}]);const i=l},379:(e,t,n)=>{"use strict";var r,a=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),l=[];function i(e){for(var t=-1,n=0;n<l.length;n++)if(l[n].identifier===e){t=n;break}return t}function u(e,t){for(var n={},r=[],a=0;a<e.length;a++){var o=e[a],u=t.base?o[0]+t.base:o[0],c=n[u]||0,s="".concat(u," ").concat(c);n[u]=c+1;var f=i(s),d={css:o[1],media:o[2],sourceMap:o[3]};-1!==f?(l[f].references++,l[f].updater(d)):l.push({identifier:s,updater:v(d,t),references:1}),r.push(s)}return r}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=n.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var l=o(e.insert||"head");if(!l)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");l.appendChild(t)}return t}var s,f=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function d(e,t,n,r){var a=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(t,a);else{var o=document.createTextNode(a),l=e.childNodes;l[t]&&e.removeChild(l[t]),l.length?e.insertBefore(o,l[t]):e.appendChild(o)}}function p(e,t,n){var r=n.css,a=n.media,o=n.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var h=null,m=0;function v(e,t){var n,r,a;if(t.singleton){var o=m++;n=h||(h=c(t)),r=d.bind(null,n,o,!1),a=d.bind(null,n,o,!0)}else n=c(t),r=p.bind(null,n,t),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else a()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=a());var n=u(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var a=i(n[r]);l[a].references--}for(var o=u(e,t),c=0;c<n.length;c++){var s=i(n[c]);0===l[s].references&&(l[s].updater(),l.splice(s,1))}n=o}}}}},t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=n(379),t=n.n(e),r=n(780),a={insert:"head",singleton:!1};t()(r.Z,a);r.Z.locals;var o=n(401),l=n(674);function i(e,t){return(i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,i(e,t)}var c=n(398),s=n.n(c);function f(){return(f=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function d(e){return"/"===e.charAt(0)}function p(e,t){for(var n=t,r=n+1,a=e.length;r<a;n+=1,r+=1)e[n]=e[r];e.pop()}const h=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],a=t&&t.split("/")||[],o=e&&d(e),l=t&&d(t),i=o||l;if(e&&d(e)?a=r:r.length&&(a.pop(),a=a.concat(r)),!a.length)return"/";if(a.length){var u=a[a.length-1];n="."===u||".."===u||""===u}else n=!1;for(var c=0,s=a.length;s>=0;s--){var f=a[s];"."===f?p(a,s):".."===f?(p(a,s),c++):c&&(p(a,s),c--)}if(!i)for(;c--;c)a.unshift("..");!i||""===a[0]||a[0]&&d(a[0])||a.unshift("");var h=a.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h};var m="Invariant failed";const v=function(e,t){if(!e)throw new Error(m)};function y(e){return"/"===e.charAt(0)?e:"/"+e}function g(e){return"/"===e.charAt(0)?e.substr(1):e}function b(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function w(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function k(e){var t=e.pathname,n=e.search,r=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function E(e,t,n,r){var a;"string"==typeof e?(a=function(e){var t=e||"/",n="",r="",a=t.indexOf("#");-1!==a&&(r=t.substr(a),t=t.substr(0,a));var o=t.indexOf("?");return-1!==o&&(n=t.substr(o),t=t.substr(0,o)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(a=f({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==t&&void 0===a.state&&(a.state=t));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(a.key=n),r?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=h(a.pathname,r.pathname)):a.pathname=r.pathname:a.pathname||(a.pathname="/"),a}function S(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,a){if(null!=e){var o="function"==typeof e?e(t,n):e;"string"==typeof o?"function"==typeof r?r(o,a):a(!0):a(!1!==o)}else a(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var x=!("undefined"==typeof window||!window.document||!window.document.createElement);function C(e,t){t(window.confirm(e))}var _="popstate",P="hashchange";function T(){try{return window.history.state||{}}catch(e){return{}}}function O(e){void 0===e&&(e={}),x||v(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,a=!(-1===window.navigator.userAgent.indexOf("Trident")),o=e,l=o.forceRefresh,i=void 0!==l&&l,u=o.getUserConfirmation,c=void 0===u?C:u,s=o.keyLength,d=void 0===s?6:s,p=e.basename?w(y(e.basename)):"";function h(e){var t=e||{},n=t.key,r=t.state,a=window.location,o=a.pathname+a.search+a.hash;return p&&(o=b(o,p)),E(o,r,n)}function m(){return Math.random().toString(36).substr(2,d)}var g=S();function O(e){f($,e),$.length=n.length,g.notifyListeners($.location,$.action)}function N(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||z(h(e.state))}function L(){z(h(T()))}var R=!1;function z(e){if(R)R=!1,O();else{g.confirmTransitionTo(e,"POP",c,(function(t){t?O({action:"POP",location:e}):function(e){var t=$.location,n=A.indexOf(t.key);-1===n&&(n=0);var r=A.indexOf(e.key);-1===r&&(r=0);var a=n-r;a&&(R=!0,F(a))}(e)}))}}var M=h(T()),A=[M.key];function I(e){return p+k(e)}function F(e){n.go(e)}var D=0;function U(e){1===(D+=e)&&1===e?(window.addEventListener(_,N),a&&window.addEventListener(P,L)):0===D&&(window.removeEventListener(_,N),a&&window.removeEventListener(P,L))}var j=!1;var $={length:n.length,action:"POP",location:M,createHref:I,push:function(e,t){var a="PUSH",o=E(e,t,m(),$.location);g.confirmTransitionTo(o,a,c,(function(e){if(e){var t=I(o),l=o.key,u=o.state;if(r)if(n.pushState({key:l,state:u},null,t),i)window.location.href=t;else{var c=A.indexOf($.location.key),s=A.slice(0,c+1);s.push(o.key),A=s,O({action:a,location:o})}else window.location.href=t}}))},replace:function(e,t){var a="REPLACE",o=E(e,t,m(),$.location);g.confirmTransitionTo(o,a,c,(function(e){if(e){var t=I(o),l=o.key,u=o.state;if(r)if(n.replaceState({key:l,state:u},null,t),i)window.location.replace(t);else{var c=A.indexOf($.location.key);-1!==c&&(A[c]=o.key),O({action:a,location:o})}else window.location.replace(t)}}))},go:F,goBack:function(){F(-1)},goForward:function(){F(1)},block:function(e){void 0===e&&(e=!1);var t=g.setPrompt(e);return j||(U(1),j=!0),function(){return j&&(j=!1,U(-1)),t()}},listen:function(e){var t=g.appendListener(e);return U(1),function(){U(-1),t()}}};return $}var N="hashchange",L={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+g(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:g,decodePath:y},slash:{encodePath:y,decodePath:y}};function R(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function z(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function M(e){window.location.replace(R(window.location.href)+"#"+e)}function A(e){void 0===e&&{},x||v(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,a=void 0===r?C:r,o=n.hashType,l=void 0===o?"slash":o,i=e.basename?w(y(e.basename)):"",u=L[l],c=u.encodePath,s=u.decodePath;function d(){var e=s(z());return i&&b(e,i),E(e)}var p=S();function h(e){f(j,e),j.length=t.length,p.notifyListeners(j.location,j.action)}var m=!1,g=null;function _(){var e,t,n=z(),r=c(n);if(n!==r)M(r);else{var o=d(),l=j.location;if(!m&&(o,l.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(g===k(o))return;null,function(e){if(m)!1,h();else{var t="POP";p.confirmTransitionTo(e,t,a,(function(n){n?h({action:t,location:e}):function(e){var t=j.location,n=A.lastIndexOf(k(t));-1===n&&0;var r=A.lastIndexOf(k(e));-1===r&&0;var a=n-r;a&&(!0,I(a))}(e)}))}}(o)}}var P=z(),T=c(P);P!==T&&M(T);var O=d(),A=[k(O)];function I(e){t.go(e)}var F=0;function D(e){1===(F+=e)&&1===e?window.addEventListener(N,_):0===F&&window.removeEventListener(N,_)}var U=!1;var j={length:t.length,action:"POP",location:O,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&R(window.location.href),n+"#"+c(i+k(e))},push:function(e,t){var n="PUSH",r=E(e,void 0,void 0,j.location);p.confirmTransitionTo(r,n,a,(function(e){if(e){var t=k(r),a=c(i+t);if(z()!==a){t,function(e){window.location.hash=e}(a);var o=A.lastIndexOf(k(j.location)),l=A.slice(0,o+1);l.push(t),l,h({action:n,location:r})}else h()}}))},replace:function(e,t){var n="REPLACE",r=E(e,void 0,void 0,j.location);p.confirmTransitionTo(r,n,a,(function(e){if(e){var t=k(r),a=c(i+t);z()!==a&&(t,M(a));var o=A.indexOf(k(j.location));-1!==o&&(A[o]=t),h({action:n,location:r})}}))},go:I,goBack:function(){I(-1)},goForward:function(){I(1)},block:function(e){void 0===e&&!1;var t=p.setPrompt(e);return U||(D(1),!0),function(){return U&&(!1,D(-1)),t()}},listen:function(e){var t=p.appendListener(e);return D(1),function(){D(-1),t()}}};return j}function I(e,t,n){return Math.min(Math.max(e,t),n)}function F(e){void 0===e&&{};var t=e,n=t.getUserConfirmation,r=t.initialEntries,a=void 0===r?["/"]:r,o=t.initialIndex,l=void 0===o?0:o,i=t.keyLength,u=void 0===i?6:i,c=S();function s(e){f(y,e),y.length=y.entries.length,c.notifyListeners(y.location,y.action)}function d(){return Math.random().toString(36).substr(2,u)}var p=I(l,0,a.length-1),h=a.map((function(e){return E(e,void 0,"string"==typeof e?d():e.key||d())})),m=k;function v(e){var t=I(y.index+e,0,y.entries.length-1),r=y.entries[t];c.confirmTransitionTo(r,"POP",n,(function(e){e?s({action:"POP",location:r,index:t}):s()}))}var y={length:h.length,action:"POP",location:h[p],index:p,entries:h,createHref:m,push:function(e,t){var r="PUSH",a=E(e,t,d(),y.location);c.confirmTransitionTo(a,r,n,(function(e){if(e){var t=y.index+1,n=y.entries.slice(0);n.length>t?n.splice(t,n.length-t,a):n.push(a),s({action:r,location:a,index:t,entries:n})}}))},replace:function(e,t){var r="REPLACE",a=E(e,t,d(),y.location);c.confirmTransitionTo(a,r,n,(function(e){e&&(y.entries[y.index]=a,s({action:r,location:a}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(e){var t=y.index+e;return t>=0&&t<y.entries.length},block:function(e){return void 0===e&&!1,c.setPrompt(e)},listen:function(e){return c.appendListener(e)}};return y}var D=1073741823,U="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function j(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const $=o.createContext||function(e,t){var n,r,a="__create-react-context-"+function(){var e="__global_unique_id__";return U[e]=(U[e]||0)+1}()+"__",l=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=j(t.props.value),t}u(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[a]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,a=e.value;((o=r)===(l=a)?0!==o||1/o==1/l:o!=o&&l!=l)?n=0:(n="function"==typeof t?t(r,a):D,0!==(n|=0)&&this.emitter.set(e.value,n))}var o,l},r.render=function(){return this.props.children},n}(o.Component);l.childContextTypes=((n={})[a]=s().object.isRequired,n);var i=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}u(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?D:t},r.componentDidMount=function(){this.context[a]&&this.context[a].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?D:e},r.componentWillUnmount=function(){this.context[a]&&this.context[a].off(this.onUpdate)},r.getValue=function(){return this.context[a]?this.context[a].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(o.Component);return i.contextTypes=((r={})[a]=s().object,r),{Provider:l,Consumer:i}};var B=n(961),V=n.n(B);n(216);function W(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n(121);var H=function(e){var t=$();return t.displayName=e,t}("Router-History"),Q=function(e){var t=$();return t.displayName=e,t}("Router"),q=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}u(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.createElement(Q.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},o.createElement(H.Provider,{children:this.props.children||null,value:this.props.history}))},t}(o.Component);o.Component;o.Component;var K={},Y=0;function G(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,a=n.exact,o=void 0!==a&&a,l=n.strict,i=void 0!==l&&l,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=K[n]||(K[n]={});if(r[e])return r[e];var a=[],o={regexp:V()(e,a,t),keys:a};return Y<1e4&&(r[e]=o,Y++),o}(n,{end:o,strict:i,sensitive:c}),a=r.regexp,l=r.keys,u=a.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return o&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:l.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var X=function(e){function t(){return e.apply(this,arguments)||this}return u(t,e),t.prototype.render=function(){var e=this;return o.createElement(Q.Consumer,null,(function(t){t||v(!1);var n=e.props.location||t.location,r=f({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?G(n.pathname,e.props):t.match}),a=e.props,l=a.children,i=a.component,u=a.render;return Array.isArray(l)&&0===l.length&&(l=null),o.createElement(Q.Provider,{value:r},r.match?l?"function"==typeof l?l(r):l:i?o.createElement(i,r):u?u(r):null:"function"==typeof l?l(r):null)}))},t}(o.Component);function Z(e){return"/"===e.charAt(0)?e:"/"+e}function J(e,t){if(!e)return t;var n=Z(e);return 0!==t.pathname.indexOf(n)?t:f({},t,{pathname:t.pathname.substr(n.length)})}function ee(e){return"string"==typeof e?e:k(e)}function te(e){return function(){v(!1)}}function ne(){}o.Component;var re=function(e){function t(){return e.apply(this,arguments)||this}return u(t,e),t.prototype.render=function(){var e=this;return o.createElement(Q.Consumer,null,(function(t){t||v(!1);var n,r,a=e.props.location||t.location;return o.Children.forEach(e.props.children,(function(e){if(null==r&&o.isValidElement(e)){n=e;var l=e.props.path||e.props.from;r=l?G(a.pathname,f({},e.props,{path:l})):t.match}})),r?o.cloneElement(n,{location:a,computedMatch:r}):null}))},t}(o.Component);o.useContext;var ae=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=O(t.props),t}return u(t,e),t.prototype.render=function(){return o.createElement(q,{history:this.history,children:this.props.children})},t}(o.Component);o.Component;var oe=function(e,t){return"function"==typeof e?e(t):e},le=function(e,t){return"string"==typeof e?E(e,null,null,t):e},ie=function(e){return e},ue=o.forwardRef;void 0===ue&&(ue=ie);var ce=ue((function(e,t){var n=e.innerRef,r=e.navigate,a=e.onClick,l=W(e,["innerRef","navigate","onClick"]),i=l.target,u=f({},l,{onClick:function(e){try{a&&a(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||i&&"_self"!==i||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=ie!==ue&&t||n,o.createElement("a",u)}));var se=ue((function(e,t){var n=e.component,r=void 0===n?ce:n,a=e.replace,l=e.to,i=e.innerRef,u=W(e,["component","replace","to","innerRef"]);return o.createElement(Q.Consumer,null,(function(e){e||v(!1);var n=e.history,c=le(oe(l,e.location),e.location),s=c?n.createHref(c):"",d=f({},u,{href:s,navigate:function(){var t=oe(l,e.location);(a?n.replace:n.push)(t)}});return ie!==ue?d.ref=t||i:d.innerRef=i,o.createElement(r,d)}))})),fe=function(e){return e},de=o.forwardRef;void 0===de&&(de=fe);de((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,a=e.activeClassName,l=void 0===a?"active":a,i=e.activeStyle,u=e.className,c=e.exact,s=e.isActive,d=e.location,p=e.sensitive,h=e.strict,m=e.style,y=e.to,g=e.innerRef,b=W(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return o.createElement(Q.Consumer,null,(function(e){e||v(!1);var n=d||e.location,a=le(oe(y,n),n),w=a.pathname,k=w&&w.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),E=k?G(n.pathname,{path:k,exact:c,sensitive:p,strict:h}):null,S=!!(s?s(E,n):E),x=S?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(u,l):u,C=S?f({},m,{},i):m,_=f({"aria-current":S&&r||null,className:x,style:C,to:a},b);return fe!==de?_.ref=t||g:_.innerRef=g,o.createElement(se,_)}))}));var pe=function(){function e(e){var t=this;this._insertTag=function(e){var n;n=0===t.tags.length?t.prepend?t.container.firstChild:t.before:t.tags[t.tags.length-1].nextSibling,t.container.insertBefore(e,n),t.tags.push(e)},this.isSpeedy=void 0===e.speedy||e.speedy,this.tags=[],this.ctr=0,this.nonce=e.nonce,this.key=e.key,this.container=e.container,this.prepend=e.prepend,this.before=null}var t=e.prototype;return t.hydrate=function(e){e.forEach(this._insertTag)},t.insert=function(e){this.ctr%(this.isSpeedy?65e3:1)==0&&this._insertTag(function(e){var t=document.createElement("style");return t.setAttribute("data-emotion",e.key),void 0!==e.nonce&&t.setAttribute("nonce",e.nonce),t.appendChild(document.createTextNode("")),t.setAttribute("data-s",""),t}(this));var t=this.tags[this.tags.length-1];if(this.isSpeedy){var n=function(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]}(t);try{n.insertRule(e,n.cssRules.length)}catch(e){0}}else t.appendChild(document.createTextNode(e));this.ctr++},t.flush=function(){this.tags.forEach((function(e){return e.parentNode.removeChild(e)})),this.tags=[],this.ctr=0},e}(),he=Math.abs,me=String.fromCharCode;function ve(e){return e.trim()}function ye(e,t,n){return e.replace(t,n)}function ge(e,t){return e.indexOf(t)}function be(e,t){return 0|e.charCodeAt(t)}function we(e,t,n){return e.slice(t,n)}function ke(e){return e.length}function Ee(e){return e.length}function Se(e,t){return t.push(e),e}var xe=1,Ce=1,_e=0,Pe=0,Te=0,Oe="";function Ne(e,t,n,r,a,o,l){return{value:e,root:t,parent:n,type:r,props:a,children:o,line:xe,column:Ce,length:l,return:""}}function Le(e,t,n){return Ne(e,t.root,t.parent,n,t.props,t.children,0)}function Re(){return Te=Pe<_e?be(Oe,Pe++):0,Ce++,10===Te&&(Ce=1,xe++),Te}function ze(){return be(Oe,Pe)}function Me(){return Pe}function Ae(e,t){return we(Oe,e,t)}function Ie(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function Fe(e){return xe=Ce=1,_e=ke(Oe=e),Pe=0,[]}function De(e){return Oe="",e}function Ue(e){return ve(Ae(Pe-1,$e(91===e?e+2:40===e?e+1:e)))}function je(e){for(;(Te=ze())&&Te<33;)Re();return Ie(e)>2||Ie(Te)>3?"":" "}function $e(e){for(;Re();)switch(Te){case e:return Pe;case 34:case 39:return $e(34===e||39===e?e:Te);case 40:41===e&&$e(e);break;case 92:Re()}return Pe}function Be(e,t){for(;Re()&&e+Te!==57&&(e+Te!==84||47!==ze()););return"/*"+Ae(t,Pe-1)+"*"+me(47===e?e:Re())}function Ve(e){for(;!Ie(ze());)Re();return Ae(e,Pe)}var We="-ms-",He="-moz-",Qe="-webkit-",qe="comm",Ke="rule",Ye="decl";function Ge(e,t){for(var n="",r=Ee(e),a=0;a<r;a++)n+=t(e[a],a,e,t)||"";return n}function Xe(e,t,n,r){switch(e.type){case"@import":case Ye:return e.return=e.return||e.value;case qe:return"";case Ke:e.value=e.props.join(",")}return ke(n=Ge(e.children,r))?e.return=e.value+"{"+n+"}":""}function Ze(e,t){switch(function(e,t){return(((t<<2^be(e,0))<<2^be(e,1))<<2^be(e,2))<<2^be(e,3)}(e,t)){case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return Qe+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return Qe+e+He+e+We+e+e;case 6828:case 4268:return Qe+e+We+e+e;case 6165:return Qe+e+We+"flex-"+e+e;case 5187:return Qe+e+ye(e,/(\w+).+(:[^]+)/,"-webkit-box-$1$2-ms-flex-$1$2")+e;case 5443:return Qe+e+We+"flex-item-"+ye(e,/flex-|-self/,"")+e;case 4675:return Qe+e+We+"flex-line-pack"+ye(e,/align-content|flex-|-self/,"")+e;case 5548:return Qe+e+We+ye(e,"shrink","negative")+e;case 5292:return Qe+e+We+ye(e,"basis","preferred-size")+e;case 6060:return Qe+"box-"+ye(e,"-grow","")+Qe+e+We+ye(e,"grow","positive")+e;case 4554:return Qe+ye(e,/([^-])(transform)/g,"$1-webkit-$2")+e;case 6187:return ye(ye(ye(e,/(zoom-|grab)/,Qe+"$1"),/(image-set)/,Qe+"$1"),e,"")+e;case 5495:case 3959:return ye(e,/(image-set\([^]*)/,Qe+"$1$`$1");case 4968:return ye(ye(e,/(.+:)(flex-)?(.*)/,"-webkit-box-pack:$3-ms-flex-pack:$3"),/s.+-b[^;]+/,"justify")+Qe+e+e;case 4095:case 3583:case 4068:case 2532:return ye(e,/(.+)-inline(.+)/,Qe+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(ke(e)-1-t>6)switch(be(e,t+1)){case 102:t=be(e,t+3);case 109:return ye(e,/(.+:)(.+)-([^]+)/,"$1-webkit-$2-$3$1"+He+(108==t?"$3":"$2-$3"))+e;case 115:return~ge(e,"stretch")?Ze(ye(e,"stretch","fill-available"),t)+e:e}break;case 4949:if(115!==be(e,t+1))break;case 6444:switch(be(e,ke(e)-3-(~ge(e,"!important")&&10))){case 107:case 111:return ye(e,e,Qe+e)+e;case 101:return ye(e,/(.+:)([^;!]+)(;|!.+)?/,"$1"+Qe+(45===be(e,14)?"inline-":"")+"box$3$1"+Qe+"$2$3$1"+We+"$2box$3")+e}break;case 5936:switch(be(e,t+11)){case 114:return Qe+e+We+ye(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return Qe+e+We+ye(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return Qe+e+We+ye(e,/[svh]\w+-[tblr]{2}/,"lr")+e}return Qe+e+We+e+e}return e}function Je(e){return De(et("",null,null,null,[""],e=Fe(e),0,[0],e))}function et(e,t,n,r,a,o,l,i,u){for(var c=0,s=0,f=l,d=0,p=0,h=0,m=1,v=1,y=1,g=0,b="",w=a,k=o,E=r,S=b;v;)switch(h=g,g=Re()){case 34:case 39:case 91:case 40:S+=Ue(g);break;case 9:case 10:case 13:case 32:S+=je(h);break;case 47:switch(ze()){case 42:case 47:Se(nt(Be(Re(),Me()),t,n),u);break;default:S+="/"}break;case 123*m:i[c++]=ke(S)*y;case 125*m:case 59:case 0:switch(g){case 0:case 125:v=0;case 59+s:p>0&&ke(S)-f&&Se(p>32?rt(S+";",r,n,f-1):rt(ye(S," ","")+";",r,n,f-2),u);break;case 59:S+=";";default:if(Se(E=tt(S,t,n,c,s,a,i,b,w=[],k=[],f),o),123===g)if(0===s)et(S,t,E,E,w,o,f,i,k);else switch(d){case 100:case 109:case 115:et(e,E,E,r&&Se(tt(e,E,E,0,0,a,i,b,a,w=[],f),k),a,k,f,i,r?w:k);break;default:et(S,E,E,E,[""],k,f,i,k)}}c=s=p=0,m=y=1,b=S="",f=l;break;case 58:f=1+ke(S),p=h;default:switch(S+=me(g),g*m){case 38:y=s>0?1:(S+="\f",-1);break;case 44:i[c++]=(ke(S)-1)*y,y=1;break;case 64:45===ze()&&(S+=Ue(Re())),d=ze(),s=ke(b=S+=Ve(Me())),g++;break;case 45:45===h&&2==ke(S)&&(m=0)}}return o}function tt(e,t,n,r,a,o,l,i,u,c,s){for(var f=a-1,d=0===a?o:[""],p=Ee(d),h=0,m=0,v=0;h<r;++h)for(var y=0,g=we(e,f+1,f=he(m=l[h])),b=e;y<p;++y)(b=ve(m>0?d[y]+" "+g:ye(g,/&\f/g,d[y])))&&(u[v++]=b);return Ne(e,t,n,0===a?Ke:i,u,c,s)}function nt(e,t,n){return Ne(e,t,n,qe,me(Te),we(e,2,-2),0)}function rt(e,t,n,r){return Ne(e,t,n,Ye,we(e,0,r),we(e,r+1,-1),r)}var at=function(e,t){return De(function(e,t){var n=-1,r=44;do{switch(Ie(r)){case 0:38===r&&12===ze()&&(t[n]=1),e[n]+=Ve(Pe-1);break;case 2:e[n]+=Ue(r);break;case 4:if(44===r){e[++n]=58===ze()?"&\f":"",t[n]=e[n].length;break}default:e[n]+=me(r)}}while(r=Re());return e}(Fe(e),t))},ot=new WeakMap,lt=function(e){if("rule"===e.type&&e.parent&&e.length){for(var t=e.value,n=e.parent,r=e.column===n.column&&e.line===n.line;"rule"!==n.type;)if(!(n=n.parent))return;if((1!==e.props.length||58===t.charCodeAt(0)||ot.get(n))&&!r){ot.set(e,!0);for(var a=[],o=at(t,a),l=n.props,i=0,u=0;i<o.length;i++)for(var c=0;c<l.length;c++,u++)e.props[u]=a[i]?o[i].replace(/&\f/g,l[c]):l[c]+" "+o[i]}}},it=function(e){if("decl"===e.type){var t=e.value;108===t.charCodeAt(0)&&98===t.charCodeAt(2)&&(e.return="",e.value="")}},ut=[function(e,t,n,r){if(!e.return)switch(e.type){case Ye:e.return=Ze(e.value,e.length);break;case"@keyframes":return Ge([Le(ye(e.value,"@","@"+Qe),e,"")],r);case Ke:if(e.length)return function(e,t){return e.map(t).join("")}(e.props,(function(t){switch(function(e,t){return(e=t.exec(e))?e[0]:e}(t,/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":return Ge([Le(ye(t,/:(read-\w+)/,":-moz-$1"),e,"")],r);case"::placeholder":return Ge([Le(ye(t,/:(plac\w+)/,":-webkit-input-$1"),e,""),Le(ye(t,/:(plac\w+)/,":-moz-$1"),e,""),Le(ye(t,/:(plac\w+)/,We+"input-$1"),e,"")],r)}return""}))}}];const ct=function(e){var t=e.key;if("css"===t){var n=document.querySelectorAll("style[data-emotion]:not([data-s])");Array.prototype.forEach.call(n,(function(e){document.head.appendChild(e),e.setAttribute("data-s","")}))}var r=e.stylisPlugins||ut;var a,o,l={},i=[];a=e.container||document.head,Array.prototype.forEach.call(document.querySelectorAll("style[data-emotion]"),(function(e){var n=e.getAttribute("data-emotion").split(" ");if(n[0]===t){for(var r=1;r<n.length;r++)l[n[r]]=!0;i.push(e)}}));var u,c,s,f,d=[Xe,(f=function(e){u.insert(e)},function(e){e.root||(e=e.return)&&f(e)})],p=(c=[lt,it].concat(r,d),s=Ee(c),function(e,t,n,r){for(var a="",o=0;o<s;o++)a+=c[o](e,t,n,r)||"";return a});o=function(e,t,n,r){u=n,Ge(Je(e?e+"{"+t.styles+"}":t.styles),p),r&&(h.inserted[t.name]=!0)};var h={key:t,sheet:new pe({key:t,container:a,nonce:e.nonce,speedy:e.speedy,prepend:e.prepend}),nonce:e.nonce,inserted:l,registered:{},insert:o};return h.sheet.hydrate(i),h};const st=function(e){for(var t,n=0,r=0,a=e.length;a>=4;++r,a-=4)t=1540483477*(65535&(t=255&e.charCodeAt(r)|(255&e.charCodeAt(++r))<<8|(255&e.charCodeAt(++r))<<16|(255&e.charCodeAt(++r))<<24))+(59797*(t>>>16)<<16),n=1540483477*(65535&(t^=t>>>24))+(59797*(t>>>16)<<16)^1540483477*(65535&n)+(59797*(n>>>16)<<16);switch(a){case 3:n^=(255&e.charCodeAt(r+2))<<16;case 2:n^=(255&e.charCodeAt(r+1))<<8;case 1:n=1540483477*(65535&(n^=255&e.charCodeAt(r)))+(59797*(n>>>16)<<16)}return(((n=1540483477*(65535&(n^=n>>>13))+(59797*(n>>>16)<<16))^n>>>15)>>>0).toString(36)};const ft={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var dt=/[A-Z]|^ms/g,pt=/_EMO_([^_]+?)_([^]*?)_EMO_/g,ht=function(e){return 45===e.charCodeAt(1)},mt=function(e){return null!=e&&"boolean"!=typeof e},vt=function(e){var t=Object.create(null);return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}((function(e){return ht(e)?e:e.replace(dt,"-$&").toLowerCase()})),yt=function(e,t){switch(e){case"animation":case"animationName":if("string"==typeof t)return t.replace(pt,(function(e,t,n){return bt={name:t,styles:n,next:bt},t}))}return 1===ft[e]||ht(e)||"number"!=typeof t||0===t?t:t+"px"};function gt(e,t,n){if(null==n)return"";if(void 0!==n.__emotion_styles)return n;switch(typeof n){case"boolean":return"";case"object":if(1===n.anim)return bt={name:n.name,styles:n.styles,next:bt},n.name;if(void 0!==n.styles){var r=n.next;if(void 0!==r)for(;void 0!==r;)bt={name:r.name,styles:r.styles,next:bt},r=r.next;return n.styles+";"}return function(e,t,n){var r="";if(Array.isArray(n))for(var a=0;a<n.length;a++)r+=gt(e,t,n[a])+";";else for(var o in n){var l=n[o];if("object"!=typeof l)null!=t&&void 0!==t[l]?r+=o+"{"+t[l]+"}":mt(l)&&(r+=vt(o)+":"+yt(o,l)+";");else if(!Array.isArray(l)||"string"!=typeof l[0]||null!=t&&void 0!==t[l[0]]){var i=gt(e,t,l);switch(o){case"animation":case"animationName":r+=vt(o)+":"+i+";";break;default:r+=o+"{"+i+"}"}}else for(var u=0;u<l.length;u++)mt(l[u])&&(r+=vt(o)+":"+yt(o,l[u])+";")}return r}(e,t,n);case"function":if(void 0!==e){var a=bt,o=n(e);return bt=a,gt(e,t,o)}break;case"string":}if(null==t)return n;var l=t[n];return void 0!==l?l:n}var bt,wt=/label:\s*([^\s;\n{]+)\s*;/g;var kt=function(e,t,n){if(1===e.length&&"object"==typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var r=!0,a="";bt=void 0;var o=e[0];null==o||void 0===o.raw?(r=!1,a+=gt(n,t,o)):a+=o[0];for(var l=1;l<e.length;l++)a+=gt(n,t,e[l]),r&&(a+=o[l]);wt.lastIndex=0;for(var i,u="";null!==(i=wt.exec(a));)u+="-"+i[1];return{name:st(a)+u,styles:a,next:bt}},Et=Object.prototype.hasOwnProperty,St=(0,o.createContext)("undefined"!=typeof HTMLElement?ct({key:"css"}):null),xt=(St.Provider,function(e){return(0,o.forwardRef)((function(t,n){var r=(0,o.useContext)(St);return e(t,r,n)}))}),Ct=(0,o.createContext)({});var _t="__EMOTION_TYPE_PLEASE_DO_NOT_USE__",Pt=function(e,t){var n={};for(var r in t)Et.call(t,r)&&(n[r]=t[r]);return n[_t]=e,n},Tt=xt((function(e,t,n){var r=e.css;"string"==typeof r&&void 0!==t.registered[r]&&(r=t.registered[r]);var a=e[_t],l=[r],i="";"string"==typeof e.className?i=function(e,t,n){var r="";return n.split(" ").forEach((function(n){void 0!==e[n]?t.push(e[n]+";"):r+=n+" "})),r}(t.registered,l,e.className):null!=e.className&&(i=e.className+" ");var u=kt(l,void 0,"function"==typeof r||Array.isArray(r)?(0,o.useContext)(Ct):void 0);!function(e,t,n){var r=e.key+"-"+t.name;if(!1===n&&void 0===e.registered[r]&&(e.registered[r]=t.styles),void 0===e.inserted[t.name]){var a=t;do{e.insert(t===a?"."+r:"",a,e.sheet,!0),a=a.next}while(void 0!==a)}}(t,u,"string"==typeof a);i+=t.key+"-"+u.name;var c={};for(var s in e)Et.call(e,s)&&"css"!==s&&s!==_t&&(c[s]=e[s]);return c.ref=n,c.className=i,(0,o.createElement)(a,c)}));n(935);var Ot=function(e,t){var n=arguments;if(null==t||!Et.call(t,"css"))return o.createElement.apply(void 0,n);var r=n.length,a=new Array(r);a[0]=Tt,a[1]=Pt(e,t);for(var l=2;l<r;l++)a[l]=n[l];return o.createElement.apply(null,a)};function Nt(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return kt(t)}var Lt;var Rt,zt,Mt=Nt(Lt||(Rt=["color: red;"],zt||(zt=Rt.slice(0)),Lt=Object.freeze(Object.defineProperties(Rt,{raw:{value:Object.freeze(zt)}}))));const At=function(){return Ot("div",null,"This is home ddd",Ot("div",{css:Mt},"test"))};const It=function(){return o.createElement("div",null,"about")};var Ft=function(){return o.createElement(ae,{basename:process.env.PUBLIC_URL},o.createElement(re,null,o.createElement(X,{path:"/",exact:!0,component:At}),o.createElement(X,{path:"/about",exact:!0,component:It})))};l.render(o.createElement(Ft,null),document.getElementById("app"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vc3JjL2FwcC5jc3MiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL3NyYy9hcHAuY3NzP2E2NzIiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2V0UHJvdG90eXBlT2YuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvZXNtL3Jlc29sdmUtcGF0aG5hbWUuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi4vbW9kdWxlcy9IaXN0b3J5Q29udGV4dC5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uLi9tb2R1bGVzL2NyZWF0ZU5hbWVDb250ZXh0LmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4uL21vZHVsZXMvUm91dGVyQ29udGV4dC5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uLi9tb2R1bGVzL1JvdXRlci5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uLi9tb2R1bGVzL01lbW9yeVJvdXRlci5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uLi9tb2R1bGVzL0xpZmVjeWNsZS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uLi9tb2R1bGVzL21hdGNoUGF0aC5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uLi9tb2R1bGVzL1JvdXRlLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4uL21vZHVsZXMvU3RhdGljUm91dGVyLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4uL21vZHVsZXMvU3dpdGNoLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4uL21vZHVsZXMvaG9va3MuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi4vbW9kdWxlcy9Ccm93c2VyUm91dGVyLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4uL21vZHVsZXMvSGFzaFJvdXRlci5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uLi9tb2R1bGVzL3V0aWxzL2xvY2F0aW9uVXRpbHMuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi4vbW9kdWxlcy9MaW5rLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4uL21vZHVsZXMvTmF2TGluay5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zaGVldC9kaXN0L2Vtb3Rpb24tc2hlZXQuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvc3R5bGlzL3NyYy9VdGlsaXR5LmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vbm9kZV9tb2R1bGVzL3N0eWxpcy9zcmMvVG9rZW5pemVyLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vbm9kZV9tb2R1bGVzL3N0eWxpcy9zcmMvRW51bS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL25vZGVfbW9kdWxlcy9zdHlsaXMvc3JjL1NlcmlhbGl6ZXIuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvc3R5bGlzL3NyYy9QcmVmaXhlci5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL25vZGVfbW9kdWxlcy9zdHlsaXMvc3JjL1BhcnNlci5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9jYWNoZS9kaXN0L2Vtb3Rpb24tY2FjaGUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvc3R5bGlzL3NyYy9NaWRkbGV3YXJlLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2hhc2gvZGlzdC9oYXNoLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc2VyaWFsaXplL2Rpc3QvZW1vdGlvbi1zZXJpYWxpemUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L2Vtb3Rpb24tbWVtb2l6ZS5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9yZWFjdC9kaXN0L2Vtb3Rpb24tZWxlbWVudC00ZmJkODljNS5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi91dGlscy9kaXN0L2Vtb3Rpb24tdXRpbHMuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1yZWFjdC13ZWJwYWNrLWV4YW1wbGUvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vcmVhY3QvZGlzdC9lbW90aW9uLXJlYWN0LmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vc3JjL3BhZ2VzL2hvbWUudHN4Iiwid2VicGFjazovL2phdmFzY3JpcHQtcmVhY3Qtd2VicGFjay1leGFtcGxlLy4vc3JjL3BhZ2VzL2Fib3V0LnRzeCIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXJlYWN0LXdlYnBhY2stZXhhbXBsZS8uL3NyYy9hcHAudHN4Il0sIm5hbWVzIjpbIl9leHRlbmRzIiwibW9kdWxlIiwiZXhwb3J0cyIsIk9iamVjdCIsImFzc2lnbiIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsInRoaXMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjb25jYXQiLCJqb2luIiwibW9kdWxlcyIsIm1lZGlhUXVlcnkiLCJkZWR1cGUiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiaWQiLCJfaSIsInB1c2giLCJfc2xpY2VkVG9BcnJheSIsImFyciIsIkFycmF5IiwiaXNBcnJheSIsIl9hcnJheVdpdGhIb2xlcyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiX2FyciIsIl9uIiwiX2QiLCJfZSIsInVuZGVmaW5lZCIsIl9zIiwibmV4dCIsImRvbmUiLCJ2YWx1ZSIsImVyciIsIl9pdGVyYWJsZVRvQXJyYXlMaW1pdCIsIm8iLCJtaW5MZW4iLCJfYXJyYXlMaWtlVG9BcnJheSIsIm4iLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsImZyb20iLCJ0ZXN0IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiVHlwZUVycm9yIiwiX25vbkl0ZXJhYmxlUmVzdCIsImxlbiIsImFycjIiLCJfaXRlbSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZVJvb3QiLCJyZWFjdElzIiwicmVxdWlyZSIsIlJFQUNUX1NUQVRJQ1MiLCJjaGlsZENvbnRleHRUeXBlcyIsImNvbnRleHRUeXBlIiwiY29udGV4dFR5cGVzIiwiZGVmYXVsdFByb3BzIiwiZGlzcGxheU5hbWUiLCJnZXREZWZhdWx0UHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJtaXhpbnMiLCJwcm9wVHlwZXMiLCJ0eXBlIiwiS05PV05fU1RBVElDUyIsImNhbGxlciIsImNhbGxlZSIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsImdldFN0YXRpY3MiLCJjb21wb25lbnQiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwicmVuZGVyIiwiTWVtbyIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJrZXlzIiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJkZXNjcmlwdG9yIiwiZSIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwidGVzdDEiLCJTdHJpbmciLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwic2hvdWxkVXNlTmF0aXZlIiwic3ltYm9scyIsInRvIiwicyIsImlzYXJyYXkiLCJwYXRoVG9SZWdleHAiLCJwYXJzZSIsImNvbXBpbGUiLCJzdHIiLCJvcHRpb25zIiwidG9rZW5zVG9GdW5jdGlvbiIsInRva2Vuc1RvUmVnRXhwIiwiUEFUSF9SRUdFWFAiLCJSZWdFeHAiLCJyZXMiLCJ0b2tlbnMiLCJpbmRleCIsInBhdGgiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZGVsaW1pdGVyIiwiZXhlYyIsIm0iLCJlc2NhcGVkIiwib2Zmc2V0IiwicHJlZml4IiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJhc3RlcmlzayIsInBhcnRpYWwiLCJyZXBlYXQiLCJvcHRpb25hbCIsInBhdHRlcm4iLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsInJlcGxhY2UiLCJjIiwiY2hhckNvZGVBdCIsInRvVXBwZXJDYXNlIiwibWF0Y2hlcyIsImZsYWdzIiwib2JqIiwib3B0cyIsImVuY29kZSIsInByZXR0eSIsInRva2VuIiwic2VnbWVudCIsImoiLCJhdHRhY2hLZXlzIiwicmUiLCJzZW5zaXRpdmUiLCJzdHJpY3QiLCJlbmQiLCJyb3V0ZSIsImVuZHNXaXRoRGVsaW1pdGVyIiwiZ3JvdXBzIiwibWF0Y2giLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiYXJyYXlUb1JlZ2V4cCIsInN0cmluZ1RvUmVnZXhwIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwiZW1wdHlGdW5jdGlvbldpdGhSZXNldCIsInJlc2V0V2FybmluZ0NhY2hlIiwic2hpbSIsInByb3BzIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJFcnJvciIsImdldFNoaW0iLCJpc1JlcXVpcmVkIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJvb2wiLCJmdW5jIiwibnVtYmVyIiwib2JqZWN0Iiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnQiLCJlbGVtZW50VHlwZSIsImluc3RhbmNlT2YiLCJub2RlIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImFhIiwiciIsInkiLCJhIiwiYiIsImJhIiwiU2V0IiwiY2EiLCJkYSIsImVhIiwiYWRkIiwiZmEiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJoYSIsImlhIiwiamEiLCJrYSIsIkIiLCJkIiwiZiIsImciLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJyZW1vdmVFbXB0eVN0cmluZyIsIkQiLCJ0b0xvd2VyQ2FzZSIsIm9hIiwicGEiLCJxYSIsIm1hIiwiaXNOYU4iLCJuYSIsImxhIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ4bGlua0hyZWYiLCJyYSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwic2EiLCJ0YSIsInVhIiwid2EiLCJ4YSIsInlhIiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsImZvciIsIkUiLCJNYSIsIkthIiwiTGEiLCJOYSIsInN0YWNrIiwidHJpbSIsIk9hIiwiUGEiLCJwcmVwYXJlU3RhY2tUcmFjZSIsInNldCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJrIiwiaCIsIlFhIiwidGFnIiwiX3JlbmRlciIsIlJhIiwiJCR0eXBlb2YiLCJfY29udGV4dCIsIl9wYXlsb2FkIiwiX2luaXQiLCJTYSIsIlRhIiwibm9kZU5hbWUiLCJWYSIsIl92YWx1ZVRyYWNrZXIiLCJnZXQiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlVhIiwiV2EiLCJjaGVja2VkIiwiWGEiLCJhY3RpdmVFbGVtZW50IiwiYm9keSIsIllhIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJaYSIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCIkYSIsImFiIiwiYmIiLCJjYiIsIm93bmVyRG9jdW1lbnQiLCJlYiIsImNoaWxkcmVuIiwiQ2hpbGRyZW4iLCJkYiIsImZiIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsImdiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwicGIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsInFiIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJyYiIsInNiIiwidGIiLCJzdHlsZSIsImluZGV4T2YiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsInViIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwidmIiLCJ3YiIsImlzIiwieGIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJDYiIsInN0YXRlTm9kZSIsIkRiIiwiRWIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiT2IiLCJQYiIsIlFiIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJSYiIsImwiLCJvbkVycm9yIiwiU2IiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCIkYiIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiYWMiLCJjYyIsImNoaWxkIiwic2libGluZyIsImN1cnJlbnQiLCJiYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwia2MiLCJsYyIsIm1jIiwibmMiLCJNYXAiLCJvYyIsInBjIiwicWMiLCJyYyIsImJsb2NrZWRPbiIsImRvbUV2ZW50TmFtZSIsImV2ZW50U3lzdGVtRmxhZ3MiLCJuYXRpdmVFdmVudCIsInRhcmdldENvbnRhaW5lcnMiLCJzYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsInRjIiwidmMiLCJ3YyIsImxhbmVQcmlvcml0eSIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInByaW9yaXR5IiwiaHlkcmF0ZSIsImNvbnRhaW5lckluZm8iLCJ4YyIsInljIiwic2hpZnQiLCJ6YyIsIkFjIiwiQmMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJDYyIsIkRjIiwiRWMiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJGYyIsIkdjIiwiSGMiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwidW5zdGFibGVfbm93IiwiRiIsIlJjIiwiVWMiLCJwZW5kaW5nTGFuZXMiLCJleHBpcmVkTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiVmMiLCJlbnRhbmdsZWRMYW5lcyIsImVudGFuZ2xlbWVudHMiLCJXYyIsIlhjIiwiWWMiLCJaYyIsIiRjIiwiZXZlbnRUaW1lcyIsIk1hdGgiLCJjbHozMiIsImJkIiwiY2QiLCJsb2ciLCJMTjIiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJiaW5kIiwidWMiLCJqZCIsImtkIiwibGQiLCJtZCIsIm5kIiwib2QiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJwZCIsInFkIiwicmQiLCJfcmVhY3ROYW1lIiwiX3RhcmdldEluc3QiLCJjdXJyZW50VGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJpc1BlcnNpc3RlbnQiLCJ3ZCIsInhkIiwieWQiLCJzZCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJ0ZCIsInVkIiwidmlldyIsImRldGFpbCIsInZkIiwiQWQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJnZXRNb2RpZmllclN0YXRlIiwiemQiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiQmQiLCJEZCIsImRhdGFUcmFuc2ZlciIsIkZkIiwiSGQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiSmQiLCJjbGlwYm9hcmREYXRhIiwiTGQiLCJNZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJOZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlJkIiwiY29kZSIsImxvY2FsZSIsIndoaWNoIiwiVGQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIlpkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCIkZCIsImFlIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImxlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIm1lIiwibmUiLCJvZSIsImV2ZW50IiwibGlzdGVuZXJzIiwicGUiLCJxZSIsInNlIiwidGUiLCJ1ZSIsInZlIiwid2UiLCJ4ZSIsInllIiwiemUiLCJvbmlucHV0IiwiQWUiLCJkZXRhY2hFdmVudCIsIkJlIiwiQ2UiLCJhdHRhY2hFdmVudCIsIkRlIiwiRWUiLCJGZSIsIkhlIiwiSWUiLCJKZSIsIktlIiwiTGUiLCJuZXh0U2libGluZyIsIk1lIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIk5lIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50V2luZG93IiwiaHJlZiIsIk9lIiwiY29udGVudEVkaXRhYmxlIiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJUZSIsIlVlIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJkZWZhdWx0VmlldyIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiVmUiLCJXZSIsIlhlIiwiWWUiLCJaZSIsIlliIiwiaW5zdGFuY2UiLCJsaXN0ZW5lciIsIkciLCIkZSIsImhhcyIsImFmIiwiYmYiLCJyYW5kb20iLCJjZiIsImRmIiwicGFzc2l2ZSIsIk5iIiwieCIsInciLCJ6IiwidSIsInEiLCJ0IiwidiIsImVmIiwiZmYiLCJwYXJlbnRXaW5kb3ciLCJnZiIsImhmIiwiSiIsIksiLCJRIiwiTCIsImplIiwiY2hhciIsImtlIiwidW5zaGlmdCIsImpmIiwia2YiLCJsZiIsIm1mIiwiYXV0b0ZvY3VzIiwibmYiLCJfX2h0bWwiLCJvZiIsInNldFRpbWVvdXQiLCJwZiIsImNsZWFyVGltZW91dCIsInFmIiwicmYiLCJzZiIsInByZXZpb3VzU2libGluZyIsInRmIiwidmYiLCJ3ZiIsInhmIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJIIiwiSSIsIkNmIiwiTSIsIk4iLCJEZiIsIkVmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiRmYiLCJHZiIsIkhmIiwiSWYiLCJnZXRDaGlsZENvbnRleHQiLCJKZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJRZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiUmYiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJTZiIsIlRmIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJVZiIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiVmYiLCJXZiIsIlhmIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJZZiIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsIk8iLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwibGciLCJtZyIsIm5nIiwib2ciLCJwZyIsInFnIiwicmciLCJfY3VycmVudFZhbHVlIiwic2ciLCJjaGlsZExhbmVzIiwidGciLCJkZXBlbmRlbmNpZXMiLCJmaXJzdENvbnRleHQiLCJsYW5lcyIsInVnIiwidmciLCJjb250ZXh0Iiwib2JzZXJ2ZWRCaXRzIiwicmVzcG9uZGVycyIsIndnIiwieGciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImZpcnN0QmFzZVVwZGF0ZSIsImxhc3RCYXNlVXBkYXRlIiwic2hhcmVkIiwicGVuZGluZyIsImVmZmVjdHMiLCJ5ZyIsInpnIiwiZXZlbnRUaW1lIiwibGFuZSIsInBheWxvYWQiLCJjYWxsYmFjayIsIkFnIiwiQmciLCJDZyIsIkEiLCJwIiwiQyIsIkRnIiwiRWciLCJGZyIsIkNvbXBvbmVudCIsInJlZnMiLCJHZyIsIktnIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxzIiwiZW5xdWV1ZVNldFN0YXRlIiwiSGciLCJJZyIsIkpnIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVGb3JjZVVwZGF0ZSIsIkxnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJNZyIsInN0YXRlIiwidXBkYXRlciIsIk5nIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiT2ciLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsIlBnIiwiUWciLCJyZWYiLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwiUmciLCJTZyIsImxhc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJUZyIsIlVnIiwibW9kZSIsIlZnIiwiaW1wbGVtZW50YXRpb24iLCJXZyIsIlhnIiwiWWciLCJaZyIsIiRnIiwiYWgiLCJiaCIsImNoIiwiZGgiLCJlaCIsImRvY3VtZW50RWxlbWVudCIsInRhZ05hbWUiLCJmaCIsImdoIiwiaGgiLCJQIiwiaWgiLCJtZW1vaXplZFByb3BzIiwicmV2ZWFsT3JkZXIiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwZW5kaW5nUHJvcHMiLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwidWgiLCJfd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeSIsInZoIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIndoIiwieGgiLCJSIiwiUyIsIlQiLCJ5aCIsInpoIiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsImJhc2VRdWV1ZSIsInF1ZXVlIiwiSWgiLCJKaCIsIktoIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImFjdGlvbiIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImRpc3BhdGNoIiwiTGgiLCJNaCIsIl9nZXRWZXJzaW9uIiwiX3NvdXJjZSIsIm11dGFibGVSZWFkTGFuZXMiLCJOaCIsIlUiLCJ1c2VTdGF0ZSIsImdldFNuYXBzaG90Iiwic3Vic2NyaWJlIiwidXNlRWZmZWN0Iiwic2V0U25hcHNob3QiLCJPaCIsIlBoIiwiUWgiLCJSaCIsImNyZWF0ZSIsImRlc3Ryb3kiLCJkZXBzIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiZGkiLCJyZWFkQ29udGV4dCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZURlYnVnVmFsdWUiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsInVzZU11dGFibGVTb3VyY2UiLCJ1c2VPcGFxdWVJZGVudGlmaWVyIiwidW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyIiwidWYiLCJlaSIsIlJlYWN0Q3VycmVudE93bmVyIiwiZmkiLCJnaSIsImhpIiwiaWkiLCJqaSIsImtpIiwibGkiLCJtaSIsImJhc2VMYW5lcyIsIm5pIiwib2kiLCJwaSIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsInFpIiwicmkiLCJwZW5kaW5nQ29udGV4dCIsIkJpIiwiRGkiLCJFaSIsInNpIiwicmV0cnlMYW5lIiwidGkiLCJmYWxsYmFjayIsInVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIiwidWkiLCJ1bnN0YWJsZV9leHBlY3RlZExvYWRUaW1lIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwibGFzdCIsInRhaWwiLCJ0YWlsTW9kZSIsIkFpIiwiRmkiLCJHaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsIlYiLCJIaSIsIklpIiwiVyIsIkppIiwiS2kiLCJMaSIsIk1pIiwibWVzc2FnZSIsIk5pIiwiY29uc29sZSIsImVycm9yIiwiT2kiLCJXZWFrTWFwIiwiUGkiLCJRaSIsIlJpIiwiU2kiLCJjb21wb25lbnREaWRDYXRjaCIsIlRpIiwiY29tcG9uZW50U3RhY2siLCJVaSIsIldlYWtTZXQiLCJWaSIsIldpIiwiWGkiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIllpIiwiWmkiLCIkaSIsImZvY3VzIiwiYWoiLCJkaXNwbGF5IiwiYmoiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiY2oiLCJkaiIsImVqIiwiZmoiLCJnaiIsImhqIiwiaW5zZXJ0QmVmb3JlIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsImlqIiwiamoiLCJraiIsImxqIiwidGhlbiIsIm1qIiwibmoiLCJjZWlsIiwib2oiLCJwaiIsIlgiLCJZIiwicWoiLCJyaiIsInNqIiwidGoiLCJ1aiIsInZqIiwiSW5maW5pdHkiLCJ3aiIsImNrIiwiWiIsInhqIiwieWoiLCJ6aiIsIkFqIiwiQmoiLCJDaiIsIkRqIiwiRWoiLCJGaiIsIkdqIiwiSGoiLCJJaiIsIkpqIiwiU2MiLCJLaiIsIkxqIiwiTWoiLCJjYWxsYmFja05vZGUiLCJleHBpcmF0aW9uVGltZXMiLCJjYWxsYmFja1ByaW9yaXR5IiwiVGMiLCJOaiIsIk9qIiwiUGoiLCJRaiIsIlJqIiwiU2oiLCJUaiIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkTGFuZXMiLCJVaiIsInRpbWVvdXRIYW5kbGUiLCJXaiIsIlhqIiwicGluZ0NhY2hlIiwiWWoiLCJaaiIsInZhIiwiYWsiLCJiayIsImRrIiwicmFuZ2VDb3VudCIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJlayIsIm1pbiIsImV4dGVuZCIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwib25Db21taXRGaWJlclJvb3QiLCJmayIsImdrIiwiaWsiLCJpc1JlYWN0Q29tcG9uZW50IiwicGVuZGluZ0NoaWxkcmVuIiwiamsiLCJtdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhIiwia2siLCJsayIsIm1rIiwibmsiLCJvayIsInFrIiwiaHlkcmF0aW9uT3B0aW9ucyIsIm11dGFibGVTb3VyY2VzIiwiX2ludGVybmFsUm9vdCIsInJrIiwidGsiLCJoYXNBdHRyaWJ1dGUiLCJzayIsInVrIiwiaGsiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJ1bm1vdW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJWaiIsInZrIiwiRXZlbnRzIiwid2siLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJ2ZXJzaW9uIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsInhrIiwicmVuZGVyZXJDb25maWciLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aCIsIm92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aCIsIm92ZXJyaWRlUHJvcHMiLCJvdmVycmlkZVByb3BzRGVsZXRlUGF0aCIsIm92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJ5ayIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0IiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImNoZWNrRENFIiwiQXN5bmNNb2RlIiwiQ29uY3VycmVudE1vZGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiRnJhZ21lbnQiLCJMYXp5IiwiUG9ydGFsIiwiUHJvZmlsZXIiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJ0eXBlT2YiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJlc2NhcGUiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsImRlZmF1bHQiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsImNvdW50IiwidG9BcnJheSIsIm9ubHkiLCJQdXJlQ29tcG9uZW50IiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwibWVtbyIsInBlcmZvcm1hbmNlIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZmxvb3IiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJwb3AiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsImlzT2xkSUUiLCJCb29sZWFuIiwiYWxsIiwiYXRvYiIsImdldFRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJzdHlsZXNJbkRvbSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsImFkZFN0eWxlIiwiaW5zZXJ0U3R5bGVFbGVtZW50IiwiYXR0cmlidXRlcyIsIm5vbmNlIiwiaW5zZXJ0IiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJyZW1vdmUiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwiYXBwbHlUb1RhZyIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJ1cGRhdGUiLCJzdHlsZUluZGV4IiwicmVtb3ZlU3R5bGVFbGVtZW50IiwibmV3T2JqIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pbmRleCIsInNwbGljZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZGVmaW5pdGlvbiIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJfc2V0UHJvdG90eXBlT2YiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiaXNBYnNvbHV0ZSIsInBhdGhuYW1lIiwic3BsaWNlT25lIiwiaGFzVHJhaWxpbmdTbGFzaCIsInRvUGFydHMiLCJmcm9tUGFydHMiLCJpc1RvQWJzIiwiaXNGcm9tQWJzIiwibXVzdEVuZEFicyIsInVwIiwicGFydCIsImNvbmRpdGlvbiIsImFkZExlYWRpbmdTbGFzaCIsInN0cmlwTGVhZGluZ1NsYXNoIiwic3RyaXBCYXNlbmFtZSIsImhhc0Jhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImhhc2giLCJjcmVhdGVMb2NhdGlvbiIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwiZGVjb2RlVVJJIiwiVVJJRXJyb3IiLCJyZXNvbHZlUGF0aG5hbWUiLCJjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciIsInByb21wdCIsInNldFByb21wdCIsIm5leHRQcm9tcHQiLCJjb25maXJtVHJhbnNpdGlvblRvIiwiZ2V0VXNlckNvbmZpcm1hdGlvbiIsImFwcGVuZExpc3RlbmVyIiwiZm4iLCJpc0FjdGl2ZSIsIm5vdGlmeUxpc3RlbmVycyIsIl9sZW4iLCJhcmdzIiwiX2tleSIsImNhblVzZURPTSIsImdldENvbmZpcm1hdGlvbiIsImNvbmZpcm0iLCJQb3BTdGF0ZUV2ZW50IiwiSGFzaENoYW5nZUV2ZW50IiwiZ2V0SGlzdG9yeVN0YXRlIiwiaGlzdG9yeSIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5IiwiaW52YXJpYW50IiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl9yZWYiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwidHJhbnNpdGlvbk1hbmFnZXIiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsInRvSW5kZXgiLCJhbGxLZXlzIiwiZnJvbUluZGV4IiwiZGVsdGEiLCJnbyIsInJldmVydFBvcCIsImluaXRpYWxMb2NhdGlvbiIsImNyZWF0ZUhyZWYiLCJsaXN0ZW5lckNvdW50IiwiY2hlY2tET01MaXN0ZW5lcnMiLCJpc0Jsb2NrZWQiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiSGFzaENoYW5nZUV2ZW50JDEiLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJzdHJpcEhhc2giLCJnZXRIYXNoUGF0aCIsInJlcGxhY2VIYXNoUGF0aCIsImNyZWF0ZUhhc2hIaXN0b3J5IiwiX3Byb3BzJGhhc2hUeXBlIiwiaGFzaFR5cGUiLCJfSGFzaFBhdGhDb2RlcnMkaGFzaFQiLCJpZ25vcmVQYXRoIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJhbGxQYXRocyIsImxhc3RJbmRleE9mIiwiYmFzZVRhZyIsImdldEF0dHJpYnV0ZSIsInB1c2hIYXNoUGF0aCIsIm5leHRQYXRocyIsImNsYW1wIiwibG93ZXJCb3VuZCIsInVwcGVyQm91bmQiLCJtYXgiLCJjcmVhdGVNZW1vcnlIaXN0b3J5IiwiX3Byb3BzJGluaXRpYWxFbnRyaWVzIiwiaW5pdGlhbEVudHJpZXMiLCJfcHJvcHMkaW5pdGlhbEluZGV4IiwiaW5pdGlhbEluZGV4IiwiZW50cmllcyIsImVudHJ5IiwibmV4dEluZGV4IiwibmV4dEVudHJpZXMiLCJjYW5HbyIsIk1BWF9TSUdORURfMzFfQklUX0lOVCIsImNvbW1vbmpzR2xvYmFsIiwiZ2xvYmFsIiwiY3JlYXRlRXZlbnRFbWl0dGVyIiwiaGFuZGxlcnMiLCJvbiIsImhhbmRsZXIiLCJvZmYiLCJuZXdWYWx1ZSIsImNoYW5nZWRCaXRzIiwiUmVhY3QiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiZ2V0VW5pcXVlSWQiLCJfQ29tcG9uZW50IiwiX3RoaXMiLCJlbWl0dGVyIiwiX3Byb3RvIiwibmV4dFByb3BzIiwib2xkVmFsdWUiLCJfQ29tcG9uZW50MiIsIl90aGlzMiIsIm9uVXBkYXRlIiwiX3Byb3RvMiIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiZXhjbHVkZWQiLCJzb3VyY2VLZXlzIiwiaGlzdG9yeUNvbnRleHQiLCJjcmVhdGVOYW1lZENvbnRleHQiLCJSb3V0ZXIiLCJjb21wdXRlUm9vdE1hdGNoIiwicGFyYW1zIiwiaXNFeGFjdCIsIl9wZW5kaW5nTG9jYXRpb24iLCJSb3V0ZXJDb250ZXh0Iiwic3RhdGljQ29udGV4dCIsIkhpc3RvcnlDb250ZXh0IiwiY2FjaGUiLCJjYWNoZUNvdW50IiwibWF0Y2hQYXRoIiwibWF0Y2hlZCIsImNhY2hlS2V5IiwicGF0aENhY2hlIiwicmVnZXhwIiwiY29tcGlsZVBhdGgiLCJ2YWx1ZXMiLCJSb3V0ZSIsImNyZWF0ZVVSTCIsInN0YXRpY0hhbmRsZXIiLCJtZXRob2ROYW1lIiwibm9vcCIsIlN3aXRjaCIsImNvbXB1dGVkTWF0Y2giLCJCcm93c2VyUm91dGVyIiwiY3JlYXRlSGlzdG9yeSIsInJlc29sdmVUb0xvY2F0aW9uIiwibm9ybWFsaXplVG9Mb2NhdGlvbiIsImZvcndhcmRSZWZTaGltIiwiTGlua0FuY2hvciIsImlubmVyUmVmIiwibmF2aWdhdGUiLCJyZXN0IiwiZXgiLCJpc01vZGlmaWVkRXZlbnQiLCJmb3J3YXJkZWRSZWYiLCJMaW5rIiwibWV0aG9kIiwiYXJpYUN1cnJlbnQiLCJhY3RpdmVDbGFzc05hbWUiLCJhY3RpdmVTdHlsZSIsImNsYXNzTmFtZVByb3AiLCJjbGFzc05hbWUiLCJpc0FjdGl2ZVByb3AiLCJsb2NhdGlvblByb3AiLCJzdHlsZVByb3AiLCJlc2NhcGVkUGF0aCIsImNsYXNzbmFtZXMiLCJqb2luQ2xhc3NuYW1lcyIsIlN0eWxlU2hlZXQiLCJfaW5zZXJ0VGFnIiwiYmVmb3JlIiwidGFncyIsInByZXBlbmQiLCJjb250YWluZXIiLCJpc1NwZWVkeSIsInNwZWVkeSIsImN0ciIsIm5vZGVzIiwicnVsZSIsImNyZWF0ZVN0eWxlRWxlbWVudCIsInNoZWV0Iiwic3R5bGVTaGVldHMiLCJvd25lck5vZGUiLCJzaGVldEZvclRhZyIsImluc2VydFJ1bGUiLCJjc3NSdWxlcyIsInByb2Nlc3MiLCJmbHVzaCIsImFicyIsImluZGV4b2YiLCJjaGFyYXQiLCJiZWdpbiIsInN0cmxlbiIsInNpemVvZiIsImFwcGVuZCIsImxpbmUiLCJjb2x1bW4iLCJwb3NpdGlvbiIsImNoYXJhY3RlciIsImNoYXJhY3RlcnMiLCJyb290IiwicGFyZW50IiwiY29weSIsInBlZWsiLCJjYXJldCIsImFsbG9jIiwiZGVhbGxvYyIsImRlbGltaXQiLCJ3aGl0ZXNwYWNlIiwiY29tbWVudGVyIiwiTVMiLCJNT1oiLCJXRUJLSVQiLCJDT01NRU5UIiwiUlVMRVNFVCIsIkRFQ0xBUkFUSU9OIiwic2VyaWFsaXplIiwib3V0cHV0IiwicnVsZXMiLCJydWxlc2V0cyIsInBzZXVkbyIsInBvaW50cyIsImRlY2xhcmF0aW9ucyIsImF0cnVsZSIsInByb3BlcnR5IiwicHJldmlvdXMiLCJ2YXJpYWJsZSIsInNjYW5uaW5nIiwiYW1wZXJzYW5kIiwicmVmZXJlbmNlIiwiY29tbWVudCIsImRlY2xhcmF0aW9uIiwicnVsZXNldCIsInBvc3QiLCJnZXRSdWxlcyIsInBhcnNlZCIsInRvUnVsZXMiLCJmaXhlZEVsZW1lbnRzIiwiY29tcGF0IiwiaXNJbXBsaWNpdFJ1bGUiLCJwYXJlbnRSdWxlcyIsInJlbW92ZUxhYmVsIiwiZGVmYXVsdFN0eWxpc1BsdWdpbnMiLCJjb21iaW5lIiwic3NyU3R5bGVzIiwic3R5bGlzUGx1Z2lucyIsIl9pbnNlcnQiLCJpbnNlcnRlZCIsIm5vZGVzVG9IeWRyYXRlIiwiYXR0cmliIiwiY3VycmVudFNoZWV0IiwiY29sbGVjdGlvbiIsImZpbmFsaXppbmdQbHVnaW5zIiwic2VyaWFsaXplciIsInNlbGVjdG9yIiwic2VyaWFsaXplZCIsInNob3VsZENhY2hlIiwic3R5bGVzIiwicmVnaXN0ZXJlZCIsIm1zR3JpZFJvdyIsIm1zR3JpZFJvd1NwYW4iLCJtc0dyaWRDb2x1bW4iLCJtc0dyaWRDb2x1bW5TcGFuIiwiV2Via2l0TGluZUNsYW1wIiwiaHlwaGVuYXRlUmVnZXgiLCJhbmltYXRpb25SZWdleCIsImlzQ3VzdG9tUHJvcGVydHkiLCJpc1Byb2Nlc3NhYmxlVmFsdWUiLCJwcm9jZXNzU3R5bGVOYW1lIiwiYXJnIiwibWVtb2l6ZSIsInN0eWxlTmFtZSIsInByb2Nlc3NTdHlsZVZhbHVlIiwicDEiLCJwMiIsImN1cnNvciIsInVuaXRsZXNzIiwiaGFuZGxlSW50ZXJwb2xhdGlvbiIsIm1lcmdlZFByb3BzIiwiaW50ZXJwb2xhdGlvbiIsIl9fZW1vdGlvbl9zdHlsZXMiLCJhbmltIiwiaW50ZXJwb2xhdGVkIiwiY3JlYXRlU3RyaW5nRnJvbU9iamVjdCIsInByZXZpb3VzQ3Vyc29yIiwiY2FjaGVkIiwibGFiZWxQYXR0ZXJuIiwic2VyaWFsaXplU3R5bGVzIiwic3RyaW5nTW9kZSIsInN0cmluZ3MiLCJyYXciLCJsYXN0SW5kZXgiLCJpZGVudGlmaWVyTmFtZSIsImhhc2hTdHJpbmciLCJFbW90aW9uQ2FjaGVDb250ZXh0IiwiSFRNTEVsZW1lbnQiLCJjcmVhdGVDYWNoZSIsIndpdGhFbW90aW9uQ2FjaGUiLCJUaGVtZUNvbnRleHQiLCJ0eXBlUHJvcE5hbWUiLCJjcmVhdGVFbW90aW9uUHJvcHMiLCJuZXdQcm9wcyIsIkVtb3Rpb24iLCJjc3NQcm9wIiwicmVnaXN0ZXJlZFN0eWxlcyIsImNsYXNzTmFtZXMiLCJyYXdDbGFzc05hbWUiLCJnZXRSZWdpc3RlcmVkU3R5bGVzIiwiaXNTdHJpbmdUYWciLCJpbnNlcnRTdHlsZXMiLCJqc3giLCJhcmdzTGVuZ3RoIiwiY3JlYXRlRWxlbWVudEFyZ0FycmF5IiwiQXBwIiwiZW52IiwiUFVCTElDX1VSTCIsIkhvbWUiLCJBYm91dCIsIlJlYWN0RE9NIiwiZ2V0RWxlbWVudEJ5SWQiXSwibWFwcGluZ3MiOiI7cUJBQUEsU0FBU0EsSUFlUCxPQWRBQyxFQUFPQyxRQUFVRixFQUFXRyxPQUFPQyxRQUFVLFNBQVVDLEdBQ3JELElBQUssSUFBSUMsRUFBSSxFQUFHQSxFQUFJQyxVQUFVQyxPQUFRRixJQUFLLENBQ3pDLElBQUlHLEVBQVNGLFVBQVVELEdBRXZCLElBQUssSUFBSUksS0FBT0QsRUFDVk4sT0FBT1EsVUFBVUMsZUFBZUMsS0FBS0osRUFBUUMsS0FDL0NMLEVBQU9LLEdBQU9ELEVBQU9DLElBSzNCLE9BQU9MLEdBR0ZMLEVBQVNjLE1BQU1DLEtBQU1SLFdBRzlCTixFQUFPQyxRQUFVRixHLHFCQ1ZqQkMsRUFBT0MsUUFBVSxTQUFVYyxHQUN6QixJQUFJQyxFQUFPLEdBdURYLE9BckRBQSxFQUFLQyxTQUFXLFdBQ2QsT0FBT0gsS0FBS0ksS0FBSSxTQUFVQyxHQUN4QixJQUFJQyxFQUFVTCxFQUF1QkksR0FFckMsT0FBSUEsRUFBSyxHQUNBLFVBQVVFLE9BQU9GLEVBQUssR0FBSSxNQUFN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TUUsSUFDL0VELEVBQUtDLEdBQVExL0MsVUFBVTAvQyxHQUd6QixPQUFPcVMsR0FBZ0J0UyxHQStFekIsSSxHQ3BRQSxJLE1BQU1seEIsR0FBUTZyQixHQUFILEssR0FBQSxnQixxQkFBQSxHLDZFQWFYLFNBWGEsV0FDWCxPQUNFLGlDQUVFLFVBQUtBLElBQUs3ckIsSUFBVixVQ0NOLFNBUmMsV0FDWixPQUNFLHFDQ0lKLElBQU1rbEMsR0FBTSxXQUNWLE9BQ0UsZ0JBQUMxSyxHQUFELENBQWVoSSxTQUFVMkssUUFBUWdJLElBQUlDLFlBQ3JDLGdCQUFDOUssR0FBRCxLQUNFLGdCQUFDTCxFQUFELENBQU8zL0MsS0FBSyxJQUFJK0UsT0FBSyxFQUFDakksVUFBV2l1RCxLQUNqQyxnQkFBQ3BMLEVBQUQsQ0FBTzMvQyxLQUFLLFNBQVMrRSxPQUFLLEVBQUNqSSxVQUFXa3VELFFBTTVDQyxTQUFnQixnQkFBQ0wsR0FBRCxNQUFTN2tELFNBQVNtbEQsZUFBZSxTIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2V4dGVuZHM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pIHtcbiAgdmFyIF9pdGVtID0gX3NsaWNlZFRvQXJyYXkoaXRlbSwgNCksXG4gICAgICBjb250ZW50ID0gX2l0ZW1bMV0sXG4gICAgICBjc3NNYXBwaW5nID0gX2l0ZW1bM107XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwidmFyIGlzYXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcblxuLyoqXG4gKiBFeHBvc2UgYHBhdGhUb1JlZ2V4cGAuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBcblxuLyoqXG4gKiBUaGUgbWFpbiBwYXRoIG1hdGNoaW5nIHJlZ2V4cCB1dGlsaXR5LlxuICpcbiAqIEB0eXBlIHtSZWdFeHB9XG4gKi9cbnZhciBQQVRIX1JFR0VYUCA9IG5ldyBSZWdFeHAoW1xuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxuICAvLyBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBlc2NhcGUgc3BlY2lhbCBjaGFyYWN0ZXJzIHRoYXQgd29uJ3QgdHJhbnNmb3JtLlxuICAnKFxcXFxcXFxcLiknLFxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxuICAvLyBhbmQgb3B0aW9uYWwgc3VmZml4ZXMuIE1hdGNoZXMgYXBwZWFyIGFzOlxuICAvL1xuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXG4gIC8vIFwiL3JvdXRlKFxcXFxkKylcIiAgPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiXFxkK1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZF1cbiAgLy8gXCIvKlwiICAgICAgICAgICAgPT4gW1wiL1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiKlwiXVxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXG5dLmpvaW4oJ3wnKSwgJ2cnKVxuXG4vKipcbiAqIFBhcnNlIGEgc3RyaW5nIGZvciB0aGUgcmF3IHRva2Vucy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19IG9wdGlvbnNcbiAqIEByZXR1cm4geyFBcnJheX1cbiAqL1xuZnVuY3Rpb24gcGFyc2UgKHN0ciwgb3B0aW9ucykge1xuICB2YXIgdG9rZW5zID0gW11cbiAgdmFyIGtleSA9IDBcbiAgdmFyIGluZGV4ID0gMFxuICB2YXIgcGF0aCA9ICcnXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcbiAgdmFyIHJlc1xuXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XG4gICAgdmFyIG0gPSByZXNbMF1cbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXVxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcbiAgICBwYXRoICs9IHN0ci5zbGljZShpbmRleCwgb2Zmc2V0KVxuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGhcblxuICAgIC8vIElnbm9yZSBhbHJlYWR5IGVzY2FwZWQgc2VxdWVuY2VzLlxuICAgIGlmIChlc2NhcGVkKSB7XG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIG5leHQgPSBzdHJbaW5kZXhdXG4gICAgdmFyIHByZWZpeCA9IHJlc1syXVxuICAgIHZhciBuYW1lID0gcmVzWzNdXG4gICAgdmFyIGNhcHR1cmUgPSByZXNbNF1cbiAgICB2YXIgZ3JvdXAgPSByZXNbNV1cbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cbiAgICB2YXIgYXN0ZXJpc2sgPSByZXNbN11cblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gICAgICBwYXRoID0gJydcbiAgICB9XG5cbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIG9wdGlvbmFsID0gbW9kaWZpZXIgPT09ICc/JyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwXG5cbiAgICB0b2tlbnMucHVzaCh7XG4gICAgICBuYW1lOiBuYW1lIHx8IGtleSsrLFxuICAgICAgcHJlZml4OiBwcmVmaXggfHwgJycsXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcbiAgICAgIG9wdGlvbmFsOiBvcHRpb25hbCxcbiAgICAgIHJlcGVhdDogcmVwZWF0LFxuICAgICAgcGFydGlhbDogcGFydGlhbCxcbiAgICAgIGFzdGVyaXNrOiAhIWFzdGVyaXNrLFxuICAgICAgcGF0dGVybjogcGF0dGVybiA/IGVzY2FwZUdyb3VwKHBhdHRlcm4pIDogKGFzdGVyaXNrID8gJy4qJyA6ICdbXicgKyBlc2NhcGVTdHJpbmcoZGVsaW1pdGVyKSArICddKz8nKVxuICAgIH0pXG4gIH1cblxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXG4gIGlmIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICBwYXRoICs9IHN0ci5zdWJzdHIoaW5kZXgpXG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gIH1cblxuICByZXR1cm4gdG9rZW5zXG59XG5cbi8qKlxuICogQ29tcGlsZSBhIHN0cmluZyB0byBhIHRlbXBsYXRlIGZ1bmN0aW9uIGZvciB0aGUgcGF0aC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgICAgIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XG4gKi9cbmZ1bmN0aW9uIGNvbXBpbGUgKHN0ciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIFByZXR0aWVyIGVuY29kaW5nIG9mIFVSSSBwYXRoIHNlZ21lbnRzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1tcXC8/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRW5jb2RlIHRoZSBhc3RlcmlzayBwYXJhbWV0ZXIuIFNpbWlsYXIgdG8gYHByZXR0eWAsIGJ1dCBhbGxvd3Mgc2xhc2hlcy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRXhwb3NlIGEgbWV0aG9kIGZvciB0cmFuc2Zvcm1pbmcgdG9rZW5zIGludG8gdGhlIHBhdGggZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucywgb3B0aW9ucykge1xuICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cbiAgdmFyIG1hdGNoZXMgPSBuZXcgQXJyYXkodG9rZW5zLmxlbmd0aClcblxuICAvLyBDb21waWxlIGFsbCB0aGUgcGF0dGVybnMgYmVmb3JlIGNvbXBpbGF0aW9uLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgbWF0Y2hlc1tpXSA9IG5ldyBSZWdFeHAoJ14oPzonICsgdG9rZW5zW2ldLnBhdHRlcm4gKyAnKSQnLCBmbGFncyhvcHRpb25zKSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKG9iaiwgb3B0cykge1xuICAgIHZhciBwYXRoID0gJydcbiAgICB2YXIgZGF0YSA9IG9iaiB8fCB7fVxuICAgIHZhciBvcHRpb25zID0gb3B0cyB8fCB7fVxuICAgIHZhciBlbmNvZGUgPSBvcHRpb25zLnByZXR0eSA/IGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSA6IGVuY29kZVVSSUNvbXBvbmVudFxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICBwYXRoICs9IHRva2VuXG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgdmFyIHZhbHVlID0gZGF0YVt0b2tlbi5uYW1lXVxuICAgICAgdmFyIHNlZ21lbnRcblxuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgLy8gUHJlcGVuZCBwYXJ0aWFsIHNlZ21lbnQgcHJlZml4ZXMuXG4gICAgICAgICAgaWYgKHRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIGJlIGRlZmluZWQnKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChpc2FycmF5KHZhbHVlKSkge1xuICAgICAgICBpZiAoIXRva2VuLnJlcGVhdCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IHJlcGVhdCwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpICsgJ2AnKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgYmUgZW1wdHknKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdmFsdWUubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBzZWdtZW50ID0gZW5jb2RlKHZhbHVlW2pdKVxuXG4gICAgICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGFsbCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHNlZ21lbnQpICsgJ2AnKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHBhdGggKz0gKGogPT09IDAgPyB0b2tlbi5wcmVmaXggOiB0b2tlbi5kZWxpbWl0ZXIpICsgc2VnbWVudFxuICAgICAgICB9XG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgc2VnbWVudCA9IHRva2VuLmFzdGVyaXNrID8gZW5jb2RlQXN0ZXJpc2sodmFsdWUpIDogZW5jb2RlKHZhbHVlKVxuXG4gICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBcIicgKyBzZWdtZW50ICsgJ1wiJylcbiAgICAgIH1cblxuICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXggKyBzZWdtZW50XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhdGhcbiAgfVxufVxuXG4vKipcbiAqIEVzY2FwZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlU3RyaW5nIChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfFxcL1xcXFxdKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBFc2NhcGUgdGhlIGNhcHR1cmluZyBncm91cCBieSBlc2NhcGluZyBzcGVjaWFsIGNoYXJhY3RlcnMgYW5kIG1lYW5pbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBncm91cFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVHcm91cCAoZ3JvdXApIHtcbiAgcmV0dXJuIGdyb3VwLnJlcGxhY2UoLyhbPSE6JFxcLygpXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogQXR0YWNoIHRoZSBrZXlzIGFzIGEgcHJvcGVydHkgb2YgdGhlIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSByZVxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXR0YWNoS2V5cyAocmUsIGtleXMpIHtcbiAgcmUua2V5cyA9IGtleXNcbiAgcmV0dXJuIHJlXG59XG5cbi8qKlxuICogR2V0IHRoZSBmbGFncyBmb3IgYSByZWdleHAgZnJvbSB0aGUgb3B0aW9ucy5cbiAqXG4gKiBAcGFyYW0gIHtPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZmxhZ3MgKG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnMgJiYgb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xufVxuXG4vKipcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiByZWdleHBUb1JlZ2V4cCAocGF0aCwga2V5cykge1xuICAvLyBVc2UgYSBuZWdhdGl2ZSBsb29rYWhlYWQgdG8gbWF0Y2ggb25seSBjYXB0dXJpbmcgZ3JvdXBzLlxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocGF0aCwga2V5cylcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBwYXRoXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhcnJheVRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHZhciBwYXJ0cyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgcGFydHMucHVzaChwYXRoVG9SZWdleHAocGF0aFtpXSwga2V5cywgb3B0aW9ucykuc291cmNlKVxuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHJlZ2V4cCwga2V5cylcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwYXRoIHJlZ2V4cCBmcm9tIHN0cmluZyBpbnB1dC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9SZWdFeHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogRXhwb3NlIGEgZnVuY3Rpb24gZm9yIHRha2luZyB0b2tlbnMgYW5kIHJldHVybmluZyBhIFJlZ0V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICAgICAgICAgIHRva2Vuc1xuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgdmFyIHN0cmljdCA9IG9wdGlvbnMuc3RyaWN0XG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcbiAgdmFyIHJvdXRlID0gJydcblxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJvdXRlICs9IGVzY2FwZVN0cmluZyh0b2tlbilcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpXG4gICAgICB2YXIgY2FwdHVyZSA9ICcoPzonICsgdG9rZW4ucGF0dGVybiArICcpJ1xuXG4gICAgICBrZXlzLnB1c2godG9rZW4pXG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonXG4gICAgICB9XG5cbiAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICBpZiAoIXRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpPydcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSdcbiAgICAgIH1cblxuICAgICAgcm91dGUgKz0gY2FwdHVyZVxuICAgIH1cbiAgfVxuXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlclxuXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXG4gIC8vIG1hdGNoIGFscmVhZHkgZW5kcyB3aXRoIGEgc2xhc2gsIHdlIHJlbW92ZSBpdCBmb3IgY29uc2lzdGVuY3kuIFRoZSBzbGFzaFxuICAvLyBpcyB2YWxpZCBhdCB0aGUgZW5kIG9mIGEgcGF0aCBtYXRjaCwgbm90IGluIHRoZSBtaWRkbGUuIFRoaXMgaXMgaW1wb3J0YW50XG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cbiAgaWYgKCFzdHJpY3QpIHtcbiAgICByb3V0ZSA9IChlbmRzV2l0aERlbGltaXRlciA/IHJvdXRlLnNsaWNlKDAsIC1kZWxpbWl0ZXIubGVuZ3RoKSA6IHJvdXRlKSArICcoPzonICsgZGVsaW1pdGVyICsgJyg/PSQpKT8nXG4gIH1cblxuICBpZiAoZW5kKSB7XG4gICAgcm91dGUgKz0gJyQnXG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJ1xuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMobmV3IFJlZ0V4cCgnXicgKyByb3V0ZSwgZmxhZ3Mob3B0aW9ucykpLCBrZXlzKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgZ2l2ZW4gcGF0aCBzdHJpbmcsIHJldHVybmluZyBhIHJlZ3VsYXIgZXhwcmVzc2lvbi5cbiAqXG4gKiBBbiBlbXB0eSBhcnJheSBjYW4gYmUgcGFzc2VkIGluIGZvciB0aGUga2V5cywgd2hpY2ggd2lsbCBob2xkIHRoZVxuICogcGxhY2Vob2xkZXIga2V5IGRlc2NyaXB0aW9ucy4gRm9yIGV4YW1wbGUsIHVzaW5nIGAvdXNlci86aWRgLCBga2V5c2Agd2lsbFxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXG4gKlxuICogQHBhcmFtICB7KHN0cmluZ3xSZWdFeHB8QXJyYXkpfSBwYXRoXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcGF0aFRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cykpXG4gIH1cblxuICBpZiAoaXNhcnJheShwYXRoKSkge1xuICAgIHJldHVybiBhcnJheVRvUmVnZXhwKC8qKiBAdHlwZSB7IUFycmF5fSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG4gIH1cblxuICByZXR1cm4gc3RyaW5nVG9SZWdleHAoLyoqIEB0eXBlIHtzdHJpbmd9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMVxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbT1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24geShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IoeSgyMjcpKTt2YXIgYmE9bmV3IFNldCxjYT17fTtmdW5jdGlvbiBkYShhLGIpe2VhKGEsYik7ZWEoYStcIkNhcHR1cmVcIixiKX1cbmZ1bmN0aW9uIGVhKGEsYil7Y2FbYV09Yjtmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKWJhLmFkZChiW2FdKX1cbnZhciBmYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksaGE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGlhPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksXG5qYT17fSxrYT17fTtmdW5jdGlvbiBsYShhKXtpZihpYS5jYWxsKGthLGEpKXJldHVybiEwO2lmKGlhLmNhbGwoamEsYSkpcmV0dXJuITE7aWYoaGEudGVzdChhKSlyZXR1cm4ga2FbYV09ITA7amFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gbWEoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBuYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxtYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEIoYSxiLGMsZCxlLGYsZyl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWY7dGhpcy5yZW1vdmVFbXB0eVN0cmluZz1nfXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMCwhMSxhLG51bGwsITEsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEIoYiwxLCExLGFbMV0sbnVsbCwhMSwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLG51bGwsITEsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZGlzYWJsZVJlbW90ZVBsYXliYWNrIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITAsYSxudWxsLCExLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDQsITEsYSxudWxsLCExLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNiwhMSxhLG51bGwsITEsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTt2YXIgb2E9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBwYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxcbnBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLG51bGwsITEsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbkQueGxpbmtIcmVmPW5ldyBCKFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCwhMSk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCwhMCl9KTtcbmZ1bmN0aW9uIHFhKGEsYixjLGQpe3ZhciBlPUQuaGFzT3duUHJvcGVydHkoYik/RFtiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KG5hKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9sYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIHJhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELHNhPTYwMTAzLHRhPTYwMTA2LHVhPTYwMTA3LHdhPTYwMTA4LHhhPTYwMTE0LHlhPTYwMTA5LHphPTYwMTEwLEFhPTYwMTEyLEJhPTYwMTEzLENhPTYwMTIwLERhPTYwMTE1LEVhPTYwMTE2LEZhPTYwMTIxLEdhPTYwMTI4LEhhPTYwMTI5LElhPTYwMTMwLEphPTYwMTMxO1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIEU9U3ltYm9sLmZvcjtzYT1FKFwicmVhY3QuZWxlbWVudFwiKTt0YT1FKFwicmVhY3QucG9ydGFsXCIpO3VhPUUoXCJyZWFjdC5mcmFnbWVudFwiKTt3YT1FKFwicmVhY3Quc3RyaWN0X21vZGVcIik7eGE9RShcInJlYWN0LnByb2ZpbGVyXCIpO3lhPUUoXCJyZWFjdC5wcm92aWRlclwiKTt6YT1FKFwicmVhY3QuY29udGV4dFwiKTtBYT1FKFwicmVhY3QuZm9yd2FyZF9yZWZcIik7QmE9RShcInJlYWN0LnN1c3BlbnNlXCIpO0NhPUUoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpO0RhPUUoXCJyZWFjdC5tZW1vXCIpO0VhPUUoXCJyZWFjdC5sYXp5XCIpO0ZhPUUoXCJyZWFjdC5ibG9ja1wiKTtFKFwicmVhY3Quc2NvcGVcIik7R2E9RShcInJlYWN0Lm9wYXF1ZS5pZFwiKTtIYT1FKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtJYT1FKFwicmVhY3Qub2Zmc2NyZWVuXCIpO0phPUUoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpfVxudmFyIEthPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBMYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9S2EmJmFbS2FdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIE1hO2Z1bmN0aW9uIE5hKGEpe2lmKHZvaWQgMD09PU1hKXRyeXt0aHJvdyBFcnJvcigpO31jYXRjaChjKXt2YXIgYj1jLnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO01hPWImJmJbMV18fFwiXCJ9cmV0dXJuXCJcXG5cIitNYSthfXZhciBPYT0hMTtcbmZ1bmN0aW9uIFBhKGEsYil7aWYoIWF8fE9hKXJldHVyblwiXCI7T2E9ITA7dmFyIGM9RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9dm9pZCAwO3RyeXtpZihiKWlmKGI9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO30sT2JqZWN0LmRlZmluZVByb3BlcnR5KGIucHJvdG90eXBlLFwicHJvcHNcIix7c2V0OmZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9fSksXCJvYmplY3RcIj09PXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmNvbnN0cnVjdCl7dHJ5e1JlZmxlY3QuY29uc3RydWN0KGIsW10pfWNhdGNoKGspe3ZhciBkPWt9UmVmbGVjdC5jb25zdHJ1Y3QoYSxbXSxiKX1lbHNle3RyeXtiLmNhbGwoKX1jYXRjaChrKXtkPWt9YS5jYWxsKGIucHJvdG90eXBlKX1lbHNle3RyeXt0aHJvdyBFcnJvcigpO31jYXRjaChrKXtkPWt9YSgpfX1jYXRjaChrKXtpZihrJiZkJiZcInN0cmluZ1wiPT09dHlwZW9mIGsuc3RhY2spe2Zvcih2YXIgZT1rLnN0YWNrLnNwbGl0KFwiXFxuXCIpLFxuZj1kLnN0YWNrLnNwbGl0KFwiXFxuXCIpLGc9ZS5sZW5ndGgtMSxoPWYubGVuZ3RoLTE7MTw9ZyYmMDw9aCYmZVtnXSE9PWZbaF07KWgtLTtmb3IoOzE8PWcmJjA8PWg7Zy0tLGgtLSlpZihlW2ddIT09ZltoXSl7aWYoMSE9PWd8fDEhPT1oKXtkbyBpZihnLS0saC0tLDA+aHx8ZVtnXSE9PWZbaF0pcmV0dXJuXCJcXG5cIitlW2ddLnJlcGxhY2UoXCIgYXQgbmV3IFwiLFwiIGF0IFwiKTt3aGlsZSgxPD1nJiYwPD1oKX1icmVha319fWZpbmFsbHl7T2E9ITEsRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9Y31yZXR1cm4oYT1hP2EuZGlzcGxheU5hbWV8fGEubmFtZTpcIlwiKT9OYShhKTpcIlwifVxuZnVuY3Rpb24gUWEoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIE5hKGEudHlwZSk7Y2FzZSAxNjpyZXR1cm4gTmEoXCJMYXp5XCIpO2Nhc2UgMTM6cmV0dXJuIE5hKFwiU3VzcGVuc2VcIik7Y2FzZSAxOTpyZXR1cm4gTmEoXCJTdXNwZW5zZUxpc3RcIik7Y2FzZSAwOmNhc2UgMjpjYXNlIDE1OnJldHVybiBhPVBhKGEudHlwZSwhMSksYTtjYXNlIDExOnJldHVybiBhPVBhKGEudHlwZS5yZW5kZXIsITEpLGE7Y2FzZSAyMjpyZXR1cm4gYT1QYShhLnR5cGUuX3JlbmRlciwhMSksYTtjYXNlIDE6cmV0dXJuIGE9UGEoYS50eXBlLCEwKSxhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBSYShhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIHVhOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIHRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSB4YTpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSB3YTpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIEJhOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIENhOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHphOnJldHVybihhLmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuQ29uc3VtZXJcIjtjYXNlIHlhOnJldHVybihhLl9jb250ZXh0LmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuUHJvdmlkZXJcIjtjYXNlIEFhOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO1xucmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBEYTpyZXR1cm4gUmEoYS50eXBlKTtjYXNlIEZhOnJldHVybiBSYShhLl9yZW5kZXIpO2Nhc2UgRWE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFJhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9ZnVuY3Rpb24gU2EoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIFRhKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBVYShhKXt2YXIgYj1UYShhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVmEoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVVhKGEpKX1mdW5jdGlvbiBXYShhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9VGEoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBYYShhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19XG5mdW5jdGlvbiBZYShhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbSh7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gWmEoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9U2EobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiAkYShhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnFhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBhYihhLGIpeyRhKGEsYik7dmFyIGM9U2EoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/YmIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmYmIoYSxiLnR5cGUsU2EoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBjYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gYmIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxYYShhLm93bmVyRG9jdW1lbnQpIT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gZGIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZWIoYSxiKXthPW0oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1kYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBmYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrU2EoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGdiKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih5KDkxKSk7cmV0dXJuIG0oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gaGIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IoeSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHkoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpTYShjKX19XG5mdW5jdGlvbiBpYihhLGIpe3ZhciBjPVNhKGIudmFsdWUpLGQ9U2EoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBrYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBsYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIG1iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9sYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBuYixvYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1rYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtuYj1uYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtuYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1uYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBwYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHFiPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHJiPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhxYikuZm9yRWFjaChmdW5jdGlvbihhKXtyYi5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3FiW2JdPXFiW2FdfSl9KTtmdW5jdGlvbiBzYihhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cWIuaGFzT3duUHJvcGVydHkoYSkmJnFiW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHRiKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXNiKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHViPW0oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB2YihhLGIpe2lmKGIpe2lmKHViW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSgxMzcsYSkpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IoeSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IoeSg2MikpO319XG5mdW5jdGlvbiB3YihhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19ZnVuY3Rpb24geGIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfXZhciB5Yj1udWxsLHpiPW51bGwsQWI9bnVsbDtcbmZ1bmN0aW9uIEJiKGEpe2lmKGE9Q2IoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB5Yil0aHJvdyBFcnJvcih5KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPURiKGIpLHliKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIEViKGEpe3piP0FiP0FiLnB1c2goYSk6QWI9W2FdOnpiPWF9ZnVuY3Rpb24gRmIoKXtpZih6Yil7dmFyIGE9emIsYj1BYjtBYj16Yj1udWxsO0JiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylCYihiW2FdKX19ZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEliKCl7fXZhciBKYj1HYixLYj0hMSxMYj0hMTtmdW5jdGlvbiBNYigpe2lmKG51bGwhPT16Ynx8bnVsbCE9PUFiKUliKCksRmIoKX1cbmZ1bmN0aW9uIE5iKGEsYixjKXtpZihMYilyZXR1cm4gYShiLGMpO0xiPSEwO3RyeXtyZXR1cm4gSmIoYSxiLGMpfWZpbmFsbHl7TGI9ITEsTWIoKX19XG5mdW5jdGlvbiBPYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHkoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgUGI9ITE7aWYoZmEpdHJ5e3ZhciBRYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe1BiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYil9Y2F0Y2goYSl7UGI9ITF9ZnVuY3Rpb24gUmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG4pe3RoaXMub25FcnJvcihuKX19dmFyIFNiPSExLFRiPW51bGwsVWI9ITEsVmI9bnVsbCxXYj17b25FcnJvcjpmdW5jdGlvbihhKXtTYj0hMDtUYj1hfX07ZnVuY3Rpb24gWGIoYSxiLGMsZCxlLGYsZyxoLGspe1NiPSExO1RiPW51bGw7UmIuYXBwbHkoV2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFliKGEsYixjLGQsZSxmLGcsaCxrKXtYYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoU2Ipe2lmKFNiKXt2YXIgbD1UYjtTYj0hMTtUYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IoeSgxOTgpKTtVYnx8KFViPSEwLFZiPWwpfX1mdW5jdGlvbiBaYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gYWMoYSl7aWYoWmIoYSkhPT1hKXRocm93IEVycm9yKHkoMTg4KSk7fVxuZnVuY3Rpb24gYmMoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9WmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gYWMoZSksYTtpZihmPT09ZClyZXR1cm4gYWMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih5KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHkoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IoeSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBjYyhhKXthPWJjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gZGMoYSxiKXtmb3IodmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWI7KXtpZihiPT09YXx8Yj09PWMpcmV0dXJuITA7Yj1iLnJldHVybn1yZXR1cm4hMX12YXIgZWMsZmMsZ2MsaGMsaWM9ITEsamM9W10sa2M9bnVsbCxsYz1udWxsLG1jPW51bGwsbmM9bmV3IE1hcCxvYz1uZXcgTWFwLHBjPVtdLHFjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIHJjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLGRvbUV2ZW50TmFtZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wxNixuYXRpdmVFdmVudDplLHRhcmdldENvbnRhaW5lcnM6W2RdfX1mdW5jdGlvbiBzYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmtjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpsYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjptYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6bmMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6b2MuZGVsZXRlKGIucG9pbnRlcklkKX19XG5mdW5jdGlvbiB0YyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPXJjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPUNiKGIpLG51bGwhPT1iJiZmYyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7Yj1hLnRhcmdldENvbnRhaW5lcnM7bnVsbCE9PWUmJi0xPT09Yi5pbmRleE9mKGUpJiZiLnB1c2goZSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB1YyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNpblwiOnJldHVybiBrYz10YyhrYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gbGM9dGMobGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIG1jPXRjKG1jLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7bmMuc2V0KGYsdGMobmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLG9jLnNldChmLHRjKG9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIHZjKGEpe3ZhciBiPXdjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9WmIoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9JGIoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7aGMoYS5sYW5lUHJpb3JpdHksZnVuY3Rpb24oKXtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7Z2MoYyl9KX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiB4YyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpcmV0dXJuIGI9Q2IoYyksbnVsbCE9PWImJmZjKGIpLGEuYmxvY2tlZE9uPWMsITE7Yi5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIHpjKGEsYixjKXt4YyhhKSYmYy5kZWxldGUoYil9XG5mdW5jdGlvbiBBYygpe2ZvcihpYz0hMTswPGpjLmxlbmd0aDspe3ZhciBhPWpjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1DYihhLmJsb2NrZWRPbik7bnVsbCE9PWEmJmVjKGEpO2JyZWFrfWZvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXthLmJsb2NrZWRPbj1jO2JyZWFrfWIuc2hpZnQoKX1udWxsPT09YS5ibG9ja2VkT24mJmpjLnNoaWZ0KCl9bnVsbCE9PWtjJiZ4YyhrYykmJihrYz1udWxsKTtudWxsIT09bGMmJnhjKGxjKSYmKGxjPW51bGwpO251bGwhPT1tYyYmeGMobWMpJiYobWM9bnVsbCk7bmMuZm9yRWFjaCh6Yyk7b2MuZm9yRWFjaCh6Yyl9XG5mdW5jdGlvbiBCYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsaWN8fChpYz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxBYykpKX1cbmZ1bmN0aW9uIENjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIEJjKGIsYSl9aWYoMDxqYy5sZW5ndGgpe0JjKGpjWzBdLGEpO2Zvcih2YXIgYz0xO2M8amMubGVuZ3RoO2MrKyl7dmFyIGQ9amNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1rYyYmQmMoa2MsYSk7bnVsbCE9PWxjJiZCYyhsYyxhKTtudWxsIT09bWMmJkJjKG1jLGEpO25jLmZvckVhY2goYik7b2MuZm9yRWFjaChiKTtmb3IoYz0wO2M8cGMubGVuZ3RoO2MrKylkPXBjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxwYy5sZW5ndGgmJihjPXBjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KXZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmcGMuc2hpZnQoKX1cbmZ1bmN0aW9uIERjKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIEVjPXthbmltYXRpb25lbmQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpEYyhcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LEZjPXt9LEdjPXt9O1xuZmEmJihHYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBFYy5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBFYy50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIEhjKGEpe2lmKEZjW2FdKXJldHVybiBGY1thXTtpZighRWNbYV0pcmV0dXJuIGE7dmFyIGI9RWNbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gR2MpcmV0dXJuIEZjW2FdPWJbY107cmV0dXJuIGF9XG52YXIgSWM9SGMoXCJhbmltYXRpb25lbmRcIiksSmM9SGMoXCJhbmltYXRpb25pdGVyYXRpb25cIiksS2M9SGMoXCJhbmltYXRpb25zdGFydFwiKSxMYz1IYyhcInRyYW5zaXRpb25lbmRcIiksTWM9bmV3IE1hcCxOYz1uZXcgTWFwLE9jPVtcImFib3J0XCIsXCJhYm9ydFwiLEljLFwiYW5pbWF0aW9uRW5kXCIsSmMsXCJhbmltYXRpb25JdGVyYXRpb25cIixLYyxcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcblwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLExjLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBQYyhhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXTtlPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO05jLnNldChkLGIpO01jLnNldChkLGUpO2RhKGUsW2RdKX19dmFyIFFjPXIudW5zdGFibGVfbm93O1FjKCk7dmFyIEY9ODtcbmZ1bmN0aW9uIFJjKGEpe2lmKDAhPT0oMSZhKSlyZXR1cm4gRj0xNSwxO2lmKDAhPT0oMiZhKSlyZXR1cm4gRj0xNCwyO2lmKDAhPT0oNCZhKSlyZXR1cm4gRj0xMyw0O3ZhciBiPTI0JmE7aWYoMCE9PWIpcmV0dXJuIEY9MTIsYjtpZigwIT09KGEmMzIpKXJldHVybiBGPTExLDMyO2I9MTkyJmE7aWYoMCE9PWIpcmV0dXJuIEY9MTAsYjtpZigwIT09KGEmMjU2KSlyZXR1cm4gRj05LDI1NjtiPTM1ODQmYTtpZigwIT09YilyZXR1cm4gRj04LGI7aWYoMCE9PShhJjQwOTYpKXJldHVybiBGPTcsNDA5NjtiPTQxODYxMTImYTtpZigwIT09YilyZXR1cm4gRj02LGI7Yj02MjkxNDU2MCZhO2lmKDAhPT1iKXJldHVybiBGPTUsYjtpZihhJjY3MTA4ODY0KXJldHVybiBGPTQsNjcxMDg4NjQ7aWYoMCE9PShhJjEzNDIxNzcyOCkpcmV0dXJuIEY9MywxMzQyMTc3Mjg7Yj04MDUzMDYzNjgmYTtpZigwIT09YilyZXR1cm4gRj0yLGI7aWYoMCE9PSgxMDczNzQxODI0JmEpKXJldHVybiBGPTEsMTA3Mzc0MTgyNDtcbkY9ODtyZXR1cm4gYX1mdW5jdGlvbiBTYyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gMTU7Y2FzZSA5ODpyZXR1cm4gMTA7Y2FzZSA5NzpjYXNlIDk2OnJldHVybiA4O2Nhc2UgOTU6cmV0dXJuIDI7ZGVmYXVsdDpyZXR1cm4gMH19ZnVuY3Rpb24gVGMoYSl7c3dpdGNoKGEpe2Nhc2UgMTU6Y2FzZSAxNDpyZXR1cm4gOTk7Y2FzZSAxMzpjYXNlIDEyOmNhc2UgMTE6Y2FzZSAxMDpyZXR1cm4gOTg7Y2FzZSA5OmNhc2UgODpjYXNlIDc6Y2FzZSA2OmNhc2UgNDpjYXNlIDU6cmV0dXJuIDk3O2Nhc2UgMzpjYXNlIDI6Y2FzZSAxOnJldHVybiA5NTtjYXNlIDA6cmV0dXJuIDkwO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzNTgsYSkpO319XG5mdW5jdGlvbiBVYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzO2lmKDA9PT1jKXJldHVybiBGPTA7dmFyIGQ9MCxlPTAsZj1hLmV4cGlyZWRMYW5lcyxnPWEuc3VzcGVuZGVkTGFuZXMsaD1hLnBpbmdlZExhbmVzO2lmKDAhPT1mKWQ9ZixlPUY9MTU7ZWxzZSBpZihmPWMmMTM0MjE3NzI3LDAhPT1mKXt2YXIgaz1mJn5nOzAhPT1rPyhkPVJjKGspLGU9Rik6KGgmPWYsMCE9PWgmJihkPVJjKGgpLGU9RikpfWVsc2UgZj1jJn5nLDAhPT1mPyhkPVJjKGYpLGU9Rik6MCE9PWgmJihkPVJjKGgpLGU9Rik7aWYoMD09PWQpcmV0dXJuIDA7ZD0zMS1WYyhkKTtkPWMmKCgwPmQ/MDoxPDxkKTw8MSktMTtpZigwIT09YiYmYiE9PWQmJjA9PT0oYiZnKSl7UmMoYik7aWYoZTw9RilyZXR1cm4gYjtGPWV9Yj1hLmVudGFuZ2xlZExhbmVzO2lmKDAhPT1iKWZvcihhPWEuZW50YW5nbGVtZW50cyxiJj1kOzA8YjspYz0zMS1WYyhiKSxlPTE8PGMsZHw9YVtjXSxiJj1+ZTtyZXR1cm4gZH1cbmZ1bmN0aW9uIFdjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiBYYyhhLGIpe3N3aXRjaChhKXtjYXNlIDE1OnJldHVybiAxO2Nhc2UgMTQ6cmV0dXJuIDI7Y2FzZSAxMjpyZXR1cm4gYT1ZYygyNCZ+YiksMD09PWE/WGMoMTAsYik6YTtjYXNlIDEwOnJldHVybiBhPVljKDE5MiZ+YiksMD09PWE/WGMoOCxiKTphO2Nhc2UgODpyZXR1cm4gYT1ZYygzNTg0Jn5iKSwwPT09YSYmKGE9WWMoNDE4NjExMiZ+YiksMD09PWEmJihhPTUxMikpLGE7Y2FzZSAyOnJldHVybiBiPVljKDgwNTMwNjM2OCZ+YiksMD09PWImJihiPTI2ODQzNTQ1NiksYn10aHJvdyBFcnJvcih5KDM1OCxhKSk7fWZ1bmN0aW9uIFljKGEpe3JldHVybiBhJi1hfWZ1bmN0aW9uIFpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gJGMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iO3ZhciBkPWItMTthLnN1c3BlbmRlZExhbmVzJj1kO2EucGluZ2VkTGFuZXMmPWQ7YT1hLmV2ZW50VGltZXM7Yj0zMS1WYyhiKTthW2JdPWN9dmFyIFZjPU1hdGguY2x6MzI/TWF0aC5jbHozMjphZCxiZD1NYXRoLmxvZyxjZD1NYXRoLkxOMjtmdW5jdGlvbiBhZChhKXtyZXR1cm4gMD09PWE/MzI6MzEtKGJkKGEpL2NkfDApfDB9dmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7S2J8fEliKCk7dmFyIGU9aGQsZj1LYjtLYj0hMDt0cnl7SGIoZSxhLGIsYyxkKX1maW5hbGx5eyhLYj1mKXx8TWIoKX19ZnVuY3Rpb24gaWQoYSxiLGMsZCl7ZWQoZGQsaGQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGhkKGEsYixjLGQpe2lmKGZkKXt2YXIgZTtpZigoZT0wPT09KGImNCkpJiYwPGpjLmxlbmd0aCYmLTE8cWMuaW5kZXhPZihhKSlhPXJjKG51bGwsYSxiLGMsZCksamMucHVzaChhKTtlbHNle3ZhciBmPXljKGEsYixjLGQpO2lmKG51bGw9PT1mKWUmJnNjKGEsZCk7ZWxzZXtpZihlKXtpZigtMTxxYy5pbmRleE9mKGEpKXthPXJjKGYsYSxiLGMsZCk7amMucHVzaChhKTtyZXR1cm59aWYodWMoZixhLGIsYyxkKSlyZXR1cm47c2MoYSxkKX1qZChhLGIsZCxudWxsLGMpfX19fVxuZnVuY3Rpb24geWMoYSxiLGMsZCl7dmFyIGU9eGIoZCk7ZT13YyhlKTtpZihudWxsIT09ZSl7dmFyIGY9WmIoZSk7aWYobnVsbD09PWYpZT1udWxsO2Vsc2V7dmFyIGc9Zi50YWc7aWYoMTM9PT1nKXtlPSRiKGYpO2lmKG51bGwhPT1lKXJldHVybiBlO2U9bnVsbH1lbHNlIGlmKDM9PT1nKXtpZihmLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09Zi50YWc/Zi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2U9bnVsbH1lbHNlIGYhPT1lJiYoZT1udWxsKX19amQoYSxiLGQsZSxjKTtyZXR1cm4gbnVsbH12YXIga2Q9bnVsbCxsZD1udWxsLG1kPW51bGw7XG5mdW5jdGlvbiBuZCgpe2lmKG1kKXJldHVybiBtZDt2YXIgYSxiPWxkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIG1kPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gb2QoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9ZnVuY3Rpb24gcGQoKXtyZXR1cm4hMH1mdW5jdGlvbiBxZCgpe3JldHVybiExfVxuZnVuY3Rpb24gcmQoYSl7ZnVuY3Rpb24gYihiLGQsZSxmLGcpe3RoaXMuX3JlYWN0TmFtZT1iO3RoaXMuX3RhcmdldEluc3Q9ZTt0aGlzLnR5cGU9ZDt0aGlzLm5hdGl2ZUV2ZW50PWY7dGhpcy50YXJnZXQ9Zzt0aGlzLmN1cnJlbnRUYXJnZXQ9bnVsbDtmb3IodmFyIGMgaW4gYSlhLmhhc093blByb3BlcnR5KGMpJiYoYj1hW2NdLHRoaXNbY109Yj9iKGYpOmZbY10pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1mLmRlZmF1bHRQcmV2ZW50ZWQ/Zi5kZWZhdWx0UHJldmVudGVkOiExPT09Zi5yZXR1cm5WYWx1ZSk/cGQ6cWQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1xZDtyZXR1cm4gdGhpc31tKGIucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiZcbihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1wZCl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1wZCl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt9LGlzUGVyc2lzdGVudDpwZH0pO3JldHVybiBifVxudmFyIHNkPXtldmVudFBoYXNlOjAsYnViYmxlczowLGNhbmNlbGFibGU6MCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOjAsaXNUcnVzdGVkOjB9LHRkPXJkKHNkKSx1ZD1tKHt9LHNkLHt2aWV3OjAsZGV0YWlsOjB9KSx2ZD1yZCh1ZCksd2QseGQseWQsQWQ9bSh7fSx1ZCx7c2NyZWVuWDowLHNjcmVlblk6MCxjbGllbnRYOjAsY2xpZW50WTowLHBhZ2VYOjAscGFnZVk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxidXR0b246MCxidXR0b25zOjAscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YS5yZWxhdGVkVGFyZ2V0P2EuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudDphLnJlbGF0ZWRUYXJnZXR9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW5cbmEpcmV0dXJuIGEubW92ZW1lbnRYO2EhPT15ZCYmKHlkJiZcIm1vdXNlbW92ZVwiPT09YS50eXBlPyh3ZD1hLnNjcmVlblgteWQuc2NyZWVuWCx4ZD1hLnNjcmVlblkteWQuc2NyZWVuWSk6eGQ9d2Q9MCx5ZD1hKTtyZXR1cm4gd2R9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtyZXR1cm5cIm1vdmVtZW50WVwiaW4gYT9hLm1vdmVtZW50WTp4ZH19KSxCZD1yZChBZCksQ2Q9bSh7fSxBZCx7ZGF0YVRyYW5zZmVyOjB9KSxEZD1yZChDZCksRWQ9bSh7fSx1ZCx7cmVsYXRlZFRhcmdldDowfSksRmQ9cmQoRWQpLEdkPW0oe30sc2Qse2FuaW1hdGlvbk5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLEhkPXJkKEdkKSxJZD1tKHt9LHNkLHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksSmQ9cmQoSWQpLEtkPW0oe30sc2Qse2RhdGE6MH0pLExkPXJkKEtkKSxNZD17RXNjOlwiRXNjYXBlXCIsXG5TcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxOZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIiwxMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIixcbjExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sT2Q9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2RbYV0pPyEhYlthXTohMX1mdW5jdGlvbiB6ZCgpe3JldHVybiBQZH1cbnZhciBRZD1tKHt9LHVkLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPU1kW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9kKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9OZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGNvZGU6MCxsb2NhdGlvbjowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxyZXBlYXQ6MCxsb2NhbGU6MCxnZXRNb2RpZmllclN0YXRlOnpkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29kKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksUmQ9cmQoUWQpLFNkPW0oe30sQWQse3BvaW50ZXJJZDowLHdpZHRoOjAsaGVpZ2h0OjAscHJlc3N1cmU6MCx0YW5nZW50aWFsUHJlc3N1cmU6MCx0aWx0WDowLHRpbHRZOjAsdHdpc3Q6MCxwb2ludGVyVHlwZTowLGlzUHJpbWFyeTowfSksVGQ9cmQoU2QpLFVkPW0oe30sdWQse3RvdWNoZXM6MCx0YXJnZXRUb3VjaGVzOjAsY2hhbmdlZFRvdWNoZXM6MCxhbHRLZXk6MCxtZXRhS2V5OjAsY3RybEtleTowLHNoaWZ0S2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZH0pLFZkPXJkKFVkKSxXZD1tKHt9LHNkLHtwcm9wZXJ0eU5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLFhkPXJkKFdkKSxZZD1tKHt9LEFkLHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxcbmRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjowLGRlbHRhTW9kZTowfSksWmQ9cmQoWWQpLCRkPVs5LDEzLDI3LDMyXSxhZT1mYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csYmU9bnVsbDtmYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoYmU9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgY2U9ZmEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFiZSxkZT1mYSYmKCFhZXx8YmUmJjg8YmUmJjExPj1iZSksZWU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksZmU9ITE7XG5mdW5jdGlvbiBnZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PSRkLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJmb2N1c291dFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGhlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIGllPSExO2Z1bmN0aW9uIGplKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBoZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7ZmU9ITA7cmV0dXJuIGVlO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PWVlJiZmZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBrZShhLGIpe2lmKGllKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFhZSYmZ2UoYSxiKT8oYT1uZCgpLG1kPWxkPWtkPW51bGwsaWU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGRlJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBsZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBtZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWxlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiBuZShhLGIsYyxkKXtFYihkKTtiPW9lKGIsXCJvbkNoYW5nZVwiKTswPGIubGVuZ3RoJiYoYz1uZXcgdGQoXCJvbkNoYW5nZVwiLFwiY2hhbmdlXCIsbnVsbCxjLGQpLGEucHVzaCh7ZXZlbnQ6YyxsaXN0ZW5lcnM6Yn0pKX12YXIgcGU9bnVsbCxxZT1udWxsO2Z1bmN0aW9uIHJlKGEpe3NlKGEsMCl9ZnVuY3Rpb24gdGUoYSl7dmFyIGI9dWUoYSk7aWYoV2EoYikpcmV0dXJuIGF9XG5mdW5jdGlvbiB2ZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciB3ZT0hMTtpZihmYSl7dmFyIHhlO2lmKGZhKXt2YXIgeWU9XCJvbmlucHV0XCJpbiBkb2N1bWVudDtpZigheWUpe3ZhciB6ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3plLnNldEF0dHJpYnV0ZShcIm9uaW5wdXRcIixcInJldHVybjtcIik7eWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHplLm9uaW5wdXR9eGU9eWV9ZWxzZSB4ZT0hMTt3ZT14ZSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKX1mdW5jdGlvbiBBZSgpe3BlJiYocGUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpLHFlPXBlPW51bGwpfWZ1bmN0aW9uIEJlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZ0ZShxZSkpe3ZhciBiPVtdO25lKGIscWUsYSx4YihhKSk7YT1yZTtpZihLYilhKGIpO2Vsc2V7S2I9ITA7dHJ5e0diKGEsYil9ZmluYWxseXtLYj0hMSxNYigpfX19fVxuZnVuY3Rpb24gQ2UoYSxiLGMpe1wiZm9jdXNpblwiPT09YT8oQWUoKSxwZT1iLHFlPWMscGUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpKTpcImZvY3Vzb3V0XCI9PT1hJiZBZSgpfWZ1bmN0aW9uIERlKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIHRlKHFlKX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEZlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEdlKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgSGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6R2UsSWU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIEplKGEsYil7aWYoSGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFJZS5jYWxsKGIsY1tkXSl8fCFIZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIEtlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIExlKGEsYil7dmFyIGM9S2UoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9S2UoYyl9fWZ1bmN0aW9uIE1lKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/TWUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gTmUoKXtmb3IodmFyIGE9d2luZG93LGI9WGEoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9WGEoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBQZT1mYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFFlPW51bGwsUmU9bnVsbCxTZT1udWxsLFRlPSExO1xuZnVuY3Rpb24gVWUoYSxiLGMpe3ZhciBkPWMud2luZG93PT09Yz9jLmRvY3VtZW50Ojk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O1RlfHxudWxsPT1RZXx8UWUhPT1YYShkKXx8KGQ9UWUsXCJzZWxlY3Rpb25TdGFydFwiaW4gZCYmT2UoZCk/ZD17c3RhcnQ6ZC5zZWxlY3Rpb25TdGFydCxlbmQ6ZC5zZWxlY3Rpb25FbmR9OihkPShkLm93bmVyRG9jdW1lbnQmJmQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxkPXthbmNob3JOb2RlOmQuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6ZC5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmQuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmQuZm9jdXNPZmZzZXR9KSxTZSYmSmUoU2UsZCl8fChTZT1kLGQ9b2UoUmUsXCJvblNlbGVjdFwiKSwwPGQubGVuZ3RoJiYoYj1uZXcgdGQoXCJvblNlbGVjdFwiLFwic2VsZWN0XCIsbnVsbCxiLGMpLGEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6ZH0pLGIudGFyZ2V0PVFlKSkpfVxuUGMoXCJjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1c2luIGZvY3VzIGZvY3Vzb3V0IGJsdXIgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSxcbjApO1BjKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO1BjKE9jLDIpO2Zvcih2YXIgVmU9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLFdlPTA7V2U8VmUubGVuZ3RoO1dlKyspTmMuc2V0KFZlW1dlXSwwKTtlYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO1xuZWEoXCJvbk1vdXNlTGVhdmVcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtlYShcIm9uUG9pbnRlckVudGVyXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2VhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZGEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtkYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtcbmRhKFwib25Db21wb3NpdGlvblN0YXJ0XCIsXCJjb21wb3NpdGlvbnN0YXJ0IGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgWGU9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLFllPW5ldyBTZXQoXCJjYW5jZWwgY2xvc2UgaW52YWxpZCBsb2FkIHNjcm9sbCB0b2dnbGVcIi5zcGxpdChcIiBcIikuY29uY2F0KFhlKSk7XG5mdW5jdGlvbiBaZShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9YztZYihkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gc2UoYSxiKXtiPTAhPT0oYiY0KTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXSxlPWQuZXZlbnQ7ZD1kLmxpc3RlbmVyczthOnt2YXIgZj12b2lkIDA7aWYoYilmb3IodmFyIGc9ZC5sZW5ndGgtMTswPD1nO2ctLSl7dmFyIGg9ZFtnXSxrPWguaW5zdGFuY2UsbD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfWVsc2UgZm9yKGc9MDtnPGQubGVuZ3RoO2crKyl7aD1kW2ddO2s9aC5pbnN0YW5jZTtsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9fX1pZihVYil0aHJvdyBhPVZiLFViPSExLFZiPW51bGwsYTt9XG5mdW5jdGlvbiBHKGEsYil7dmFyIGM9JGUoYiksZD1hK1wiX19idWJibGVcIjtjLmhhcyhkKXx8KGFmKGIsYSwyLCExKSxjLmFkZChkKSl9dmFyIGJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gY2YoYSl7YVtiZl18fChhW2JmXT0hMCxiYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1llLmhhcyhiKXx8ZGYoYiwhMSxhLG51bGwpO2RmKGIsITAsYSxudWxsKX0pKX1cbmZ1bmN0aW9uIGRmKGEsYixjLGQpe3ZhciBlPTQ8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzRdP2FyZ3VtZW50c1s0XTowLGY9YztcInNlbGVjdGlvbmNoYW5nZVwiPT09YSYmOSE9PWMubm9kZVR5cGUmJihmPWMub3duZXJEb2N1bWVudCk7aWYobnVsbCE9PWQmJiFiJiZZZS5oYXMoYSkpe2lmKFwic2Nyb2xsXCIhPT1hKXJldHVybjtlfD0yO2Y9ZH12YXIgZz0kZShmKSxoPWErXCJfX1wiKyhiP1wiY2FwdHVyZVwiOlwiYnViYmxlXCIpO2cuaGFzKGgpfHwoYiYmKGV8PTQpLGFmKGYsYSxlLGIpLGcuYWRkKGgpKX1cbmZ1bmN0aW9uIGFmKGEsYixjLGQpe3ZhciBlPU5jLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZT8yOmUpe2Nhc2UgMDplPWdkO2JyZWFrO2Nhc2UgMTplPWlkO2JyZWFrO2RlZmF1bHQ6ZT1oZH1jPWUuYmluZChudWxsLGIsYyxhKTtlPXZvaWQgMDshUGJ8fFwidG91Y2hzdGFydFwiIT09YiYmXCJ0b3VjaG1vdmVcIiE9PWImJlwid2hlZWxcIiE9PWJ8fChlPSEwKTtkP3ZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7Y2FwdHVyZTohMCxwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCEwKTp2b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse3Bhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITEpfVxuZnVuY3Rpb24gamQoYSxiLGMsZCxlKXt2YXIgZj1kO2lmKDA9PT0oYiYxKSYmMD09PShiJjIpJiZudWxsIT09ZClhOmZvcig7Oyl7aWYobnVsbD09PWQpcmV0dXJuO3ZhciBnPWQudGFnO2lmKDM9PT1nfHw0PT09Zyl7dmFyIGg9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZihoPT09ZXx8OD09PWgubm9kZVR5cGUmJmgucGFyZW50Tm9kZT09PWUpYnJlYWs7aWYoND09PWcpZm9yKGc9ZC5yZXR1cm47bnVsbCE9PWc7KXt2YXIgaz1nLnRhZztpZigzPT09a3x8ND09PWspaWYoaz1nLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGs9PT1lfHw4PT09ay5ub2RlVHlwZSYmay5wYXJlbnROb2RlPT09ZSlyZXR1cm47Zz1nLnJldHVybn1mb3IoO251bGwhPT1oOyl7Zz13YyhoKTtpZihudWxsPT09ZylyZXR1cm47az1nLnRhZztpZig1PT09a3x8Nj09PWspe2Q9Zj1nO2NvbnRpbnVlIGF9aD1oLnBhcmVudE5vZGV9fWQ9ZC5yZXR1cm59TmIoZnVuY3Rpb24oKXt2YXIgZD1mLGU9eGIoYyksZz1bXTtcbmE6e3ZhciBoPU1jLmdldChhKTtpZih2b2lkIDAhPT1oKXt2YXIgaz10ZCx4PWE7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZChjKSlicmVhayBhO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6az1SZDticmVhaztjYXNlIFwiZm9jdXNpblwiOng9XCJmb2N1c1wiO2s9RmQ7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6eD1cImJsdXJcIjtrPUZkO2JyZWFrO2Nhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOms9RmQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKWJyZWFrIGE7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjprPUJkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOms9XG5EZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjprPVZkO2JyZWFrO2Nhc2UgSWM6Y2FzZSBKYzpjYXNlIEtjOms9SGQ7YnJlYWs7Y2FzZSBMYzprPVhkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjprPXZkO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOms9WmQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6az1KZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjprPVRkfXZhciB3PTAhPT0oYiY0KSx6PSF3JiZcInNjcm9sbFwiPT09YSx1PXc/bnVsbCE9PWg/aCtcIkNhcHR1cmVcIjpudWxsOmg7dz1bXTtmb3IodmFyIHQ9ZCxxO251bGwhPT1cbnQ7KXtxPXQ7dmFyIHY9cS5zdGF0ZU5vZGU7NT09PXEudGFnJiZudWxsIT09diYmKHE9dixudWxsIT09dSYmKHY9T2IodCx1KSxudWxsIT12JiZ3LnB1c2goZWYodCx2LHEpKSkpO2lmKHopYnJlYWs7dD10LnJldHVybn0wPHcubGVuZ3RoJiYoaD1uZXcgayhoLHgsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6aCxsaXN0ZW5lcnM6d30pKX19aWYoMD09PShiJjcpKXthOntoPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hO2s9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGgmJjA9PT0oYiYxNikmJih4PWMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCkmJih3Yyh4KXx8eFtmZl0pKWJyZWFrIGE7aWYoa3x8aCl7aD1lLndpbmRvdz09PWU/ZTooaD1lLm93bmVyRG9jdW1lbnQpP2guZGVmYXVsdFZpZXd8fGgucGFyZW50V2luZG93OndpbmRvdztpZihrKXtpZih4PWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQsaz1kLHg9eD93Yyh4KTpudWxsLG51bGwhPT1cbngmJih6PVpiKHgpLHghPT16fHw1IT09eC50YWcmJjYhPT14LnRhZykpeD1udWxsfWVsc2Ugaz1udWxsLHg9ZDtpZihrIT09eCl7dz1CZDt2PVwib25Nb3VzZUxlYXZlXCI7dT1cIm9uTW91c2VFbnRlclwiO3Q9XCJtb3VzZVwiO2lmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSl3PVRkLHY9XCJvblBvaW50ZXJMZWF2ZVwiLHU9XCJvblBvaW50ZXJFbnRlclwiLHQ9XCJwb2ludGVyXCI7ej1udWxsPT1rP2g6dWUoayk7cT1udWxsPT14P2g6dWUoeCk7aD1uZXcgdyh2LHQrXCJsZWF2ZVwiLGssYyxlKTtoLnRhcmdldD16O2gucmVsYXRlZFRhcmdldD1xO3Y9bnVsbDt3YyhlKT09PWQmJih3PW5ldyB3KHUsdCtcImVudGVyXCIseCxjLGUpLHcudGFyZ2V0PXEsdy5yZWxhdGVkVGFyZ2V0PXosdj13KTt6PXY7aWYoayYmeCliOnt3PWs7dT14O3Q9MDtmb3IocT13O3E7cT1nZihxKSl0Kys7cT0wO2Zvcih2PXU7djt2PWdmKHYpKXErKztmb3IoOzA8dC1xOyl3PWdmKHcpLHQtLTtmb3IoOzA8cS10Oyl1PVxuZ2YodSkscS0tO2Zvcig7dC0tOyl7aWYodz09PXV8fG51bGwhPT11JiZ3PT09dS5hbHRlcm5hdGUpYnJlYWsgYjt3PWdmKHcpO3U9Z2YodSl9dz1udWxsfWVsc2Ugdz1udWxsO251bGwhPT1rJiZoZihnLGgsayx3LCExKTtudWxsIT09eCYmbnVsbCE9PXomJmhmKGcseix4LHcsITApfX19YTp7aD1kP3VlKGQpOndpbmRvdztrPWgubm9kZU5hbWUmJmgubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09a3x8XCJpbnB1dFwiPT09ayYmXCJmaWxlXCI9PT1oLnR5cGUpdmFyIEo9dmU7ZWxzZSBpZihtZShoKSlpZih3ZSlKPUZlO2Vsc2V7Sj1EZTt2YXIgSz1DZX1lbHNlKGs9aC5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWsudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWgudHlwZXx8XCJyYWRpb1wiPT09aC50eXBlKSYmKEo9RWUpO2lmKEomJihKPUooYSxkKSkpe25lKGcsSixjLGUpO2JyZWFrIGF9SyYmSyhhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKEs9aC5fd3JhcHBlclN0YXRlKSYmXG5LLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1oLnR5cGUmJmJiKGgsXCJudW1iZXJcIixoLnZhbHVlKX1LPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKEspfHxcInRydWVcIj09PUsuY29udGVudEVkaXRhYmxlKVFlPUssUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciBRO2lmKGFlKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBMPVwib25Db21wb3NpdGlvblN0YXJ0XCI7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpMPVwib25Db21wb3NpdGlvbkVuZFwiO2JyZWFrIGI7XG5jYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpMPVwib25Db21wb3NpdGlvblVwZGF0ZVwiO2JyZWFrIGJ9TD12b2lkIDB9ZWxzZSBpZT9nZShhLGMpJiYoTD1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihMPVwib25Db21wb3NpdGlvblN0YXJ0XCIpO0wmJihkZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihpZXx8XCJvbkNvbXBvc2l0aW9uU3RhcnRcIiE9PUw/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1MJiZpZSYmKFE9bmQoKSk6KGtkPWUsbGQ9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsaWU9ITApKSxLPW9lKGQsTCksMDxLLmxlbmd0aCYmKEw9bmV3IExkKEwsYSxudWxsLGMsZSksZy5wdXNoKHtldmVudDpMLGxpc3RlbmVyczpLfSksUT9MLmRhdGE9UTooUT1oZShjKSxudWxsIT09USYmKEwuZGF0YT1RKSkpKTtpZihRPWNlP2plKGEsYyk6a2UoYSxjKSlkPW9lKGQsXCJvbkJlZm9yZUlucHV0XCIpLDA8ZC5sZW5ndGgmJihlPW5ldyBMZChcIm9uQmVmb3JlSW5wdXRcIixcblwiYmVmb3JlaW5wdXRcIixudWxsLGMsZSksZy5wdXNoKHtldmVudDplLGxpc3RlbmVyczpkfSksZS5kYXRhPVEpfXNlKGcsYil9KX1mdW5jdGlvbiBlZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9T2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQoZWYoYSxmLGUpKSxmPU9iKGEsYiksbnVsbCE9ZiYmZC5wdXNoKGVmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gZ2YoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIGhmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9T2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQoZWYoYyxrLGgpKSk6ZXx8KGs9T2IoYyxmKSxudWxsIT1rJiZnLnB1c2goZWYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX1mdW5jdGlvbiBqZigpe312YXIga2Y9bnVsbCxsZj1udWxsO2Z1bmN0aW9uIG1mKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIG5mKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAscGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIHFmKGEpezE9PT1hLm5vZGVUeXBlP2EudGV4dENvbnRlbnQ9XCJcIjo5PT09YS5ub2RlVHlwZSYmKGE9YS5ib2R5LG51bGwhPWEmJihhLnRleHRDb250ZW50PVwiXCIpKX1cbmZ1bmN0aW9uIHJmKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfWZ1bmN0aW9uIHNmKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIkXCI9PT1jfHxcIiQhXCI9PT1jfHxcIiQ/XCI9PT1jKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZVwiLyRcIj09PWMmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciB0Zj0wO2Z1bmN0aW9uIHVmKGEpe3JldHVybnskJHR5cGVvZjpHYSx0b1N0cmluZzphLHZhbHVlT2Y6YX19dmFyIHZmPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLHdmPVwiX19yZWFjdEZpYmVyJFwiK3ZmLHhmPVwiX19yZWFjdFByb3BzJFwiK3ZmLGZmPVwiX19yZWFjdENvbnRhaW5lciRcIit2Zix5Zj1cIl9fcmVhY3RFdmVudHMkXCIrdmY7XG5mdW5jdGlvbiB3YyhhKXt2YXIgYj1hW3dmXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tmZl18fGNbd2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9c2YoYSk7bnVsbCE9PWE7KXtpZihjPWFbd2ZdKXJldHVybiBjO2E9c2YoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVt3Zl18fGFbZmZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IoeSgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVt4Zl18fG51bGx9XG5mdW5jdGlvbiAkZShhKXt2YXIgYj1hW3lmXTt2b2lkIDA9PT1iJiYoYj1hW3lmXT1uZXcgU2V0KTtyZXR1cm4gYn12YXIgemY9W10sQWY9LTE7ZnVuY3Rpb24gQmYoYSl7cmV0dXJue2N1cnJlbnQ6YX19ZnVuY3Rpb24gSChhKXswPkFmfHwoYS5jdXJyZW50PXpmW0FmXSx6ZltBZl09bnVsbCxBZi0tKX1mdW5jdGlvbiBJKGEsYil7QWYrKzt6ZltBZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBDZj17fSxNPUJmKENmKSxOPUJmKCExKSxEZj1DZjtcbmZ1bmN0aW9uIEVmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQ2Y7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gRmYoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBHZigpe0goTik7SChNKX1mdW5jdGlvbiBIZihhLGIsYyl7aWYoTS5jdXJyZW50IT09Q2YpdGhyb3cgRXJyb3IoeSgxNjgpKTtJKE0sYik7SShOLGMpfVxuZnVuY3Rpb24gSWYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih5KDEwOCxSYShiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBtKHt9LGMsZCl9ZnVuY3Rpb24gSmYoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fENmO0RmPU0uY3VycmVudDtJKE0sYSk7SShOLE4uY3VycmVudCk7cmV0dXJuITB9ZnVuY3Rpb24gS2YoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHkoMTY5KSk7Yz8oYT1JZihhLGIsRGYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKE4pLEgoTSksSShNLGEpKTpIKE4pO0koTixjKX1cbnZhciBMZj1udWxsLE1mPW51bGwsTmY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksT2Y9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLFBmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssUWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxSZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxTZj1yLnVuc3RhYmxlX25vdyxUZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLFVmPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksVmY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxXZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFhmPXIudW5zdGFibGVfTG93UHJpb3JpdHksWWY9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksWmY9e30sJGY9dm9pZCAwIT09UmY/UmY6ZnVuY3Rpb24oKXt9LGFnPW51bGwsYmc9bnVsbCxjZz0hMSxkZz1TZigpLE89MUU0PmRnP1NmOmZ1bmN0aW9uKCl7cmV0dXJuIFNmKCktZGd9O1xuZnVuY3Rpb24gZWcoKXtzd2l0Y2goVGYoKSl7Y2FzZSBVZjpyZXR1cm4gOTk7Y2FzZSBWZjpyZXR1cm4gOTg7Y2FzZSBXZjpyZXR1cm4gOTc7Y2FzZSBYZjpyZXR1cm4gOTY7Y2FzZSBZZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIFVmO2Nhc2UgOTg6cmV0dXJuIFZmO2Nhc2UgOTc6cmV0dXJuIFdmO2Nhc2UgOTY6cmV0dXJuIFhmO2Nhc2UgOTU6cmV0dXJuIFlmO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGdnKGEsYil7YT1mZyhhKTtyZXR1cm4gTmYoYSxiKX1mdW5jdGlvbiBoZyhhLGIsYyl7YT1mZyhhKTtyZXR1cm4gT2YoYSxiLGMpfWZ1bmN0aW9uIGlnKCl7aWYobnVsbCE9PWJnKXt2YXIgYT1iZztiZz1udWxsO1BmKGEpfWpnKCl9XG5mdW5jdGlvbiBqZygpe2lmKCFjZyYmbnVsbCE9PWFnKXtjZz0hMDt2YXIgYT0wO3RyeXt2YXIgYj1hZztnZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7YWc9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09YWcmJihhZz1hZy5zbGljZShhKzEpKSxPZihVZixpZyksYzt9ZmluYWxseXtjZz0hMX19fXZhciBrZz1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZztmdW5jdGlvbiBsZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW0oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKTtyZXR1cm4gYn1yZXR1cm4gYn12YXIgbWc9QmYobnVsbCksbmc9bnVsbCxvZz1udWxsLHBnPW51bGw7ZnVuY3Rpb24gcWcoKXtwZz1vZz1uZz1udWxsfVxuZnVuY3Rpb24gcmcoYSl7dmFyIGI9bWcuY3VycmVudDtIKG1nKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHNnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKChhLmNoaWxkTGFuZXMmYik9PT1iKWlmKG51bGw9PT1jfHwoYy5jaGlsZExhbmVzJmIpPT09YilicmVhaztlbHNlIGMuY2hpbGRMYW5lc3w9YjtlbHNlIGEuY2hpbGRMYW5lc3w9YixudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9Yik7YT1hLnJldHVybn19ZnVuY3Rpb24gdGcoYSxiKXtuZz1hO3BnPW9nPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYodWc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gdmcoYSxiKXtpZihwZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpcGc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PW9nKXtpZihudWxsPT09bmcpdGhyb3cgRXJyb3IoeSgzMDgpKTtvZz1iO25nLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2Ugb2c9b2cubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHdnPSExO2Z1bmN0aW9uIHhnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHlnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTphLmZpcnN0QmFzZVVwZGF0ZSxsYXN0QmFzZVVwZGF0ZTphLmxhc3RCYXNlVXBkYXRlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHpnKGEsYil7cmV0dXJue2V2ZW50VGltZTphLGxhbmU6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9fWZ1bmN0aW9uIEFnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24gQmcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlLGQ9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQmJihkPWQudXBkYXRlUXVldWUsYz09PWQpKXt2YXIgZT1udWxsLGY9bnVsbDtjPWMuZmlyc3RCYXNlVXBkYXRlO2lmKG51bGwhPT1jKXtkb3t2YXIgZz17ZXZlbnRUaW1lOmMuZXZlbnRUaW1lLGxhbmU6Yy5sYW5lLHRhZzpjLnRhZyxwYXlsb2FkOmMucGF5bG9hZCxjYWxsYmFjazpjLmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PWY/ZT1mPWc6Zj1mLm5leHQ9ZztjPWMubmV4dH13aGlsZShudWxsIT09Yyk7bnVsbD09PWY/ZT1mPWI6Zj1mLm5leHQ9Yn1lbHNlIGU9Zj1iO2M9e2Jhc2VTdGF0ZTpkLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6ZSxsYXN0QmFzZVVwZGF0ZTpmLHNoYXJlZDpkLnNoYXJlZCxlZmZlY3RzOmQuZWZmZWN0c307YS51cGRhdGVRdWV1ZT1jO3JldHVybn1hPWMubGFzdEJhc2VVcGRhdGU7bnVsbD09PWE/Yy5maXJzdEJhc2VVcGRhdGU9YjphLm5leHQ9XG5iO2MubGFzdEJhc2VVcGRhdGU9Yn1cbmZ1bmN0aW9uIENnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7d2c9ITE7dmFyIGY9ZS5maXJzdEJhc2VVcGRhdGUsZz1lLmxhc3RCYXNlVXBkYXRlLGg9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09aCl7ZS5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBrPWgsbD1rLm5leHQ7ay5uZXh0PW51bGw7bnVsbD09PWc/Zj1sOmcubmV4dD1sO2c9azt2YXIgbj1hLmFsdGVybmF0ZTtpZihudWxsIT09bil7bj1uLnVwZGF0ZVF1ZXVlO3ZhciBBPW4ubGFzdEJhc2VVcGRhdGU7QSE9PWcmJihudWxsPT09QT9uLmZpcnN0QmFzZVVwZGF0ZT1sOkEubmV4dD1sLG4ubGFzdEJhc2VVcGRhdGU9ayl9fWlmKG51bGwhPT1mKXtBPWUuYmFzZVN0YXRlO2c9MDtuPWw9az1udWxsO2Rve2g9Zi5sYW5lO3ZhciBwPWYuZXZlbnRUaW1lO2lmKChkJmgpPT09aCl7bnVsbCE9PW4mJihuPW4ubmV4dD17ZXZlbnRUaW1lOnAsbGFuZTowLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLFxubmV4dDpudWxsfSk7YTp7dmFyIEM9YSx4PWY7aD1iO3A9Yztzd2l0Y2goeC50YWcpe2Nhc2UgMTpDPXgucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyl7QT1DLmNhbGwocCxBLGgpO2JyZWFrIGF9QT1DO2JyZWFrIGE7Y2FzZSAzOkMuZmxhZ3M9Qy5mbGFncyYtNDA5N3w2NDtjYXNlIDA6Qz14LnBheWxvYWQ7aD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQz9DLmNhbGwocCxBLGgpOkM7aWYobnVsbD09PWh8fHZvaWQgMD09PWgpYnJlYWsgYTtBPW0oe30sQSxoKTticmVhayBhO2Nhc2UgMjp3Zz0hMH19bnVsbCE9PWYuY2FsbGJhY2smJihhLmZsYWdzfD0zMixoPWUuZWZmZWN0cyxudWxsPT09aD9lLmVmZmVjdHM9W2ZdOmgucHVzaChmKSl9ZWxzZSBwPXtldmVudFRpbWU6cCxsYW5lOmgsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssbmV4dDpudWxsfSxudWxsPT09bj8obD1uPXAsaz1BKTpuPW4ubmV4dD1wLGd8PWg7Zj1mLm5leHQ7aWYobnVsbD09PVxuZilpZihoPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWgpYnJlYWs7ZWxzZSBmPWgubmV4dCxoLm5leHQ9bnVsbCxlLmxhc3RCYXNlVXBkYXRlPWgsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpO251bGw9PT1uJiYoaz1BKTtlLmJhc2VTdGF0ZT1rO2UuZmlyc3RCYXNlVXBkYXRlPWw7ZS5sYXN0QmFzZVVwZGF0ZT1uO0RnfD1nO2EubGFuZXM9ZzthLm1lbW9pemVkU3RhdGU9QX19ZnVuY3Rpb24gRWcoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlKXRocm93IEVycm9yKHkoMTkxLGUpKTtlLmNhbGwoZCl9fX12YXIgRmc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBHZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bSh7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmxhbmVzJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgS2c9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFscyk/WmIoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsczt2YXIgYz1IZygpLGQ9SWcoYSksZT16ZyhjLGQpO2UudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihlLmNhbGxiYWNrPVxuYik7QWcoYSxlKTtKZyhhLGQsYyl9fTtmdW5jdGlvbiBMZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFKZShjLGQpfHwhSmUoZSxmKTohMH1cbmZ1bmN0aW9uIE1nKGEsYixjKXt2YXIgZD0hMSxlPUNmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXZnKGYpOihlPUZmKGIpP0RmOk0uY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0VmKGEsZSk6Q2YpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1LZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxzPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE9nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9Rmc7eGcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD12ZyhmKTooZj1GZihiKT9EZjpNLmN1cnJlbnQsZS5jb250ZXh0PUVmKGEsZikpO0NnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihHZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxDZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmZsYWdzfD00KX12YXIgUGc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFFnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih5KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1GZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih5KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih5KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUmcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IoeSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIpKTt9XG5mdW5jdGlvbiBTZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmZsYWdzPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVRnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmZsYWdzPTIsXG5jKTpkO2IuZmxhZ3M9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3M9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVVnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVFnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1WZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1RZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1cbldnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBuKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1YZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIEEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVVnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjPVZnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVFnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSB0YTpyZXR1cm4gYj1XZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoUGcoYil8fExhKGIpKXJldHVybiBiPVhnKGIsXG5hLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UmcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBwKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09dWE/bihhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIHRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKFBnKGMpfHxMYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDpuKGEsYixjLGQsbnVsbCk7UmcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fFxubnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PXVhP24oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIHRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFBnKGQpfHxMYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxuKGIsYSxkLGUsbnVsbCk7UmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCx1PWcsej1nPTAscT1udWxsO251bGwhPT11JiZ6PGgubGVuZ3RoO3orKyl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgbj1wKGUsdSxoW3pdLGspO2lmKG51bGw9PT1uKXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PVxubi5hbHRlcm5hdGUmJmIoZSx1KTtnPWYobixnLHopO251bGw9PT10P2w9bjp0LnNpYmxpbmc9bjt0PW47dT1xfWlmKHo9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7ejxoLmxlbmd0aDt6KyspdT1BKGUsaFt6XSxrKSxudWxsIT09dSYmKGc9Zih1LGcseiksbnVsbD09PXQ/bD11OnQuc2libGluZz11LHQ9dSk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3o8aC5sZW5ndGg7eisrKXE9Qyh1LGUseixoW3pdLGspLG51bGwhPT1xJiYoYSYmbnVsbCE9PXEuYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09cS5rZXk/ejpxLmtleSksZz1mKHEsZyx6KSxudWxsPT09dD9sPXE6dC5zaWJsaW5nPXEsdD1xKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIHcoZSxnLGgsayl7dmFyIGw9TGEoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGwpdGhyb3cgRXJyb3IoeSgxNTApKTtoPWwuY2FsbChoKTtpZihudWxsPT1cbmgpdGhyb3cgRXJyb3IoeSgxNTEpKTtmb3IodmFyIHQ9bD1udWxsLHU9Zyx6PWc9MCxxPW51bGwsbj1oLm5leHQoKTtudWxsIT09dSYmIW4uZG9uZTt6Kyssbj1oLm5leHQoKSl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgdz1wKGUsdSxuLnZhbHVlLGspO2lmKG51bGw9PT13KXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKHcsZyx6KTtudWxsPT09dD9sPXc6dC5zaWJsaW5nPXc7dD13O3U9cX1pZihuLmRvbmUpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1BKGUsbi52YWx1ZSxrKSxudWxsIT09biYmKGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1DKHUsZSx6LG4udmFsdWUsayksbnVsbCE9PW4mJihhJiZudWxsIT09bi5hbHRlcm5hdGUmJlxudS5kZWxldGUobnVsbD09PW4ua2V5P3o6bi5rZXkpLGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09dWEmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2Ugc2E6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT11YSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO1xuZD1lKGssZi5wcm9wcyk7ZC5yZWY9UWcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT11YT8oZD1YZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VmcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UWcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIHRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPVxuV2coZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VWcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoUGcoZikpcmV0dXJuIHgoYSxkLGYsaCk7aWYoTGEoZikpcmV0dXJuIHcoYSxkLGYsaCk7bCYmUmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMjI6Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp0aHJvdyBFcnJvcih5KDE1MixSYShhLnR5cGUpfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBZZz1TZyghMCksWmc9U2coITEpLCRnPXt9LGFoPUJmKCRnKSxiaD1CZigkZyksY2g9QmYoJGcpO1xuZnVuY3Rpb24gZGgoYSl7aWYoYT09PSRnKXRocm93IEVycm9yKHkoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZWgoYSxiKXtJKGNoLGIpO0koYmgsYSk7SShhaCwkZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTptYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bWIoYixhKX1IKGFoKTtJKGFoLGIpfWZ1bmN0aW9uIGZoKCl7SChhaCk7SChiaCk7SChjaCl9ZnVuY3Rpb24gZ2goYSl7ZGgoY2guY3VycmVudCk7dmFyIGI9ZGgoYWguY3VycmVudCk7dmFyIGM9bWIoYixhLnR5cGUpO2IhPT1jJiYoSShiaCxhKSxJKGFoLGMpKX1mdW5jdGlvbiBoaChhKXtiaC5jdXJyZW50PT09YSYmKEgoYWgpLEgoYmgpKX12YXIgUD1CZigwKTtcbmZ1bmN0aW9uIGloKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fFwiJD9cIj09PWMuZGF0YXx8XCIkIVwiPT09Yy5kYXRhKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIGpoPW51bGwsa2g9bnVsbCxsaD0hMTtcbmZ1bmN0aW9uIG1oKGEsYil7dmFyIGM9bmgoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZmxhZ3M9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIG9oKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBwaChhKXtpZihsaCl7dmFyIGI9a2g7aWYoYil7dmFyIGM9YjtpZighb2goYSxiKSl7Yj1yZihjLm5leHRTaWJsaW5nKTtpZighYnx8IW9oKGEsYikpe2EuZmxhZ3M9YS5mbGFncyYtMTAyNXwyO2xoPSExO2poPWE7cmV0dXJufW1oKGpoLGMpfWpoPWE7a2g9cmYoYi5maXJzdENoaWxkKX1lbHNlIGEuZmxhZ3M9YS5mbGFncyYtMTAyNXwyLGxoPSExLGpoPWF9fWZ1bmN0aW9uIHFoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtqaD1hfVxuZnVuY3Rpb24gcmgoYSl7aWYoYSE9PWpoKXJldHVybiExO2lmKCFsaClyZXR1cm4gcWgoYSksbGg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFuZihiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9a2g7YjspbWgoYSxiKSxiPXJmKGIubmV4dFNpYmxpbmcpO3FoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IoeSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIi8kXCI9PT1jKXtpZigwPT09Yil7a2g9cmYoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZVwiJFwiIT09YyYmXCIkIVwiIT09YyYmXCIkP1wiIT09Y3x8YisrfWE9YS5uZXh0U2libGluZ31raD1udWxsfX1lbHNlIGtoPWpoP3JmKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gc2goKXtraD1qaD1udWxsO2xoPSExfXZhciB0aD1bXTtmdW5jdGlvbiB1aCgpe2Zvcih2YXIgYT0wO2E8dGgubGVuZ3RoO2ErKyl0aFthXS5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1udWxsO3RoLmxlbmd0aD0wfXZhciB2aD1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHdoPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLHhoPTAsUj1udWxsLFM9bnVsbCxUPW51bGwseWg9ITEsemg9ITE7ZnVuY3Rpb24gQWgoKXt0aHJvdyBFcnJvcih5KDMyMSkpO31mdW5jdGlvbiBCaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFIZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gQ2goYSxiLGMsZCxlLGYpe3hoPWY7Uj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmxhbmVzPTA7dmguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9EaDpFaDthPWMoZCxlKTtpZih6aCl7Zj0wO2Rve3poPSExO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IoeSgzMDEpKTtmKz0xO1Q9Uz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDt2aC5jdXJyZW50PUZoO2E9YyhkLGUpfXdoaWxlKHpoKX12aC5jdXJyZW50PUdoO2I9bnVsbCE9PVMmJm51bGwhPT1TLm5leHQ7eGg9MDtUPVM9Uj1udWxsO3loPSExO2lmKGIpdGhyb3cgRXJyb3IoeSgzMDApKTtyZXR1cm4gYX1mdW5jdGlvbiBIaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YTtyZXR1cm4gVH1cbmZ1bmN0aW9uIEloKCl7aWYobnVsbD09PVMpe3ZhciBhPVIuYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPVMubmV4dDt2YXIgYj1udWxsPT09VD9SLm1lbW9pemVkU3RhdGU6VC5uZXh0O2lmKG51bGwhPT1iKVQ9YixTPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih5KDMxMCkpO1M9YTthPXttZW1vaXplZFN0YXRlOlMubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Uy5iYXNlU3RhdGUsYmFzZVF1ZXVlOlMuYmFzZVF1ZXVlLHF1ZXVlOlMucXVldWUsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWF9cmV0dXJuIFR9ZnVuY3Rpb24gSmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBLaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPVMsZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5sYW5lO2lmKCh4aCZsKT09PWwpbnVsbCE9PWgmJihoPWgubmV4dD17bGFuZTowLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7ZWxzZXt2YXIgbj17bGFuZTpsLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsXG5lYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bixmPWQpOmg9aC5uZXh0PW47Ui5sYW5lc3w9bDtEZ3w9bH1rPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZztIZShkLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gTGgoYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpO0hlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiBNaChhLGIsYyl7dmFyIGQ9Yi5fZ2V0VmVyc2lvbjtkPWQoYi5fc291cmNlKTt2YXIgZT1iLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5O2lmKG51bGwhPT1lKWE9ZT09PWQ7ZWxzZSBpZihhPWEubXV0YWJsZVJlYWRMYW5lcyxhPSh4aCZhKT09PWEpYi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1kLHRoLnB1c2goYik7aWYoYSlyZXR1cm4gYyhiLl9zb3VyY2UpO3RoLnB1c2goYik7dGhyb3cgRXJyb3IoeSgzNTApKTt9XG5mdW5jdGlvbiBOaChhLGIsYyxkKXt2YXIgZT1VO2lmKG51bGw9PT1lKXRocm93IEVycm9yKHkoMzQ5KSk7dmFyIGY9Yi5fZ2V0VmVyc2lvbixnPWYoYi5fc291cmNlKSxoPXZoLmN1cnJlbnQsaz1oLnVzZVN0YXRlKGZ1bmN0aW9uKCl7cmV0dXJuIE1oKGUsYixjKX0pLGw9a1sxXSxuPWtbMF07az1UO3ZhciBBPWEubWVtb2l6ZWRTdGF0ZSxwPUEucmVmcyxDPXAuZ2V0U25hcHNob3QseD1BLnNvdXJjZTtBPUEuc3Vic2NyaWJlO3ZhciB3PVI7YS5tZW1vaXplZFN0YXRlPXtyZWZzOnAsc291cmNlOmIsc3Vic2NyaWJlOmR9O2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cC5nZXRTbmFwc2hvdD1jO3Auc2V0U25hcHNob3Q9bDt2YXIgYT1mKGIuX3NvdXJjZSk7aWYoIUhlKGcsYSkpe2E9YyhiLl9zb3VyY2UpO0hlKG4sYSl8fChsKGEpLGE9SWcodyksZS5tdXRhYmxlUmVhZExhbmVzfD1hJmUucGVuZGluZ0xhbmVzKTthPWUubXV0YWJsZVJlYWRMYW5lcztlLmVudGFuZ2xlZExhbmVzfD1hO2Zvcih2YXIgZD1cbmUuZW50YW5nbGVtZW50cyxoPWE7MDxoOyl7dmFyIGs9MzEtVmMoaCksdj0xPDxrO2Rba118PWE7aCY9fnZ9fX0sW2MsYixkXSk7aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtyZXR1cm4gZChiLl9zb3VyY2UsZnVuY3Rpb24oKXt2YXIgYT1wLmdldFNuYXBzaG90LGM9cC5zZXRTbmFwc2hvdDt0cnl7YyhhKGIuX3NvdXJjZSkpO3ZhciBkPUlnKHcpO2UubXV0YWJsZVJlYWRMYW5lc3w9ZCZlLnBlbmRpbmdMYW5lc31jYXRjaChxKXtjKGZ1bmN0aW9uKCl7dGhyb3cgcTt9KX19KX0sW2IsZF0pO0hlKEMsYykmJkhlKHgsYikmJkhlKEEsZCl8fChhPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOm59LGEuZGlzcGF0Y2g9bD1PaC5iaW5kKG51bGwsUixhKSxrLnF1ZXVlPWEsay5iYXNlUXVldWU9bnVsbCxuPU1oKGUsYixjKSxrLm1lbW9pemVkU3RhdGU9ay5iYXNlU3RhdGU9bik7cmV0dXJuIG59XG5mdW5jdGlvbiBQaChhLGIsYyl7dmFyIGQ9SWgoKTtyZXR1cm4gTmgoZCxhLGIsYyl9ZnVuY3Rpb24gUWgoYSl7dmFyIGI9SGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19XG5mdW5jdGlvbiBSaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1SLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LFIudXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gU2goYSl7dmFyIGI9SGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX1mdW5jdGlvbiBUaCgpe3JldHVybiBJaCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gVWgoYSxiLGMsZCl7dmFyIGU9SGgoKTtSLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxuZnVuY3Rpb24gVmgoYSxiLGMsZCl7dmFyIGU9SWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Uyl7dmFyIGc9Uy5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZCaChkLGcuZGVwcykpe1JoKGIsYyxmLGQpO3JldHVybn19Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsZixkKX1mdW5jdGlvbiBXaChhLGIpe3JldHVybiBVaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFhoKGEsYil7cmV0dXJuIFZoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWWgoYSxiKXtyZXR1cm4gVmgoNCwyLGEsYil9ZnVuY3Rpb24gWmgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1cbmZ1bmN0aW9uICRoKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVmgoNCwyLFpoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIGFpKCl7fWZ1bmN0aW9uIGJpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIGNpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gZGkoYSxiKXt2YXIgYz1lZygpO2dnKDk4PmM/OTg6YyxmdW5jdGlvbigpe2EoITApfSk7Z2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGM9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2EoITEpLGIoKX1maW5hbGx5e3doLnRyYW5zaXRpb249Y319KX1cbmZ1bmN0aW9uIE9oKGEsYixjKXt2YXIgZD1IZygpLGU9SWcoYSksZj17bGFuZTplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGc9Yi5wZW5kaW5nO251bGw9PT1nP2YubmV4dD1mOihmLm5leHQ9Zy5uZXh0LGcubmV4dD1mKTtiLnBlbmRpbmc9ZjtnPWEuYWx0ZXJuYXRlO2lmKGE9PT1SfHxudWxsIT09ZyYmZz09PVIpemg9eWg9ITA7ZWxzZXtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1nfHwwPT09Zy5sYW5lcykmJihnPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZykpdHJ5e3ZhciBoPWIubGFzdFJlbmRlcmVkU3RhdGUsaz1nKGgsYyk7Zi5lYWdlclJlZHVjZXI9ZztmLmVhZ2VyU3RhdGU9aztpZihIZShrLGgpKXJldHVybn1jYXRjaChsKXt9ZmluYWxseXt9SmcoYSxlLGQpfX1cbnZhciBHaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6QWgsdXNlQ29udGV4dDpBaCx1c2VFZmZlY3Q6QWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpBaCx1c2VMYXlvdXRFZmZlY3Q6QWgsdXNlTWVtbzpBaCx1c2VSZWR1Y2VyOkFoLHVzZVJlZjpBaCx1c2VTdGF0ZTpBaCx1c2VEZWJ1Z1ZhbHVlOkFoLHVzZURlZmVycmVkVmFsdWU6QWgsdXNlVHJhbnNpdGlvbjpBaCx1c2VNdXRhYmxlU291cmNlOkFoLHVzZU9wYXF1ZUlkZW50aWZpZXI6QWgsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxEaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtIaCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpXaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVWgoNCwyLFpoLmJpbmQobnVsbCxcbmIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBVaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPUhoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOlNoLHVzZVN0YXRlOlFoLHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1RaChhKSxjPWJbMF0sZD1iWzFdO1doKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjtcbndoLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1RaCghMSksYj1hWzBdO2E9ZGkuYmluZChudWxsLGFbMV0pO1NoKGEpO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2QubWVtb2l6ZWRTdGF0ZT17cmVmczp7Z2V0U25hcHNob3Q6YixzZXRTbmFwc2hvdDpudWxsfSxzb3VyY2U6YSxzdWJzY3JpYmU6Y307cmV0dXJuIE5oKGQsYSxiLGMpfSx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7aWYobGgpe3ZhciBhPSExLGI9dWYoZnVuY3Rpb24oKXthfHwoYT0hMCxjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKSk7dGhyb3cgRXJyb3IoeSgzNTUpKTt9KSxjPVFoKGIpWzFdOzA9PT0oUi5tb2RlJjIpJiYoUi5mbGFnc3w9NTE2LFJoKDUsZnVuY3Rpb24oKXtjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKX0sXG52b2lkIDAsbnVsbCkpO3JldHVybiBifWI9XCJyOlwiKyh0ZisrKS50b1N0cmluZygzNik7UWgoYik7cmV0dXJuIGJ9LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRWg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpLaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9S2goSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1LaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEZoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6TGgsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUxoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9TGgoSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxlaT1yYS5SZWFjdEN1cnJlbnRPd25lcix1Zz0hMTtmdW5jdGlvbiBmaShhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1pnKGIsbnVsbCxjLGQpOllnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIGdpKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjt0ZyhiLGUpO2Q9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFqaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxraShhLGIsZyxkLGUsZik7YT1WZyhjLnR5cGUsbnVsbCxkLGIsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoMD09PShlJmYpJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOkplLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIGhpKGEsYixmKTtiLmZsYWdzfD0xO2E9VGcoZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBraShhLGIsYyxkLGUsZil7aWYobnVsbCE9PWEmJkplKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZilpZih1Zz0hMSwwIT09KGYmZSkpMCE9PShhLmZsYWdzJjE2Mzg0KSYmKHVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsaGkoYSxiLGYpO3JldHVybiBsaShhLGIsYyxkLGYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGV8fFwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIj09PWQubW9kZSlpZigwPT09KGIubW9kZSY0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLGMpO2Vsc2UgaWYoMCE9PShjJjEwNzM3NDE4MjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsbnVsbCE9PWY/Zi5iYXNlTGFuZXM6Yyk7ZWxzZSByZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphfSxuaShiLGEpLG51bGw7ZWxzZSBudWxsIT09Zj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpkPWMsbmkoYixkKTtmaShhLGIsZSxjKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIG9pKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZmxhZ3N8PTEyOH1mdW5jdGlvbiBsaShhLGIsYyxkLGUpe3ZhciBmPUZmKGMpP0RmOk0uY3VycmVudDtmPUVmKGIsZik7dGcoYixlKTtjPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHBpKGEsYixjLGQsZSl7aWYoRmYoYykpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTt0ZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxNZyhiLGMsZCksT2coYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9dmcobCk6KGw9RmYoYyk/RGY6TS5jdXJyZW50LGw9RWYoYixsKSk7dmFyIG49Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygbnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7QXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk5nKGIsZyxkLGwpO3dnPSExO3ZhciBwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHAhPT1rfHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbiYmKEdnKGIsYyxuLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD13Z3x8TGcoYixjLGgsZCxwLGssbCkpPyhBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7eWcoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpsZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO0E9Yi5wZW5kaW5nUHJvcHM7cD1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az12ZyhrKTooaz1GZihjKT9EZjpNLmN1cnJlbnQsaz1FZihiLGspKTt2YXIgQz1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQ3x8XG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PUF8fHAhPT1rKSYmTmcoYixnLGQsayk7d2c9ITE7cD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtoIT09QXx8cCE9PXh8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDJiYoR2coYixjLEMsZCkseD1iLm1lbW9pemVkU3RhdGUpLChsPXdnfHxMZyhiLGMsbCxkLHAseCxrKSk/KG58fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxrKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmZsYWdzfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1rLGQ9bCk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8XG5oPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGQ9ITEpfXJldHVybiBxaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBxaShhLGIsYyxkLGUsZil7b2koYSxiKTt2YXIgZz0wIT09KGIuZmxhZ3MmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmS2YoYixjLCExKSxoaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtlaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVlnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WWcoYixudWxsLGgsZikpOmZpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJktmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gcmkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9IZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZIZihhLGIuY29udGV4dCwhMSk7ZWgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIHNpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlMYW5lOjB9O1xuZnVuY3Rpb24gdGkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9UC5jdXJyZW50LGY9ITEsZzsoZz0wIT09KGIuZmxhZ3MmNjQpKXx8KGc9bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGU/ITE6MCE9PShlJjIpKTtnPyhmPSEwLGIuZmxhZ3MmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWQuZmFsbGJhY2t8fCEwPT09ZC51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGV8PTEpO0koUCxlJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1kLmZhbGxiYWNrJiZwaChiKTthPWQuY2hpbGRyZW47ZT1kLmZhbGxiYWNrO2lmKGYpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sYi5tZW1vaXplZFN0YXRlPXNpLGE7aWYoXCJudW1iZXJcIj09PXR5cGVvZiBkLnVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sXG5iLm1lbW9pemVkU3RhdGU9c2ksYi5sYW5lcz0zMzU1NDQzMixhO2M9dmkoe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46YX0sYi5tb2RlLGMsbnVsbCk7Yy5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1jfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2lmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306e2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTpcbntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWZ1bmN0aW9uIHVpKGEsYixjLGQpe3ZhciBlPWEubW9kZSxmPWEuY2hpbGQ7Yj17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmJ9OzA9PT0oZSYyKSYmbnVsbCE9PWY/KGYuY2hpbGRMYW5lcz0wLGYucGVuZGluZ1Byb3BzPWIpOmY9dmkoYixlLDAsbnVsbCk7Yz1YZyhjLGUsZCxudWxsKTtmLnJldHVybj1hO2MucmV0dXJuPWE7Zi5zaWJsaW5nPWM7YS5jaGlsZD1mO3JldHVybiBjfVxuZnVuY3Rpb24geGkoYSxiLGMsZCl7dmFyIGU9YS5jaGlsZDthPWUuc2libGluZztjPVRnKGUse21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Y30pOzA9PT0oYi5tb2RlJjIpJiYoYy5sYW5lcz1kKTtjLnJldHVybj1iO2Muc2libGluZz1udWxsO251bGwhPT1hJiYoYS5uZXh0RWZmZWN0PW51bGwsYS5mbGFncz04LGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWEpO3JldHVybiBiLmNoaWxkPWN9XG5mdW5jdGlvbiB3aShhLGIsYyxkLGUpe3ZhciBmPWIubW9kZSxnPWEuY2hpbGQ7YT1nLnNpYmxpbmc7dmFyIGg9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpjfTswPT09KGYmMikmJmIuY2hpbGQhPT1nPyhjPWIuY2hpbGQsYy5jaGlsZExhbmVzPTAsYy5wZW5kaW5nUHJvcHM9aCxnPWMubGFzdEVmZmVjdCxudWxsIT09Zz8oYi5maXJzdEVmZmVjdD1jLmZpcnN0RWZmZWN0LGIubGFzdEVmZmVjdD1nLGcubmV4dEVmZmVjdD1udWxsKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsKTpjPVRnKGcsaCk7bnVsbCE9PWE/ZD1UZyhhLGQpOihkPVhnKGQsZixlLG51bGwpLGQuZmxhZ3N8PTIpO2QucmV0dXJuPWI7Yy5yZXR1cm49YjtjLnNpYmxpbmc9ZDtiLmNoaWxkPWM7cmV0dXJuIGR9ZnVuY3Rpb24geWkoYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7c2coYS5yZXR1cm4sYil9XG5mdW5jdGlvbiB6aShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gQWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtmaShhLGIsZC5jaGlsZHJlbixjKTtkPVAuY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmZsYWdzfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmeWkoYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpeWkoYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShQLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1paChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO3ppKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWloKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX16aShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6emkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGhpKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTtEZ3w9Yi5sYW5lcztpZigwIT09KGMmYi5jaGlsZExhbmVzKSl7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHkoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVRnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1UZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXJldHVybiBudWxsfXZhciBCaSxDaSxEaSxFaTtcbkJpPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtDaT1mdW5jdGlvbigpe307XG5EaT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLm1lbW9pemVkUHJvcHM7aWYoZSE9PWQpe2E9Yi5zdGF0ZU5vZGU7ZGgoYWguY3VycmVudCk7dmFyIGY9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6ZT1ZYShhLGUpO2Q9WWEoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZSk7ZD1lYihhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9bSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX12YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PVxubCl7dmFyIGg9ZVtsXTtmb3IoZyBpbiBoKWguaGFzT3duUHJvcGVydHkoZykmJihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHxcbihjPXt9KSxjW2ddPWtbZ10pfWVsc2UgY3x8KGZ8fChmPVtdKSxmLnB1c2gobCxjKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRyhcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOlwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWsmJmsuJCR0eXBlb2Y9PT1HYT9rLnRvU3RyaW5nKCk6KGY9Znx8W10pLnB1c2gobCxrKSl9YyYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLFxuYyk7dmFyIGw9ZjtpZihiLnVwZGF0ZVF1ZXVlPWwpYi5mbGFnc3w9NH19O0VpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5mbGFnc3w9NCl9O2Z1bmN0aW9uIEZpKGEsYil7aWYoIWxoKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBHaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtkPWIuc3RhdGVOb2RlO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClyaChiKT9iLmZsYWdzfD00OmQuaHlkcmF0ZXx8KGIuZmxhZ3N8PTI1Nik7Q2koYik7cmV0dXJuIG51bGw7Y2FzZSA1OmhoKGIpO3ZhciBlPWRoKGNoLmN1cnJlbnQpO2M9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlEaShhLGIsYyxkLGUpLGEucmVmIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1cbmIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7cmV0dXJuIG51bGx9YT1kaChhaC5jdXJyZW50KTtpZihyaChiKSl7ZD1iLnN0YXRlTm9kZTtjPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFt3Zl09YjtkW3hmXT1mO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGQpO0coXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8WGUubGVuZ3RoO2ErKylHKFhlW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixkKTtHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGQsZik7RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEcoXCJpbnZhbGlkXCIsZCl9dmIoYyxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpZi5oYXNPd25Qcm9wZXJ0eShnKSYmKGU9ZltnXSxcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgZT9kLnRleHRDb250ZW50IT09ZSYmKGE9W1wiY2hpbGRyZW5cIixlXSk6XCJudW1iZXJcIj09PXR5cGVvZiBlJiZkLnRleHRDb250ZW50IT09XCJcIitlJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIrZV0pOmNhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1lJiZcIm9uU2Nyb2xsXCI9PT1nJiZHKFwic2Nyb2xsXCIsZCkpO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtjYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPVxuamYpfWQ9YTtiLnVwZGF0ZVF1ZXVlPWQ7bnVsbCE9PWQmJihiLmZsYWdzfD00KX1lbHNle2c9OT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQ7YT09PWtiLmh0bWwmJihhPWxiKGMpKTthPT09a2IuaHRtbD9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGMse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoYyksXCJzZWxlY3RcIj09PWMmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGMpO2Fbd2ZdPWI7YVt4Zl09ZDtCaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz13YihjLGQpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGEpO0coXCJjbG9zZVwiLGEpO1xuZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPFhlLmxlbmd0aDtlKyspRyhYZVtlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixhKTtHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoYSxkKTtlPVlhKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07ZT1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoYSxkKTtlPVxuZ2IoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXZiKGMsZSk7dmFyIGg9ZTtmb3IoZiBpbiBoKWlmKGguaGFzT3duUHJvcGVydHkoZikpe3ZhciBrPWhbZl07XCJzdHlsZVwiPT09Zj90YihhLGspOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmb2IoYSxrKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWN8fFwiXCIhPT1rKSYmcGIoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJnBiKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYoY2EuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9ayYmXCJvblNjcm9sbFwiPT09ZiYmRyhcInNjcm9sbFwiLGEpOm51bGwhPWsmJnFhKGEsZixrLGcpKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoYSk7Y2IoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGEpO2piKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitTYShkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2Y9ZC52YWx1ZTtudWxsIT1mP2ZiKGEsISFkLm11bHRpcGxlLGYsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZmYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX1tZihjLGQpJiYoYi5mbGFnc3w9NCl9bnVsbCE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7XG5jPWRoKGNoLmN1cnJlbnQpO2RoKGFoLmN1cnJlbnQpO3JoKGIpPyhkPWIuc3RhdGVOb2RlLGM9Yi5tZW1vaXplZFByb3BzLGRbd2ZdPWIsZC5ub2RlVmFsdWUhPT1jJiYoYi5mbGFnc3w9NCkpOihkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFt3Zl09YixiLnN0YXRlTm9kZT1kKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYi5sYW5lcz1jLGI7ZD1udWxsIT09ZDtjPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmcmgoYik6Yz1udWxsIT09YS5tZW1vaXplZFN0YXRlO2lmKGQmJiFjJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oUC5jdXJyZW50JjEpKTA9PT1WJiYoVj0zKTtlbHNle2lmKDA9PT1WfHwzPT09VilWPVxuNDtudWxsPT09VXx8MD09PShEZyYxMzQyMTc3MjcpJiYwPT09KEhpJjEzNDIxNzcyNyl8fElpKFUsVyl9aWYoZHx8YyliLmZsYWdzfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxDaShiKSxudWxsPT09YSYmY2YoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksbnVsbDtjYXNlIDEwOnJldHVybiByZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDE5OkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Zj0wIT09KGIuZmxhZ3MmNjQpO2c9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZilGaShkLCExKTtlbHNle2lmKDAhPT1WfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7Zz1paChhKTtpZihudWxsIT09Zyl7Yi5mbGFnc3w9NjQ7RmkoZCwhMSk7Zj1nLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoYi51cGRhdGVRdWV1ZT1mLGIuZmxhZ3N8PTQpO1xubnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0yLGYubmV4dEVmZmVjdD1udWxsLGYuZmlyc3RFZmZlY3Q9bnVsbCxmLmxhc3RFZmZlY3Q9bnVsbCxnPWYuYWx0ZXJuYXRlLG51bGw9PT1nPyhmLmNoaWxkTGFuZXM9MCxmLmxhbmVzPWEsZi5jaGlsZD1udWxsLGYubWVtb2l6ZWRQcm9wcz1udWxsLGYubWVtb2l6ZWRTdGF0ZT1udWxsLGYudXBkYXRlUXVldWU9bnVsbCxmLmRlcGVuZGVuY2llcz1udWxsLGYuc3RhdGVOb2RlPW51bGwpOihmLmNoaWxkTGFuZXM9Zy5jaGlsZExhbmVzLGYubGFuZXM9Zy5sYW5lcyxmLmNoaWxkPWcuY2hpbGQsZi5tZW1vaXplZFByb3BzPWcubWVtb2l6ZWRQcm9wcyxmLm1lbW9pemVkU3RhdGU9Zy5tZW1vaXplZFN0YXRlLGYudXBkYXRlUXVldWU9Zy51cGRhdGVRdWV1ZSxmLnR5cGU9Zy50eXBlLGE9Zy5kZXBlbmRlbmNpZXMsXG5mLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0koUCxQLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPWEuc2libGluZ31udWxsIT09ZC50YWlsJiZPKCk+SmkmJihiLmZsYWdzfD02NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpfWVsc2V7aWYoIWYpaWYoYT1paChnKSxudWxsIT09YSl7aWYoYi5mbGFnc3w9NjQsZj0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksRmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIWxoKXJldHVybiBiPWIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqTygpLWQucmVuZGVyaW5nU3RhcnRUaW1lPkppJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PVxuNjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKTtkLmlzQmFja3dhcmRzPyhnLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWcpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZzpiLmNoaWxkPWcsZC5sYXN0PWcpfXJldHVybiBudWxsIT09ZC50YWlsPyhjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT1PKCksYy5zaWJsaW5nPW51bGwsYj1QLmN1cnJlbnQsSShQLGY/YiYxfDI6YiYxKSxjKTpudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PShudWxsIT09Yi5tZW1vaXplZFN0YXRlKSYmXCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiIT09ZC5tb2RlJiYoYi5mbGFnc3w9NCksbnVsbH10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO31cbmZ1bmN0aW9uIExpKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkZmKGEudHlwZSkmJkdmKCk7dmFyIGI9YS5mbGFncztyZXR1cm4gYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtiPWEuZmxhZ3M7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih5KDI4NSkpO2EuZmxhZ3M9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGhoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChQKSxiPWEuZmxhZ3MsYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKFApLG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYSksbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIE1pKGEsYil7dHJ5e3ZhciBjPVwiXCIsZD1iO2RvIGMrPVFhKGQpLGQ9ZC5yZXR1cm47d2hpbGUoZCk7dmFyIGU9Y31jYXRjaChmKXtlPVwiXFxuRXJyb3IgZ2VuZXJhdGluZyBzdGFjazogXCIrZi5tZXNzYWdlK1wiXFxuXCIrZi5zdGFja31yZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazplfX1mdW5jdGlvbiBOaShhLGIpe3RyeXtjb25zb2xlLmVycm9yKGIudmFsdWUpfWNhdGNoKGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBjO30pfX12YXIgT2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gUGkoYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7UWl8fChRaT0hMCxSaT1kKTtOaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIFNpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtOaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09VGk/VGk9bmV3IFNldChbdGhpc10pOlRpLmFkZCh0aGlzKSxOaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY312YXIgVWk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7XG5mdW5jdGlvbiBWaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtXaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9ZnVuY3Rpb24gWGkoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZmxhZ3MmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzpsZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Yi5mbGFncyYyNTYmJnFmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO3JldHVybjtjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIFlpKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpiPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3tpZigzPT09KGEudGFnJjMpKXt2YXIgZD1hLmNyZWF0ZTthLmRlc3Ryb3k9ZCgpfWE9YS5uZXh0fXdoaWxlKGEhPT1iKX1iPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3t2YXIgZT1hO2Q9ZS5uZXh0O2U9ZS50YWc7MCE9PShlJjQpJiYwIT09KGUmMSkmJihaaShjLGEpLCRpKGMsYSkpO2E9ZH13aGlsZShhIT09Yil9cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2MuZmxhZ3MmNCYmKG51bGw9PT1iP2EuY29tcG9uZW50RGlkTW91bnQoKTooZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczpsZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKSxhLmNvbXBvbmVudERpZFVwZGF0ZShkLFxuYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpKSk7Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZFZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUVnKGMsYixhKX1yZXR1cm47Y2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZmxhZ3MmNCYmbWYoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZDYyhjKSkpKTtcbnJldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOmNhc2UgMjM6Y2FzZSAyNDpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBhaihhLGIpe2Zvcih2YXIgYz1hOzspe2lmKDU9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoYilkPWQuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuc2V0UHJvcGVydHk/ZC5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpkLmRpc3BsYXk9XCJub25lXCI7ZWxzZXtkPWMuc3RhdGVOb2RlO3ZhciBlPWMubWVtb2l6ZWRQcm9wcy5zdHlsZTtlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbDtkLnN0eWxlLmRpc3BsYXk9c2IoXCJkaXNwbGF5XCIsZSl9fWVsc2UgaWYoNj09PWMudGFnKWMuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iP1wiXCI6Yy5tZW1vaXplZFByb3BzO2Vsc2UgaWYoKDIzIT09Yy50YWcmJjI0IT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fGM9PT1hKSYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1cbmEpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBiaihhLGIpe2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclVubW91bnQpdHJ5e01mLm9uQ29tbWl0RmliZXJVbm1vdW50KExmLGIpfWNhdGNoKGYpe31zd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGM9YT1hLm5leHQ7ZG97dmFyIGQ9YyxlPWQuZGVzdHJveTtkPWQudGFnO2lmKHZvaWQgMCE9PWUpaWYoMCE9PShkJjQpKVppKGIsYyk7ZWxzZXtkPWI7dHJ5e2UoKX1jYXRjaChmKXtXaShkLGYpfX1jPWMubmV4dH13aGlsZShjIT09YSl9YnJlYWs7Y2FzZSAxOlZpKGIpO2E9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2EucHJvcHM9Yi5tZW1vaXplZFByb3BzLGEuc3RhdGU9Yi5tZW1vaXplZFN0YXRlLGEuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtXaShiLFxuZil9YnJlYWs7Y2FzZSA1OlZpKGIpO2JyZWFrO2Nhc2UgNDpjaihhLGIpfX1mdW5jdGlvbiBkaihhKXthLmFsdGVybmF0ZT1udWxsO2EuY2hpbGQ9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EucmV0dXJuPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsfWZ1bmN0aW9uIGVqKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gZmooYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoZWooYikpYnJlYWsgYTtiPWIucmV0dXJufXRocm93IEVycm9yKHkoMTYwKSk7fXZhciBjPWI7Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMTYxKSk7fWMuZmxhZ3MmMTYmJihwYihiLFwiXCIpLGMuZmxhZ3MmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxlaihjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmZsYWdzJjIpY29udGludWUgYjtpZihudWxsPT09XG5jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5mbGFncyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP2dqKGEsYyxiKTpoaihhLGMsYil9XG5mdW5jdGlvbiBnaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9amYpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoZ2ooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylnaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBoaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGhqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspaGooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gY2ooYSxiKXtmb3IodmFyIGM9YixkPSExLGUsZjs7KXtpZighZCl7ZD1jLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWQpdGhyb3cgRXJyb3IoeSgxNjApKTtlPWQuc3RhdGVOb2RlO3N3aXRjaChkLnRhZyl7Y2FzZSA1OmY9ITE7YnJlYWsgYTtjYXNlIDM6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhO2Nhc2UgNDplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGF9ZD1kLnJldHVybn1kPSEwfWlmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKXthOmZvcih2YXIgZz1hLGg9YyxrPWg7OylpZihiaihnLGspLG51bGwhPT1rLmNoaWxkJiY0IT09ay50YWcpay5jaGlsZC5yZXR1cm49ayxrPWsuY2hpbGQ7ZWxzZXtpZihrPT09aClicmVhayBhO2Zvcig7bnVsbD09PWsuc2libGluZzspe2lmKG51bGw9PT1rLnJldHVybnx8ay5yZXR1cm49PT1oKWJyZWFrIGE7az1rLnJldHVybn1rLnNpYmxpbmcucmV0dXJuPWsucmV0dXJuO2s9ay5zaWJsaW5nfWY/KGc9ZSxoPWMuc3RhdGVOb2RlLFxuOD09PWcubm9kZVR5cGU/Zy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGgpOmcucmVtb3ZlQ2hpbGQoaCkpOmUucmVtb3ZlQ2hpbGQoYy5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWMudGFnKXtpZihudWxsIT09Yy5jaGlsZCl7ZT1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Y9ITA7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoYmooYSxjKSxudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm47ND09PWMudGFnJiYoZD0hMSl9Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBpaihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6dmFyIGM9Yi51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkbyAzPT09KGQudGFnJjMpJiYoYT1kLmRlc3Ryb3ksZC5kZXN0cm95PXZvaWQgMCx2b2lkIDAhPT1hJiZhKCkpLGQ9ZC5uZXh0O3doaWxlKGQhPT1jKX1yZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6Yz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXtkPWIubWVtb2l6ZWRQcm9wczt2YXIgZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1t4Zl09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmJGEoYyxkKTt3YihhLGUpO2I9d2IoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9XG4yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/dGIoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP29iKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9wYihjLGgpOnFhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjphYihjLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmE9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsZj1kLnZhbHVlLG51bGwhPWY/ZmIoYywhIWQubXVsdGlwbGUsZiwhMSk6YSE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP2ZiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpmYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPVxuYi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yz1iLnN0YXRlTm9kZTtjLmh5ZHJhdGUmJihjLmh5ZHJhdGU9ITEsQ2MoYy5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSYmKGpqPU8oKSxhaihiLmNoaWxkLCEwKSk7a2ooYik7cmV0dXJuO2Nhc2UgMTk6a2ooYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJuO2Nhc2UgMjM6Y2FzZSAyNDphaihiLG51bGwhPT1iLm1lbW9pemVkU3RhdGUpO3JldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31mdW5jdGlvbiBraihhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBVaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPWxqLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxuZnVuY3Rpb24gbWooYSxiKXtyZXR1cm4gbnVsbCE9PWEmJihhPWEubWVtb2l6ZWRTdGF0ZSxudWxsPT09YXx8bnVsbCE9PWEuZGVoeWRyYXRlZCk/KGI9Yi5tZW1vaXplZFN0YXRlLG51bGwhPT1iJiZudWxsPT09Yi5kZWh5ZHJhdGVkKTohMX12YXIgbmo9TWF0aC5jZWlsLG9qPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIscGo9cmEuUmVhY3RDdXJyZW50T3duZXIsWD0wLFU9bnVsbCxZPW51bGwsVz0wLHFqPTAscmo9QmYoMCksVj0wLHNqPW51bGwsdGo9MCxEZz0wLEhpPTAsdWo9MCx2aj1udWxsLGpqPTAsSmk9SW5maW5pdHk7ZnVuY3Rpb24gd2ooKXtKaT1PKCkrNTAwfXZhciBaPW51bGwsUWk9ITEsUmk9bnVsbCxUaT1udWxsLHhqPSExLHlqPW51bGwsemo9OTAsQWo9W10sQmo9W10sQ2o9bnVsbCxEaj0wLEVqPW51bGwsRmo9LTEsR2o9MCxIaj0wLElqPW51bGwsSmo9ITE7ZnVuY3Rpb24gSGcoKXtyZXR1cm4gMCE9PShYJjQ4KT9PKCk6LTEhPT1Gaj9GajpGaj1PKCl9XG5mdW5jdGlvbiBJZyhhKXthPWEubW9kZTtpZigwPT09KGEmMikpcmV0dXJuIDE7aWYoMD09PShhJjQpKXJldHVybiA5OT09PWVnKCk/MToyOzA9PT1HaiYmKEdqPXRqKTtpZigwIT09a2cudHJhbnNpdGlvbil7MCE9PUhqJiYoSGo9bnVsbCE9PXZqP3ZqLnBlbmRpbmdMYW5lczowKTthPUdqO3ZhciBiPTQxODYxMTImfkhqO2ImPS1iOzA9PT1iJiYoYT00MTg2MTEyJn5hLGI9YSYtYSwwPT09YiYmKGI9ODE5MikpO3JldHVybiBifWE9ZWcoKTswIT09KFgmNCkmJjk4PT09YT9hPVhjKDEyLEdqKTooYT1TYyhhKSxhPVhjKGEsR2opKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpnKGEsYixjKXtpZig1MDxEail0aHJvdyBEaj0wLEVqPW51bGwsRXJyb3IoeSgxODUpKTthPUtqKGEsYik7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7JGMoYSxiLGMpO2E9PT1VJiYoSGl8PWIsND09PVYmJklpKGEsVykpO3ZhciBkPWVnKCk7MT09PWI/MCE9PShYJjgpJiYwPT09KFgmNDgpP0xqKGEpOihNaihhLGMpLDA9PT1YJiYod2ooKSxpZygpKSk6KDA9PT0oWCY0KXx8OTghPT1kJiY5OSE9PWR8fChudWxsPT09Q2o/Q2o9bmV3IFNldChbYV0pOkNqLmFkZChhKSksTWooYSxjKSk7dmo9YX1mdW5jdGlvbiBLaihhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9XG5mdW5jdGlvbiBNaihhLGIpe2Zvcih2YXIgYz1hLmNhbGxiYWNrTm9kZSxkPWEuc3VzcGVuZGVkTGFuZXMsZT1hLnBpbmdlZExhbmVzLGY9YS5leHBpcmF0aW9uVGltZXMsZz1hLnBlbmRpbmdMYW5lczswPGc7KXt2YXIgaD0zMS1WYyhnKSxrPTE8PGgsbD1mW2hdO2lmKC0xPT09bCl7aWYoMD09PShrJmQpfHwwIT09KGsmZSkpe2w9YjtSYyhrKTt2YXIgbj1GO2ZbaF09MTA8PW4/bCsyNTA6Njw9bj9sKzVFMzotMX19ZWxzZSBsPD1iJiYoYS5leHBpcmVkTGFuZXN8PWspO2cmPX5rfWQ9VWMoYSxhPT09VT9XOjApO2I9RjtpZigwPT09ZCludWxsIT09YyYmKGMhPT1aZiYmUGYoYyksYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrUHJpb3JpdHk9MCk7ZWxzZXtpZihudWxsIT09Yyl7aWYoYS5jYWxsYmFja1ByaW9yaXR5PT09YilyZXR1cm47YyE9PVpmJiZQZihjKX0xNT09PWI/KGM9TGouYmluZChudWxsLGEpLG51bGw9PT1hZz8oYWc9W2NdLGJnPU9mKFVmLGpnKSk6YWcucHVzaChjKSxcbmM9WmYpOjE0PT09Yj9jPWhnKDk5LExqLmJpbmQobnVsbCxhKSk6KGM9VGMoYiksYz1oZyhjLE5qLmJpbmQobnVsbCxhKSkpO2EuY2FsbGJhY2tQcmlvcml0eT1iO2EuY2FsbGJhY2tOb2RlPWN9fVxuZnVuY3Rpb24gTmooYSl7Rmo9LTE7SGo9R2o9MDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGI9YS5jYWxsYmFja05vZGU7aWYoT2ooKSYmYS5jYWxsYmFja05vZGUhPT1iKXJldHVybiBudWxsO3ZhciBjPVVjKGEsYT09PVU/VzowKTtpZigwPT09YylyZXR1cm4gbnVsbDt2YXIgZD1jO3ZhciBlPVg7WHw9MTY7dmFyIGY9UGooKTtpZihVIT09YXx8VyE9PWQpd2ooKSxRaihhLGQpO2RvIHRyeXtSaigpO2JyZWFrfWNhdGNoKGgpe1NqKGEsaCl9d2hpbGUoMSk7cWcoKTtvai5jdXJyZW50PWY7WD1lO251bGwhPT1ZP2Q9MDooVT1udWxsLFc9MCxkPVYpO2lmKDAhPT0odGomSGkpKVFqKGEsMCk7ZWxzZSBpZigwIT09ZCl7Mj09PWQmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYz1XYyhhKSwwIT09YyYmKGQ9VGooYSxjKSkpO2lmKDE9PT1kKXRocm93IGI9c2osUWooYSwwKSxJaShhLGMpLE1qKGEsTygpKSxiO2EuZmluaXNoZWRXb3JrPVxuYS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9Yztzd2l0Y2goZCl7Y2FzZSAwOmNhc2UgMTp0aHJvdyBFcnJvcih5KDM0NSkpO2Nhc2UgMjpVaihhKTticmVhaztjYXNlIDM6SWkoYSxjKTtpZigoYyY2MjkxNDU2MCk9PT1jJiYoZD1qais1MDAtTygpLDEwPGQpKXtpZigwIT09VWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmYykhPT1jKXtIZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmZTticmVha31hLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGQpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNDpJaShhLGMpO2lmKChjJjQxODYxMTIpPT09YylicmVhaztkPWEuZXZlbnRUaW1lcztmb3IoZT0tMTswPGM7KXt2YXIgZz0zMS1WYyhjKTtmPTE8PGc7Zz1kW2ddO2c+ZSYmKGU9Zyk7YyY9fmZ9Yz1lO2M9TygpLWM7Yz0oMTIwPmM/MTIwOjQ4MD5jPzQ4MDoxMDgwPmM/MTA4MDoxOTIwPmM/MTkyMDozRTM+Yz8zRTM6NDMyMD5cbmM/NDMyMDoxOTYwKm5qKGMvMTk2MCkpLWM7aWYoMTA8Yyl7YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxjKTticmVha31VaihhKTticmVhaztjYXNlIDU6VWooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMyOSkpO319TWooYSxPKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWI/TmouYmluZChudWxsLGEpOm51bGx9ZnVuY3Rpb24gSWkoYSxiKXtiJj1+dWo7YiY9fkhpO2Euc3VzcGVuZGVkTGFuZXN8PWI7YS5waW5nZWRMYW5lcyY9fmI7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxiOyl7dmFyIGM9MzEtVmMoYiksZD0xPDxjO2FbY109LTE7YiY9fmR9fVxuZnVuY3Rpb24gTGooYSl7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO09qKCk7aWYoYT09PVUmJjAhPT0oYS5leHBpcmVkTGFuZXMmVykpe3ZhciBiPVc7dmFyIGM9VGooYSxiKTswIT09KHRqJkhpKSYmKGI9VWMoYSxiKSxjPVRqKGEsYikpfWVsc2UgYj1VYyhhLDApLGM9VGooYSxiKTswIT09YS50YWcmJjI9PT1jJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGI9V2MoYSksMCE9PWImJihjPVRqKGEsYikpKTtpZigxPT09Yyl0aHJvdyBjPXNqLFFqKGEsMCksSWkoYSxiKSxNaihhLE8oKSksYzthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1iO1VqKGEpO01qKGEsTygpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFZqKCl7aWYobnVsbCE9PUNqKXt2YXIgYT1DajtDaj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhKXthLmV4cGlyZWRMYW5lc3w9MjQmYS5wZW5kaW5nTGFuZXM7TWooYSxPKCkpfSl9aWcoKX1mdW5jdGlvbiBXaihhLGIpe3ZhciBjPVg7WHw9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBYaihhLGIpe3ZhciBjPVg7WCY9LTI7WHw9ODt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBuaShhLGIpe0kocmoscWopO3FqfD1iO3RqfD1ifWZ1bmN0aW9uIEtpKCl7cWo9cmouY3VycmVudDtIKHJqKX1cbmZ1bmN0aW9uIFFqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLHBmKGMpKTtpZihudWxsIT09WSlmb3IoYz1ZLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkdmKCk7YnJlYWs7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7YnJlYWs7Y2FzZSA1OmhoKGQpO2JyZWFrO2Nhc2UgNDpmaCgpO2JyZWFrO2Nhc2UgMTM6SChQKTticmVhaztjYXNlIDE5OkgoUCk7YnJlYWs7Y2FzZSAxMDpyZyhkKTticmVhaztjYXNlIDIzOmNhc2UgMjQ6S2koKX1jPWMucmV0dXJufVU9YTtZPVRnKGEuY3VycmVudCxudWxsKTtXPXFqPXRqPWI7Vj0wO3NqPW51bGw7dWo9SGk9RGc9MH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG97dmFyIGM9WTt0cnl7cWcoKTt2aC5jdXJyZW50PUdoO2lmKHloKXtmb3IodmFyIGQ9Ui5tZW1vaXplZFN0YXRlO251bGwhPT1kOyl7dmFyIGU9ZC5xdWV1ZTtudWxsIT09ZSYmKGUucGVuZGluZz1udWxsKTtkPWQubmV4dH15aD0hMX14aD0wO1Q9Uz1SPW51bGw7emg9ITE7cGouY3VycmVudD1udWxsO2lmKG51bGw9PT1jfHxudWxsPT09Yy5yZXR1cm4pe1Y9MTtzaj1iO1k9bnVsbDticmVha31hOnt2YXIgZj1hLGc9Yy5yZXR1cm4saD1jLGs9YjtiPVc7aC5mbGFnc3w9MjA0ODtoLmZpcnN0RWZmZWN0PWgubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWs7aWYoMD09PShoLm1vZGUmMikpe3ZhciBuPWguYWx0ZXJuYXRlO24/KGgudXBkYXRlUXVldWU9bi51cGRhdGVRdWV1ZSxoLm1lbW9pemVkU3RhdGU9bi5tZW1vaXplZFN0YXRlLGgubGFuZXM9bi5sYW5lcyk6XG4oaC51cGRhdGVRdWV1ZT1udWxsLGgubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgQT0wIT09KFAuY3VycmVudCYxKSxwPWc7ZG97dmFyIEM7aWYoQz0xMz09PXAudGFnKXt2YXIgeD1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXgpQz1udWxsIT09eC5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIHc9cC5tZW1vaXplZFByb3BzO0M9dm9pZCAwPT09dy5mYWxsYmFjaz8hMTohMCE9PXcudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6QT8hMTohMH19aWYoQyl7dmFyIHo9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09eil7dmFyIHU9bmV3IFNldDt1LmFkZChsKTtwLnVwZGF0ZVF1ZXVlPXV9ZWxzZSB6LmFkZChsKTtpZigwPT09KHAubW9kZSYyKSl7cC5mbGFnc3w9NjQ7aC5mbGFnc3w9MTYzODQ7aC5mbGFncyY9LTI5ODE7aWYoMT09PWgudGFnKWlmKG51bGw9PT1oLmFsdGVybmF0ZSloLnRhZz0xNztlbHNle3ZhciB0PXpnKC0xLDEpO3QudGFnPTI7QWcoaCx0KX1oLmxhbmVzfD0xO2JyZWFrIGF9az1cbnZvaWQgMDtoPWI7dmFyIHE9Zi5waW5nQ2FjaGU7bnVsbD09PXE/KHE9Zi5waW5nQ2FjaGU9bmV3IE9pLGs9bmV3IFNldCxxLnNldChsLGspKTooaz1xLmdldChsKSx2b2lkIDA9PT1rJiYoaz1uZXcgU2V0LHEuc2V0KGwsaykpKTtpZighay5oYXMoaCkpe2suYWRkKGgpO3ZhciB2PVlqLmJpbmQobnVsbCxmLGwsaCk7bC50aGVuKHYsdil9cC5mbGFnc3w9NDA5NjtwLmxhbmVzPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtrPUVycm9yKChSYShoLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIpfTUhPT1WJiYoVj0yKTtrPU1pKGssaCk7cD1cbmc7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6Zj1rO3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgSj1QaShwLGYsYik7QmcocCxKKTticmVhayBhO2Nhc2UgMTpmPWs7dmFyIEs9cC50eXBlLFE9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmZsYWdzJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBLLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PVEmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBRLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKFEpKSkpe3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgTD1TaShwLGYsYik7QmcocCxMKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1aaihjKX1jYXRjaCh2YSl7Yj12YTtZPT09YyYmbnVsbCE9PWMmJihZPWM9Yy5yZXR1cm4pO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gUGooKXt2YXIgYT1vai5jdXJyZW50O29qLmN1cnJlbnQ9R2g7cmV0dXJuIG51bGw9PT1hP0doOmF9ZnVuY3Rpb24gVGooYSxiKXt2YXIgYz1YO1h8PTE2O3ZhciBkPVBqKCk7VT09PWEmJlc9PT1ifHxRaihhLGIpO2RvIHRyeXthaygpO2JyZWFrfWNhdGNoKGUpe1NqKGEsZSl9d2hpbGUoMSk7cWcoKTtYPWM7b2ouY3VycmVudD1kO2lmKG51bGwhPT1ZKXRocm93IEVycm9yKHkoMjYxKSk7VT1udWxsO1c9MDtyZXR1cm4gVn1mdW5jdGlvbiBhaygpe2Zvcig7bnVsbCE9PVk7KWJrKFkpfWZ1bmN0aW9uIFJqKCl7Zm9yKDtudWxsIT09WSYmIVFmKCk7KWJrKFkpfWZ1bmN0aW9uIGJrKGEpe3ZhciBiPWNrKGEuYWx0ZXJuYXRlLGEscWopO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09Yj9aaihhKTpZPWI7cGouY3VycmVudD1udWxsfVxuZnVuY3Rpb24gWmooYSl7dmFyIGI9YTtkb3t2YXIgYz1iLmFsdGVybmF0ZTthPWIucmV0dXJuO2lmKDA9PT0oYi5mbGFncyYyMDQ4KSl7Yz1HaShjLGIscWopO2lmKG51bGwhPT1jKXtZPWM7cmV0dXJufWM9YjtpZigyNCE9PWMudGFnJiYyMyE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHwwIT09KHFqJjEwNzM3NDE4MjQpfHwwPT09KGMubW9kZSY0KSl7Zm9yKHZhciBkPTAsZT1jLmNoaWxkO251bGwhPT1lOylkfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxlPWUuc2libGluZztjLmNoaWxkTGFuZXM9ZH1udWxsIT09YSYmMD09PShhLmZsYWdzJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLG51bGwhPT1iLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9Yi5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCksMTxiLmZsYWdzJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWI6YS5maXJzdEVmZmVjdD1iLGEubGFzdEVmZmVjdD1iKSl9ZWxzZXtjPUxpKGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0yMDQ3O1k9YztyZXR1cm59bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZmxhZ3N8PTIwNDgpfWI9Yi5zaWJsaW5nO2lmKG51bGwhPT1iKXtZPWI7cmV0dXJufVk9Yj1hfXdoaWxlKG51bGwhPT1iKTswPT09ViYmKFY9NSl9ZnVuY3Rpb24gVWooYSl7dmFyIGI9ZWcoKTtnZyg5OSxkay5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkayhhLGIpe2RvIE9qKCk7d2hpbGUobnVsbCE9PXlqKTtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcms7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHkoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDt2YXIgZD1jLmxhbmVzfGMuY2hpbGRMYW5lcyxlPWQsZj1hLnBlbmRpbmdMYW5lcyZ+ZTthLnBlbmRpbmdMYW5lcz1lO2Euc3VzcGVuZGVkTGFuZXM9MDthLnBpbmdlZExhbmVzPTA7YS5leHBpcmVkTGFuZXMmPWU7YS5tdXRhYmxlUmVhZExhbmVzJj1lO2EuZW50YW5nbGVkTGFuZXMmPWU7ZT1hLmVudGFuZ2xlbWVudHM7Zm9yKHZhciBnPWEuZXZlbnRUaW1lcyxoPWEuZXhwaXJhdGlvblRpbWVzOzA8Zjspe3ZhciBrPTMxLVZjKGYpLGw9MTw8aztlW2tdPTA7Z1trXT0tMTtoW2tdPS0xO2YmPX5sfW51bGwhPT1cbkNqJiYwPT09KGQmMjQpJiZDai5oYXMoYSkmJkNqLmRlbGV0ZShhKTthPT09VSYmKFk9VT1udWxsLFc9MCk7MTxjLmZsYWdzP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZD1jLmZpcnN0RWZmZWN0KTpkPWM6ZD1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1kKXtlPVg7WHw9MzI7cGouY3VycmVudD1udWxsO2tmPWZkO2c9TmUoKTtpZihPZShnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyloPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOmlmKGg9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93LChsPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpKSYmMCE9PWwucmFuZ2VDb3VudCl7aD1sLmFuY2hvck5vZGU7Zj1sLmFuY2hvck9mZnNldDtrPWwuZm9jdXNOb2RlO2w9bC5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxrLm5vZGVUeXBlfWNhdGNoKHZhKXtoPW51bGw7XG5icmVhayBhfXZhciBuPTAsQT0tMSxwPS0xLEM9MCx4PTAsdz1nLHo9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB1Ozspe3chPT1ofHwwIT09ZiYmMyE9PXcubm9kZVR5cGV8fChBPW4rZik7dyE9PWt8fDAhPT1sJiYzIT09dy5ub2RlVHlwZXx8KHA9bitsKTszPT09dy5ub2RlVHlwZSYmKG4rPXcubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh1PXcuZmlyc3RDaGlsZCkpYnJlYWs7ej13O3c9dX1mb3IoOzspe2lmKHc9PT1nKWJyZWFrIGI7ej09PWgmJisrQz09PWYmJihBPW4pO3o9PT1rJiYrK3g9PT1sJiYocD1uKTtpZihudWxsIT09KHU9dy5uZXh0U2libGluZykpYnJlYWs7dz16O3o9dy5wYXJlbnROb2RlfXc9dX1oPS0xPT09QXx8LTE9PT1wP251bGw6e3N0YXJ0OkEsZW5kOnB9fWVsc2UgaD1udWxsO2g9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1udWxsO2xmPXtmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO0lqPW51bGw7Smo9ITE7Wj1kO2RvIHRyeXtlaygpfWNhdGNoKHZhKXtpZihudWxsPT09XG5aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO0lqPW51bGw7Wj1kO2RvIHRyeXtmb3IoZz1hO251bGwhPT1aOyl7dmFyIHQ9Wi5mbGFnczt0JjE2JiZwYihaLnN0YXRlTm9kZSxcIlwiKTtpZih0JjEyOCl7dmFyIHE9Wi5hbHRlcm5hdGU7aWYobnVsbCE9PXEpe3ZhciB2PXEucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaCh0JjEwMzgpe2Nhc2UgMjpmaihaKTtaLmZsYWdzJj0tMzticmVhaztjYXNlIDY6ZmooWik7Wi5mbGFncyY9LTM7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSAxMDI0OlouZmxhZ3MmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpaLmZsYWdzJj0tMTAyNTtpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDQ6aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA4Omg9WjtjaihnLGgpO3ZhciBKPWguYWx0ZXJuYXRlO2RqKGgpO251bGwhPT1cbkomJmRqKEopfVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7dj1sZjtxPU5lKCk7dD12LmZvY3VzZWRFbGVtO2c9di5zZWxlY3Rpb25SYW5nZTtpZihxIT09dCYmdCYmdC5vd25lckRvY3VtZW50JiZNZSh0Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHQpKXtudWxsIT09ZyYmT2UodCkmJihxPWcuc3RhcnQsdj1nLmVuZCx2b2lkIDA9PT12JiYodj1xKSxcInNlbGVjdGlvblN0YXJ0XCJpbiB0Pyh0LnNlbGVjdGlvblN0YXJ0PXEsdC5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odix0LnZhbHVlLmxlbmd0aCkpOih2PShxPXQub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZxLmRlZmF1bHRWaWV3fHx3aW5kb3csdi5nZXRTZWxlY3Rpb24mJih2PXYuZ2V0U2VsZWN0aW9uKCksaD10LnRleHRDb250ZW50Lmxlbmd0aCxKPU1hdGgubWluKGcuc3RhcnQsaCksZz12b2lkIDA9PT1cbmcuZW5kP0o6TWF0aC5taW4oZy5lbmQsaCksIXYuZXh0ZW5kJiZKPmcmJihoPWcsZz1KLEo9aCksaD1MZSh0LEopLGY9TGUodCxnKSxoJiZmJiYoMSE9PXYucmFuZ2VDb3VudHx8di5hbmNob3JOb2RlIT09aC5ub2RlfHx2LmFuY2hvck9mZnNldCE9PWgub2Zmc2V0fHx2LmZvY3VzTm9kZSE9PWYubm9kZXx8di5mb2N1c09mZnNldCE9PWYub2Zmc2V0KSYmKHE9cS5jcmVhdGVSYW5nZSgpLHEuc2V0U3RhcnQoaC5ub2RlLGgub2Zmc2V0KSx2LnJlbW92ZUFsbFJhbmdlcygpLEo+Zz8odi5hZGRSYW5nZShxKSx2LmV4dGVuZChmLm5vZGUsZi5vZmZzZXQpKToocS5zZXRFbmQoZi5ub2RlLGYub2Zmc2V0KSx2LmFkZFJhbmdlKHEpKSkpKSk7cT1bXTtmb3Iodj10O3Y9di5wYXJlbnROb2RlOykxPT09di5ub2RlVHlwZSYmcS5wdXNoKHtlbGVtZW50OnYsbGVmdDp2LnNjcm9sbExlZnQsdG9wOnYuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHQuZm9jdXMmJnQuZm9jdXMoKTtmb3IodD1cbjA7dDxxLmxlbmd0aDt0Kyspdj1xW3RdLHYuZWxlbWVudC5zY3JvbGxMZWZ0PXYubGVmdCx2LmVsZW1lbnQuc2Nyb2xsVG9wPXYudG9wfWZkPSEha2Y7bGY9a2Y9bnVsbDthLmN1cnJlbnQ9YztaPWQ7ZG8gdHJ5e2Zvcih0PWE7bnVsbCE9PVo7KXt2YXIgSz1aLmZsYWdzO0smMzYmJllpKHQsWi5hbHRlcm5hdGUsWik7aWYoSyYxMjgpe3E9dm9pZCAwO3ZhciBRPVoucmVmO2lmKG51bGwhPT1RKXt2YXIgTD1aLnN0YXRlTm9kZTtzd2l0Y2goWi50YWcpe2Nhc2UgNTpxPUw7YnJlYWs7ZGVmYXVsdDpxPUx9XCJmdW5jdGlvblwiPT09dHlwZW9mIFE/UShxKTpRLmN1cnJlbnQ9cX19Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtaPW51bGw7JGYoKTtYPWV9ZWxzZSBhLmN1cnJlbnQ9YztpZih4ail4aj0hMSx5aj1hLHpqPWI7ZWxzZSBmb3IoWj1kO251bGwhPT1aOyliPVxuWi5uZXh0RWZmZWN0LFoubmV4dEVmZmVjdD1udWxsLFouZmxhZ3MmOCYmKEs9WixLLnNpYmxpbmc9bnVsbCxLLnN0YXRlTm9kZT1udWxsKSxaPWI7ZD1hLnBlbmRpbmdMYW5lczswPT09ZCYmKFRpPW51bGwpOzE9PT1kP2E9PT1Faj9EaisrOihEaj0wLEVqPWEpOkRqPTA7Yz1jLnN0YXRlTm9kZTtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJSb290KXRyeXtNZi5vbkNvbW1pdEZpYmVyUm9vdChMZixjLHZvaWQgMCw2ND09PShjLmN1cnJlbnQuZmxhZ3MmNjQpKX1jYXRjaCh2YSl7fU1qKGEsTygpKTtpZihRaSl0aHJvdyBRaT0hMSxhPVJpLFJpPW51bGwsYTtpZigwIT09KFgmOCkpcmV0dXJuIG51bGw7aWcoKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGVrKCl7Zm9yKDtudWxsIT09Wjspe3ZhciBhPVouYWx0ZXJuYXRlO0pqfHxudWxsPT09SWp8fCgwIT09KFouZmxhZ3MmOCk/ZGMoWixJaikmJihKaj0hMCk6MTM9PT1aLnRhZyYmbWooYSxaKSYmZGMoWixJaikmJihKaj0hMCkpO3ZhciBiPVouZmxhZ3M7MCE9PShiJjI1NikmJlhpKGEsWik7MD09PShiJjUxMil8fHhqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpO1o9Wi5uZXh0RWZmZWN0fX1mdW5jdGlvbiBPaigpe2lmKDkwIT09emope3ZhciBhPTk3PHpqPzk3OnpqO3pqPTkwO3JldHVybiBnZyhhLGZrKX1yZXR1cm4hMX1mdW5jdGlvbiAkaShhLGIpe0FqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1mdW5jdGlvbiBaaShhLGIpe0JqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1cbmZ1bmN0aW9uIGZrKCl7aWYobnVsbD09PXlqKXJldHVybiExO3ZhciBhPXlqO3lqPW51bGw7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMzMSkpO3ZhciBiPVg7WHw9MzI7dmFyIGM9Qmo7Qmo9W107Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKz0yKXt2YXIgZT1jW2RdLGY9Y1tkKzFdLGc9ZS5kZXN0cm95O2UuZGVzdHJveT12b2lkIDA7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcpdHJ5e2coKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWM9QWo7QWo9W107Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrPTIpe2U9Y1tkXTtmPWNbZCsxXTt0cnl7dmFyIGg9ZS5jcmVhdGU7ZS5kZXN0cm95PWgoKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWZvcihoPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09aDspYT1oLm5leHRFZmZlY3QsaC5uZXh0RWZmZWN0PW51bGwsaC5mbGFncyY4JiYoaC5zaWJsaW5nPVxubnVsbCxoLnN0YXRlTm9kZT1udWxsKSxoPWE7WD1iO2lnKCk7cmV0dXJuITB9ZnVuY3Rpb24gZ2soYSxiLGMpe2I9TWkoYyxiKTtiPVBpKGEsYiwxKTtBZyhhLGIpO2I9SGcoKTthPUtqKGEsMSk7bnVsbCE9PWEmJigkYyhhLDEsYiksTWooYSxiKSl9XG5mdW5jdGlvbiBXaShhLGIpe2lmKDM9PT1hLnRhZylnayhhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe2drKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl7YT1NaShiLGEpO3ZhciBlPVNpKGMsYSwxKTtBZyhjLGUpO2U9SGcoKTtjPUtqKGMsMSk7aWYobnVsbCE9PWMpJGMoYywxLGUpLE1qKGMsZSk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpdHJ5e2QuY29tcG9uZW50RGlkQ2F0Y2goYixhKX1jYXRjaChmKXt9YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gWWooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtiPUhnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1U9PT1hJiYoVyZjKT09PWMmJig0PT09Vnx8Mz09PVYmJihXJjYyOTE0NTYwKT09PVcmJjUwMD5PKCktamo/UWooYSwwKTp1anw9Yyk7TWooYSxiKX1mdW5jdGlvbiBsaihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPWEubW9kZSwwPT09KGImMik/Yj0xOjA9PT0oYiY0KT9iPTk5PT09ZWcoKT8xOjI6KDA9PT1HaiYmKEdqPXRqKSxiPVljKDYyOTE0NTYwJn5HaiksMD09PWImJihiPTQxOTQzMDQpKSk7Yz1IZygpO2E9S2ooYSxiKTtudWxsIT09YSYmKCRjKGEsYixjKSxNaihhLGMpKX12YXIgY2s7XG5jaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5sYW5lcztpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8Ti5jdXJyZW50KXVnPSEwO2Vsc2UgaWYoMCE9PShjJmQpKXVnPTAhPT0oYS5mbGFncyYxNjM4NCk/ITA6ITE7ZWxzZXt1Zz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpyaShiKTtzaCgpO2JyZWFrO2Nhc2UgNTpnaChiKTticmVhaztjYXNlIDE6RmYoYi50eXBlKSYmSmYoYik7YnJlYWs7Y2FzZSA0OmVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTt2YXIgZT1iLnR5cGUuX2NvbnRleHQ7SShtZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7aWYoMCE9PShjJmIuY2hpbGQuY2hpbGRMYW5lcykpcmV0dXJuIHRpKGEsYixjKTtJKFAsUC5jdXJyZW50JjEpO2I9aGkoYSxiLGMpO3JldHVybiBudWxsIT09XG5iP2Iuc2libGluZzpudWxsfUkoUCxQLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPTAhPT0oYyZiLmNoaWxkTGFuZXMpO2lmKDAhPT0oYS5mbGFncyY2NCkpe2lmKGQpcmV0dXJuIEFpKGEsYixjKTtiLmZsYWdzfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwsZS5sYXN0RWZmZWN0PW51bGwpO0koUCxQLmN1cnJlbnQpO2lmKGQpYnJlYWs7ZWxzZSByZXR1cm4gbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIGIubGFuZXM9MCxtaShhLGIsYyl9cmV0dXJuIGhpKGEsYixjKX1lbHNlIHVnPSExO2IubGFuZXM9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9RWYoYixNLmN1cnJlbnQpO3RnKGIsYyk7ZT1DaChudWxsLGIsZCxhLGUsYyk7Yi5mbGFnc3w9MTtpZihcIm9iamVjdFwiPT09XG50eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoRmYoZCkpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3hnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZHZyhiLGQsZyxhKTtlLnVwZGF0ZXI9S2c7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFscz1iO09nKGIsZCxhLGMpO2I9cWkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsZmkobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO2E6e251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO1xuYT1iLnBlbmRpbmdQcm9wcztmPWUuX2luaXQ7ZT1mKGUuX3BheWxvYWQpO2IudHlwZT1lO2Y9Yi50YWc9aGsoZSk7YT1sZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1saShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9cGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1naShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWlpKG51bGwsYixlLGxnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxsaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxwaShhLGIsZCxlLGMpO2Nhc2UgMzpyaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHkoMjgyKSk7XG5kPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7eWcoYSxiKTtDZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKXNoKCksYj1oaShhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGY9ZS5oeWRyYXRlKWtoPXJmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksamg9YixmPWxoPSEwO2lmKGYpe2E9ZS5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhO2lmKG51bGwhPWEpZm9yKGU9MDtlPGEubGVuZ3RoO2UrPTIpZj1hW2VdLGYuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9YVtlKzFdLHRoLnB1c2goZik7Yz1aZyhiLG51bGwsZCxjKTtmb3IoYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3wxMDI0LGM9Yy5zaWJsaW5nfWVsc2UgZmkoYSxiLGQsYyksc2goKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBnaChiKSxudWxsPT09YSYmXG5waChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG5mKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZuZihkLGYpJiYoYi5mbGFnc3w9MTYpLG9pKGEsYiksZmkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZwaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHRpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVlnKGIsbnVsbCxkLGMpOmZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxnaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0kobWcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj1IZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhTi5jdXJyZW50KXtiPWhpKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPVxuay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXpnKC0xLGMmLWMpLGwudGFnPTIsQWcoaCxsKSk7aC5sYW5lc3w9YztsPWguYWx0ZXJuYXRlO251bGwhPT1sJiYobC5sYW5lc3w9Yyk7c2coaC5yZXR1cm4sYyk7ay5sYW5lc3w9YzticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1nfWZpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHRnKGIsYyksZT12ZyhlLFxuZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmZsYWdzfD0xLGZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1sZyhlLGIucGVuZGluZ1Byb3BzKSxmPWxnKGUudHlwZSxmKSxpaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4ga2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksYi50YWc9MSxGZihkKT8oYT0hMCxKZihiKSk6YT0hMSx0ZyhiLGMpLE1nKGIsZCxlKSxPZyhiLGQsZSxjKSxxaShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEFpKGEsYixjKTtjYXNlIDIzOnJldHVybiBtaShhLGIsYyk7Y2FzZSAyNDpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7XG59O2Z1bmN0aW9uIGlrKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5mbGFncz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBuaChhLGIsYyxkKXtyZXR1cm4gbmV3IGlrKGEsYixjLGQpfWZ1bmN0aW9uIGppKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9XG5mdW5jdGlvbiBoayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gamkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PUFhKXJldHVybiAxMTtpZihhPT09RGEpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1uaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXM7Yy5sYW5lcz1hLmxhbmVzO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7bGFuZXM6Yi5sYW5lcyxmaXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHR9O1xuYy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBWZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpamkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuIFhnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgSGE6Zz04O2V8PTE2O2JyZWFrO2Nhc2Ugd2E6Zz04O2V8PTE7YnJlYWs7Y2FzZSB4YTpyZXR1cm4gYT1uaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPXhhLGEudHlwZT14YSxhLmxhbmVzPWYsYTtjYXNlIEJhOnJldHVybiBhPW5oKDEzLGMsYixlKSxhLnR5cGU9QmEsYS5lbGVtZW50VHlwZT1CYSxhLmxhbmVzPWYsYTtjYXNlIENhOnJldHVybiBhPW5oKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPUNhLGEubGFuZXM9ZixhO2Nhc2UgSWE6cmV0dXJuIHZpKGMsZSxmLGIpO2Nhc2UgSmE6cmV0dXJuIGE9bmgoMjQsYyxiLGUpLGEuZWxlbWVudFR5cGU9SmEsYS5sYW5lcz1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09XG50eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgeWE6Zz0xMDticmVhayBhO2Nhc2UgemE6Zz05O2JyZWFrIGE7Y2FzZSBBYTpnPTExO2JyZWFrIGE7Y2FzZSBEYTpnPTE0O2JyZWFrIGE7Y2FzZSBFYTpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgRmE6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHkoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9bmgoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBYZyhhLGIsYyxkKXthPW5oKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiB2aShhLGIsYyxkKXthPW5oKDIzLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBVZyhhLGIsYyl7YT1uaCg2LGEsbnVsbCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBXZyhhLGIsYyl7Yj1uaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5sYW5lcz1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGprKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTA7dGhpcy5ldmVudFRpbWVzPVpjKDApO3RoaXMuZXhwaXJhdGlvblRpbWVzPVpjKC0xKTt0aGlzLmVudGFuZ2xlZExhbmVzPXRoaXMuZmluaXNoZWRMYW5lcz10aGlzLm11dGFibGVSZWFkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTA7dGhpcy5lbnRhbmdsZW1lbnRzPVpjKDApO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1udWxsfVxuZnVuY3Rpb24ga2soYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjp0YSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbmZ1bmN0aW9uIGxrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUhnKCksZz1JZyhlKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbHM7Yjp7aWYoWmIoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihGZihoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHkoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEZmKGspKXtjPUlmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUNmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9emcoZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1kP251bGw6ZDtudWxsIT09XG5kJiYoYi5jYWxsYmFjaz1kKTtBZyhlLGIpO0pnKGUsZyxmKTtyZXR1cm4gZ31mdW5jdGlvbiBtayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIG5rKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe3ZhciBjPWEucmV0cnlMYW5lO2EucmV0cnlMYW5lPTAhPT1jJiZjPGI/YzpifX1mdW5jdGlvbiBvayhhLGIpe25rKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZuayhhLGIpfWZ1bmN0aW9uIHBrKCl7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBxayhhLGIsYyl7dmFyIGQ9bnVsbCE9YyYmbnVsbCE9Yy5oeWRyYXRpb25PcHRpb25zJiZjLmh5ZHJhdGlvbk9wdGlvbnMubXV0YWJsZVNvdXJjZXN8fG51bGw7Yz1uZXcgamsoYSxiLG51bGwhPWMmJiEwPT09Yy5oeWRyYXRlKTtiPW5oKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtjLmN1cnJlbnQ9YjtiLnN0YXRlTm9kZT1jO3hnKGIpO2FbZmZdPWMuY3VycmVudDtjZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7aWYoZClmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKXtiPWRbYV07dmFyIGU9Yi5fZ2V0VmVyc2lvbjtlPWUoYi5fc291cmNlKTtudWxsPT1jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtiLGVdOmMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGIsZSl9dGhpcy5faW50ZXJuYWxSb290PWN9XG5xay5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2xrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O3FrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2xrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltmZl09bnVsbH0pfTtmdW5jdGlvbiByayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9XG5mdW5jdGlvbiBzayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IHFrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gdGsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtoLmNhbGwoYSl9fWxrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9c2soYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7ay5jYWxsKGEpfX1YaihmdW5jdGlvbigpe2xrKGIsZyxhLGUpfSl9cmV0dXJuIG1rKGcpfWVjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw0LGIpO29rKGEsNCl9fTtmYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNjcxMDg4NjQsYik7b2soYSw2NzEwODg2NCl9fTtcbmdjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCksYz1JZyhhKTtKZyhhLGMsYik7b2soYSxjKX19O2hjPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGIoKX07XG55Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmFiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1EYihkKTtpZighZSl0aHJvdyBFcnJvcih5KDkwKSk7V2EoZCk7YWIoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0diPVdqO1xuSGI9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1YO1h8PTQ7dHJ5e3JldHVybiBnZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtYPWYsMD09PVgmJih3aigpLGlnKCkpfX07SWI9ZnVuY3Rpb24oKXswPT09KFgmNDkpJiYoVmooKSxPaigpKX07SmI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO1h8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19O2Z1bmN0aW9uIHVrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIGtrKGEsYixudWxsLGMpfXZhciB2az17RXZlbnRzOltDYix1ZSxEYixFYixGYixPaix7Y3VycmVudDohMX1dfSx3az17ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2MsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNy4wLjFcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9O1xudmFyIHhrPXtidW5kbGVUeXBlOndrLmJ1bmRsZVR5cGUsdmVyc2lvbjp3ay52ZXJzaW9uLHJlbmRlcmVyUGFja2FnZU5hbWU6d2sucmVuZGVyZXJQYWNrYWdlTmFtZSxyZW5kZXJlckNvbmZpZzp3ay5yZW5kZXJlckNvbmZpZyxvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aDpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxvdmVycmlkZVByb3BzRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpyYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9Y2MoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndrLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlfHxcbnBrLGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXt2YXIgeWs9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKCF5ay5pc0Rpc2FibGVkJiZ5ay5zdXBwb3J0c0ZpYmVyKXRyeXtMZj15ay5pbmplY3QoeGspLE1mPXlrfWNhdGNoKGEpe319ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD12aztleHBvcnRzLmNyZWF0ZVBvcnRhbD11aztcbmV4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFscztpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IoeSgxODgpKTt0aHJvdyBFcnJvcih5KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWNjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07ZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO2lmKDAhPT0oYyY0OCkpcmV0dXJuIGEoYik7WHw9MTt0cnl7aWYoYSlyZXR1cm4gZ2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7WD1jLGlnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMCxjKX07XG5leHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIXJrKGEpKXRocm93IEVycm9yKHkoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhYaihmdW5jdGlvbigpe3RrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtmZl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVdqO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHVrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighcmsoYykpdGhyb3cgRXJyb3IoeSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcih5KDM4KSk7cmV0dXJuIHRrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjFcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/XG5TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTo2MDEyMCxyPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsdD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHY9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsdz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx5PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O1xuZnVuY3Rpb24geihhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgdDpjYXNlIHI6Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIEEoYSl7cmV0dXJuIHooYSk9PT1tfWV4cG9ydHMuQXN5bmNNb2RlPWw7ZXhwb3J0cy5Db25jdXJyZW50TW9kZT1tO2V4cG9ydHMuQ29udGV4dENvbnN1bWVyPWs7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9aDtleHBvcnRzLkVsZW1lbnQ9YztleHBvcnRzLkZvcndhcmRSZWY9bjtleHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXQ7ZXhwb3J0cy5NZW1vPXI7ZXhwb3J0cy5Qb3J0YWw9ZDtcbmV4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gQShhKXx8eihhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT1BO2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT10fTtcbmV4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cH07XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09d3x8YS4kJHR5cGVvZj09PXh8fGEuJCR0eXBlb2Y9PT15fHxhLiQkdHlwZW9mPT09dil9O2V4cG9ydHMudHlwZU9mPXo7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4xXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj02MDEwMyxwPTYwMTA2O2V4cG9ydHMuRnJhZ21lbnQ9NjAxMDc7ZXhwb3J0cy5TdHJpY3RNb2RlPTYwMTA4O2V4cG9ydHMuUHJvZmlsZXI9NjAxMTQ7dmFyIHE9NjAxMDkscj02MDExMCx0PTYwMTEyO2V4cG9ydHMuU3VzcGVuc2U9NjAxMTM7dmFyIHU9NjAxMTUsdj02MDExNjtcbmlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3Ipe3ZhciB3PVN5bWJvbC5mb3I7bj13KFwicmVhY3QuZWxlbWVudFwiKTtwPXcoXCJyZWFjdC5wb3J0YWxcIik7ZXhwb3J0cy5GcmFnbWVudD13KFwicmVhY3QuZnJhZ21lbnRcIik7ZXhwb3J0cy5TdHJpY3RNb2RlPXcoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTtleHBvcnRzLlByb2ZpbGVyPXcoXCJyZWFjdC5wcm9maWxlclwiKTtxPXcoXCJyZWFjdC5wcm92aWRlclwiKTtyPXcoXCJyZWFjdC5jb250ZXh0XCIpO3Q9dyhcInJlYWN0LmZvcndhcmRfcmVmXCIpO2V4cG9ydHMuU3VzcGVuc2U9dyhcInJlYWN0LnN1c3BlbnNlXCIpO3U9dyhcInJlYWN0Lm1lbW9cIik7dj13KFwicmVhY3QubGF6eVwiKX12YXIgeD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7XG5mdW5jdGlvbiB5KGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT14JiZhW3hdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24geihhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1cbnZhciBBPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxCPXt9O2Z1bmN0aW9uIEMoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Qjt0aGlzLnVwZGF0ZXI9Y3x8QX1DLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0MucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcih6KDg1KSk7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtDLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcbmZ1bmN0aW9uIEQoKXt9RC5wcm90b3R5cGU9Qy5wcm90b3R5cGU7ZnVuY3Rpb24gRShhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfXZhciBGPUUucHJvdG90eXBlPW5ldyBEO0YuY29uc3RydWN0b3I9RTtsKEYsQy5wcm90b3R5cGUpO0YuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEc9e2N1cnJlbnQ6bnVsbH0sSD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEk9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIEooYSxiLGMpe3ZhciBlLGQ9e30saz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihlIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihrPVwiXCIrYi5rZXkpLGIpSC5jYWxsKGIsZSkmJiFJLmhhc093blByb3BlcnR5KGUpJiYoZFtlXT1iW2VdKTt2YXIgZz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWcpZC5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxnKXtmb3IodmFyIGY9QXJyYXkoZyksbT0wO208ZzttKyspZlttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWZ9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGUgaW4gZz1hLmRlZmF1bHRQcm9wcyxnKXZvaWQgMD09PWRbZV0mJihkW2VdPWdbZV0pO3JldHVybnskJHR5cGVvZjpuLHR5cGU6YSxrZXk6ayxyZWY6aCxwcm9wczpkLF9vd25lcjpHLmN1cnJlbnR9fVxuZnVuY3Rpb24gSyhhLGIpe3JldHVybnskJHR5cGVvZjpuLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTChhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09bn1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiK2EucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE09L1xcLysvZztmdW5jdGlvbiBOKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKFwiXCIrYS5rZXkpOmIudG9TdHJpbmcoMzYpfVxuZnVuY3Rpb24gTyhhLGIsYyxlLGQpe3ZhciBrPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1rfHxcImJvb2xlYW5cIj09PWspYT1udWxsO3ZhciBoPSExO2lmKG51bGw9PT1hKWg9ITA7ZWxzZSBzd2l0Y2goayl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpoPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBuOmNhc2UgcDpoPSEwfX1pZihoKXJldHVybiBoPWEsZD1kKGgpLGE9XCJcIj09PWU/XCIuXCIrTihoLDApOmUsQXJyYXkuaXNBcnJheShkKT8oYz1cIlwiLG51bGwhPWEmJihjPWEucmVwbGFjZShNLFwiJCYvXCIpK1wiL1wiKSxPKGQsYixjLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KSk6bnVsbCE9ZCYmKEwoZCkmJihkPUsoZCxjKyghZC5rZXl8fGgmJmgua2V5PT09ZC5rZXk/XCJcIjooXCJcIitkLmtleSkucmVwbGFjZShNLFwiJCYvXCIpK1wiL1wiKSthKSksYi5wdXNoKGQpKSwxO2g9MDtlPVwiXCI9PT1lP1wiLlwiOmUrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGc9XG4wO2c8YS5sZW5ndGg7ZysrKXtrPWFbZ107dmFyIGY9ZStOKGssZyk7aCs9TyhrLGIsYyxmLGQpfWVsc2UgaWYoZj15KGEpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxnPTA7IShrPWEubmV4dCgpKS5kb25lOylrPWsudmFsdWUsZj1lK04oayxnKyspLGgrPU8oayxiLGMsZixkKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1rKXRocm93IGI9XCJcIithLEVycm9yKHooMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWI/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YikpO3JldHVybiBofWZ1bmN0aW9uIFAoYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W10sZD0wO08oYSxlLFwiXCIsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYi5jYWxsKGMsYSxkKyspfSk7cmV0dXJuIGV9XG5mdW5jdGlvbiBRKGEpe2lmKC0xPT09YS5fc3RhdHVzKXt2YXIgYj1hLl9yZXN1bHQ7Yj1iKCk7YS5fc3RhdHVzPTA7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX1pZigxPT09YS5fc3RhdHVzKXJldHVybiBhLl9yZXN1bHQ7dGhyb3cgYS5fcmVzdWx0O312YXIgUj17Y3VycmVudDpudWxsfTtmdW5jdGlvbiBTKCl7dmFyIGE9Ui5jdXJyZW50O2lmKG51bGw9PT1hKXRocm93IEVycm9yKHooMzIxKSk7cmV0dXJuIGF9dmFyIFQ9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6UixSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzp7dHJhbnNpdGlvbjowfSxSZWFjdEN1cnJlbnRPd25lcjpHLElzU29tZVJlbmRlcmVyQWN0aW5nOntjdXJyZW50OiExfSxhc3NpZ246bH07XG5leHBvcnRzLkNoaWxkcmVuPXttYXA6UCxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtQKGEsZnVuY3Rpb24oKXtiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sYyl9LGNvdW50OmZ1bmN0aW9uKGEpe3ZhciBiPTA7UChhLGZ1bmN0aW9uKCl7YisrfSk7cmV0dXJuIGJ9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7cmV0dXJuIFAoYSxmdW5jdGlvbihhKXtyZXR1cm4gYX0pfHxbXX0sb25seTpmdW5jdGlvbihhKXtpZighTChhKSl0aHJvdyBFcnJvcih6KDE0MykpO3JldHVybiBhfX07ZXhwb3J0cy5Db21wb25lbnQ9QztleHBvcnRzLlB1cmVDb21wb25lbnQ9RTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPVQ7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoeigyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxrPWEucmVmLGg9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihrPWIucmVmLGg9Ry5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBnPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGYgaW4gYilILmNhbGwoYixmKSYmIUkuaGFzT3duUHJvcGVydHkoZikmJihlW2ZdPXZvaWQgMD09PWJbZl0mJnZvaWQgMCE9PWc/Z1tmXTpiW2ZdKX12YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxmKXtnPUFycmF5KGYpO2Zvcih2YXIgbT0wO208ZjttKyspZ1ttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWd9cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6ayxwcm9wczplLF9vd25lcjpofX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6cixfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnEsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PUo7ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPUouYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnQscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PUw7XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnYsX3BheWxvYWQ6e19zdGF0dXM6LTEsX3Jlc3VsdDphfSxfaW5pdDpRfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnUsdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNvbnRleHQoYSxiKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixjKX07XG5leHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlUmVkdWNlcihhLGIsYyl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlU3RhdGUoYSl9O2V4cG9ydHMudmVyc2lvbj1cIjE3LjAuMVwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMjAuMVxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgZixnLGgsaztpZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgbD1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBsLm5vdygpfX1lbHNle3ZhciBwPURhdGUscT1wLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHAubm93KCktcX19XG5pZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgdD1udWxsLHU9bnVsbCx3PWZ1bmN0aW9uKCl7aWYobnVsbCE9PXQpdHJ5e3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dCghMCxhKTt0PW51bGx9Y2F0Y2goYil7dGhyb3cgc2V0VGltZW91dCh3LDApLGI7fX07Zj1mdW5jdGlvbihhKXtudWxsIT09dD9zZXRUaW1lb3V0KGYsMCxhKToodD1hLHNldFRpbWVvdXQodywwKSl9O2c9ZnVuY3Rpb24oYSxiKXt1PXNldFRpbWVvdXQoYSxiKX07aD1mdW5jdGlvbigpe2NsZWFyVGltZW91dCh1KX07ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiExfTtrPWV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oKXt9fWVsc2V7dmFyIHg9d2luZG93LnNldFRpbWVvdXQseT13aW5kb3cuY2xlYXJUaW1lb3V0O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSl7dmFyIHo9XG53aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3JlYWN0LXBvbHlmaWxsc1wiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgeiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIil9dmFyIEE9ITEsQj1udWxsLEM9LTEsRD01LEU9MDtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCk+PVxuRX07az1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZSByYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCBzdXBwb3J0ZWRcIik6RD0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07dmFyIEY9bmV3IE1lc3NhZ2VDaGFubmVsLEc9Ri5wb3J0MjtGLnBvcnQxLm9ubWVzc2FnZT1mdW5jdGlvbigpe2lmKG51bGwhPT1CKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0U9YStEO3RyeXtCKCEwLGEpP0cucG9zdE1lc3NhZ2UobnVsbCk6KEE9ITEsQj1udWxsKX1jYXRjaChiKXt0aHJvdyBHLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEE9ITF9O2Y9ZnVuY3Rpb24oYSl7Qj1hO0F8fChBPSEwLEcucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7Qz1cbngoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3koQyk7Qz0tMX19ZnVuY3Rpb24gSChhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxJKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBKKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBLKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPkkobixjKSl2b2lkIDAhPT1yJiYwPkkocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPkkocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEkoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIEw9W10sTT1bXSxOPTEsTz1udWxsLFA9MyxRPSExLFI9ITEsUz0hMTtcbmZ1bmN0aW9uIFQoYSl7Zm9yKHZhciBiPUooTSk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylLKE0pO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpSyhNKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEgoTCxiKTtlbHNlIGJyZWFrO2I9SihNKX19ZnVuY3Rpb24gVShhKXtTPSExO1QoYSk7aWYoIVIpaWYobnVsbCE9PUooTCkpUj0hMCxmKFYpO2Vsc2V7dmFyIGI9SihNKTtudWxsIT09YiYmZyhVLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFYoYSxiKXtSPSExO1MmJihTPSExLGgoKSk7UT0hMDt2YXIgYz1QO3RyeXtUKGIpO2ZvcihPPUooTCk7bnVsbCE9PU8mJighKE8uZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCkpOyl7dmFyIGQ9Ty5jYWxsYmFjaztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7Ty5jYWxsYmFjaz1udWxsO1A9Ty5wcmlvcml0eUxldmVsO3ZhciBlPWQoTy5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP08uY2FsbGJhY2s9ZTpPPT09SihMKSYmSyhMKTtUKGIpfWVsc2UgSyhMKTtPPUooTCl9aWYobnVsbCE9PU8pdmFyIG09ITA7ZWxzZXt2YXIgbj1KKE0pO251bGwhPT1uJiZnKFUsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e089bnVsbCxQPWMsUT0hMX19dmFyIFc9aztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O1xuZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtSfHxRfHwoUj0hMCxmKFYpKX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBQfTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEooTCl9O1xuZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChQKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1QfXZhciBjPVA7UD1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7UD1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9VztleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVA7UD1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7UD1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yz8oYz1jLmRlbGF5LGM9XCJudW1iZXJcIj09PXR5cGVvZiBjJiYwPGM/ZCtjOmQpOmM9ZDtzd2l0Y2goYSl7Y2FzZSAxOnZhciBlPS0xO2JyZWFrO2Nhc2UgMjplPTI1MDticmVhaztjYXNlIDU6ZT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgNDplPTFFNDticmVhaztkZWZhdWx0OmU9NUUzfWU9YytlO2E9e2lkOk4rKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6YyxleHBpcmF0aW9uVGltZTplLHNvcnRJbmRleDotMX07Yz5kPyhhLnNvcnRJbmRleD1jLEgoTSxhKSxudWxsPT09SihMKSYmYT09PUooTSkmJihTP2goKTpTPSEwLGcoVSxjLWQpKSk6KGEuc29ydEluZGV4PWUsSChMLGEpLFJ8fFF8fChSPSEwLGYoVikpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1QO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVA7UD1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtQPWN9fX07XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJib2R5IHtcXHJcXG4gIGNvbG9yOiBibHVlO1xcclxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvYXBwLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLFdBQVc7QUFDYlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJib2R5IHtcXHJcXG4gIGNvbG9yOiBibHVlO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBpc09sZElFID0gZnVuY3Rpb24gaXNPbGRJRSgpIHtcbiAgdmFyIG1lbW87XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSgpIHtcbiAgICBpZiAodHlwZW9mIG1lbW8gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuICAgICAgLy8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuICAgICAgLy8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuICAgICAgLy8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG4gICAgICAvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcbiAgICAgIG1lbW8gPSBCb29sZWFuKHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtbztcbiAgfTtcbn0oKTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uIGdldFRhcmdldCgpIHtcbiAgdmFyIG1lbW8gPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKHRhcmdldCkge1xuICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtb1t0YXJnZXRdO1xuICB9O1xufSgpO1xuXG52YXIgc3R5bGVzSW5Eb20gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRvbS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRvbVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdXG4gICAgfTtcblxuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZXNJbkRvbS5wdXNoKHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogYWRkU3R5bGUob2JqLCBvcHRpb25zKSxcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgdmFyIGF0dHJpYnV0ZXMgPSBvcHRpb25zLmF0dHJpYnV0ZXMgfHwge307XG5cbiAgaWYgKHR5cGVvZiBhdHRyaWJ1dGVzLm5vbmNlID09PSAndW5kZWZpbmVkJykge1xuICAgIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gJ3VuZGVmaW5lZCcgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgICBpZiAobm9uY2UpIHtcbiAgICAgIGF0dHJpYnV0ZXMubm9uY2UgPSBub25jZTtcbiAgICB9XG4gIH1cblxuICBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyaWJ1dGVzW2tleV0pO1xuICB9KTtcblxuICBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgb3B0aW9ucy5pbnNlcnQoc3R5bGUpO1xuICB9IGVsc2Uge1xuICAgIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQob3B0aW9ucy5pbnNlcnQgfHwgJ2hlYWQnKTtcblxuICAgIGlmICghdGFyZ2V0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICAgIH1cblxuICAgIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gIH1cblxuICByZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbnZhciByZXBsYWNlVGV4dCA9IGZ1bmN0aW9uIHJlcGxhY2VUZXh0KCkge1xuICB2YXIgdGV4dFN0b3JlID0gW107XG4gIHJldHVybiBmdW5jdGlvbiByZXBsYWNlKGluZGV4LCByZXBsYWNlbWVudCkge1xuICAgIHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcbiAgICByZXR1cm4gdGV4dFN0b3JlLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG4nKTtcbiAgfTtcbn0oKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyhzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG4gIHZhciBjc3MgPSByZW1vdmUgPyAnJyA6IG9iai5tZWRpYSA/IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIikuY29uY2F0KG9iai5jc3MsIFwifVwiKSA6IG9iai5jc3M7IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG4gICAgdmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG4gICAgaWYgKGNoaWxkTm9kZXNbaW5kZXhdKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfVxuXG4gICAgaWYgKGNoaWxkTm9kZXMubGVuZ3RoKSB7XG4gICAgICBzdHlsZS5pbnNlcnRCZWZvcmUoY3NzTm9kZSwgY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYXBwbHlUb1RhZyhzdHlsZSwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBvYmouY3NzO1xuICB2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChtZWRpYSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZSgnbWVkaWEnLCBtZWRpYSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUucmVtb3ZlQXR0cmlidXRlKCdtZWRpYScpO1xuICB9XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyIHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xuXG5mdW5jdGlvbiBhZGRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlO1xuICB2YXIgdXBkYXRlO1xuICB2YXIgcmVtb3ZlO1xuXG4gIGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuICAgIHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuICAgIHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuICAgIHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUgPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblxuICAgIHJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG4gICAgfTtcbiAgfVxuXG4gIHVwZGF0ZShvYmopO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmUoKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307IC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuICAvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cbiAgaWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09ICdib29sZWFuJykge1xuICAgIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuICB9XG5cbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuZXdMaXN0KSAhPT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRvbVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5Eb21bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5Eb20uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG5cdFx0cmV0dXJuIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0uZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiaW1wb3J0IGFwaSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgICAgICAgaW1wb3J0IGNvbnRlbnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hcHAuY3NzXCI7XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgY29udGVudC5sb2NhbHMgfHwge307IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59IiwiaW1wb3J0IHNldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zZXRQcm90b3R5cGVPZlwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iLCJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvLCBmcm9tKSB7XG4gIGlmIChmcm9tID09PSB1bmRlZmluZWQpIGZyb20gPSAnJztcblxuICB2YXIgdG9QYXJ0cyA9ICh0byAmJiB0by5zcGxpdCgnLycpKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IChmcm9tICYmIGZyb20uc3BsaXQoJy8nKSkgfHwgW107XG5cbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcbiAgdmFyIGlzRnJvbUFicyA9IGZyb20gJiYgaXNBYnNvbHV0ZShmcm9tKTtcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcblxuICBpZiAodG8gJiYgaXNBYnNvbHV0ZSh0bykpIHtcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XG4gIH0gZWxzZSBpZiAodG9QYXJ0cy5sZW5ndGgpIHtcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcbiAgICBmcm9tUGFydHMucG9wKCk7XG4gICAgZnJvbVBhcnRzID0gZnJvbVBhcnRzLmNvbmNhdCh0b1BhcnRzKTtcbiAgfVxuXG4gIGlmICghZnJvbVBhcnRzLmxlbmd0aCkgcmV0dXJuICcvJztcblxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaDtcbiAgaWYgKGZyb21QYXJ0cy5sZW5ndGgpIHtcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xuICB9IGVsc2Uge1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcbiAgfVxuXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgIHZhciBwYXJ0ID0gZnJvbVBhcnRzW2ldO1xuXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcblxuICBpZiAoXG4gICAgbXVzdEVuZEFicyAmJlxuICAgIGZyb21QYXJ0c1swXSAhPT0gJycgJiZcbiAgICAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKVxuICApXG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lO1xuIiwidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICAgIGlmIChjb25kaXRpb24pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaXNQcm9kdWN0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4ICsgXCI6IFwiICsgKG1lc3NhZ2UgfHwgJycpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW52YXJpYW50O1xuIiwiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHJlc29sdmVQYXRobmFtZSBmcm9tICdyZXNvbHZlLXBhdGhuYW1lJztcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoIDogJy8nICsgcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIHBhdGgudG9Mb3dlckNhc2UoKS5pbmRleE9mKHByZWZpeC50b0xvd2VyQ2FzZSgpKSA9PT0gMCAmJiAnLz8jJy5pbmRleE9mKHBhdGguY2hhckF0KHByZWZpeC5sZW5ndGgpKSAhPT0gLTE7XG59XG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSA/IHBhdGguc3Vic3RyKHByZWZpeC5sZW5ndGgpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdChwYXRoLmxlbmd0aCAtIDEpID09PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBwYXRoIHx8ICcvJztcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuICB2YXIgaGFzaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignIycpO1xuXG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG5cbiAgaWYgKHNlYXJjaEluZGV4ICE9PSAtMSkge1xuICAgIHNlYXJjaCA9IHBhdGhuYW1lLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2ggPT09ICc/JyA/ICcnIDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xuICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuICB2YXIgcGF0aCA9IHBhdGhuYW1lIHx8ICcvJztcbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aCArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiBcIj9cIiArIHNlYXJjaDtcbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogXCIjXCIgKyBoYXNoO1xuICByZXR1cm4gcGF0aDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSwgY3VycmVudExvY2F0aW9uKSB7XG4gIHZhciBsb2NhdGlvbjtcblxuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gVHdvLWFyZyBmb3JtOiBwdXNoKHBhdGgsIHN0YXRlKVxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH0gZWxzZSB7XG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxuICAgIGxvY2F0aW9uID0gX2V4dGVuZHMoe30sIHBhdGgpO1xuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5wYXRobmFtZSA9ICcnO1xuXG4gICAgaWYgKGxvY2F0aW9uLnNlYXJjaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5jaGFyQXQoMCkgIT09ICc/JykgbG9jYXRpb24uc2VhcmNoID0gJz8nICsgbG9jYXRpb24uc2VhcmNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5zZWFyY2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAobG9jYXRpb24uaGFzaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLmhhc2guY2hhckF0KDApICE9PSAnIycpIGxvY2F0aW9uLmhhc2ggPSAnIycgKyBsb2NhdGlvbi5oYXNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5oYXNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKHN0YXRlICE9PSB1bmRlZmluZWQgJiYgbG9jYXRpb24uc3RhdGUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbG9jYXRpb24ucGF0aG5hbWUgPSBkZWNvZGVVUkkobG9jYXRpb24ucGF0aG5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBVUklFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IFVSSUVycm9yKCdQYXRobmFtZSBcIicgKyBsb2NhdGlvbi5wYXRobmFtZSArICdcIiBjb3VsZCBub3QgYmUgZGVjb2RlZC4gJyArICdUaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgYW4gaW52YWxpZCBwZXJjZW50LWVuY29kaW5nLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChrZXkpIGxvY2F0aW9uLmtleSA9IGtleTtcblxuICBpZiAoY3VycmVudExvY2F0aW9uKSB7XG4gICAgLy8gUmVzb2x2ZSBpbmNvbXBsZXRlL3JlbGF0aXZlIHBhdGhuYW1lIHJlbGF0aXZlIHRvIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWU7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJykge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSByZXNvbHZlUGF0aG5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gcHJpb3IgbG9jYXRpb24gYW5kIHBhdGhuYW1lIGlzIGVtcHR5LCBzZXQgaXQgdG8gL1xuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gJy8nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcbiAgdmFyIHByb21wdCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByb21wdCA9PSBudWxsLCAnQSBoaXN0b3J5IHN1cHBvcnRzIG9ubHkgb25lIHByb21wdCBhdCBhIHRpbWUnKSA6IHZvaWQgMDtcbiAgICBwcm9tcHQgPSBuZXh0UHJvbXB0O1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocHJvbXB0ID09PSBuZXh0UHJvbXB0KSBwcm9tcHQgPSBudWxsO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXG4gICAgLy8gdGhlIHByZXZpb3VzIG9uZSwgd2UgbWF5IGVuZCB1cCBpbiBhIHdlaXJkIHN0YXRlLiBGaWd1cmUgb3V0IHRoZVxuICAgIC8vIGJlc3Qgd2F5IHRvIGhhbmRsZSB0aGlzLlxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHR5cGVvZiBwcm9tcHQgPT09ICdmdW5jdGlvbicgPyBwcm9tcHQobG9jYXRpb24sIGFjdGlvbikgOiBwcm9tcHQ7XG5cbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAodHlwZW9mIGdldFVzZXJDb25maXJtYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKHJlc3VsdCwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdBIGhpc3RvcnkgbmVlZHMgYSBnZXRVc2VyQ29uZmlybWF0aW9uIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHVzZSBhIHByb21wdCBtZXNzYWdlJykgOiB2b2lkIDA7XG4gICAgICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFJldHVybiBmYWxzZSBmcm9tIGEgdHJhbnNpdGlvbiBob29rIHRvIGNhbmNlbCB0aGUgdHJhbnNpdGlvbi5cbiAgICAgICAgY2FsbGJhY2socmVzdWx0ICE9PSBmYWxzZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcblxuICBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xuICAgIHZhciBpc0FjdGl2ZSA9IHRydWU7XG5cbiAgICBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgIGlmIChpc0FjdGl2ZSkgZm4uYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5vdGlmeUxpc3RlbmVycygpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXIuYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc2V0UHJvbXB0OiBzZXRQcm9tcHQsXG4gICAgY29uZmlybVRyYW5zaXRpb25UbzogY29uZmlybVRyYW5zaXRpb25UbyxcbiAgICBhcHBlbmRMaXN0ZW5lcjogYXBwZW5kTGlzdGVuZXIsXG4gICAgbm90aWZ5TGlzdGVuZXJzOiBub3RpZnlMaXN0ZW5lcnNcbiAgfTtcbn1cblxudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5mdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gd2luZG93Lmhpc3RvcnkgJiYgJ3B1c2hTdGF0ZScgaW4gd2luZG93Lmhpc3Rvcnk7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBicm93c2VyIGZpcmVzIHBvcHN0YXRlIG9uIGhhc2ggY2hhbmdlLlxuICogSUUxMCBhbmQgSUUxMSBkbyBub3QuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0ZpcmVmb3gnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIGdpdmVuIHBvcHN0YXRlIGV2ZW50IGlzIGFuIGV4dHJhbmVvdXMgV2ViS2l0IGV2ZW50LlxuICogQWNjb3VudHMgZm9yIHRoZSBmYWN0IHRoYXQgQ2hyb21lIG9uIGlPUyBmaXJlcyByZWFsIHBvcHN0YXRlIGV2ZW50c1xuICogY29udGFpbmluZyB1bmRlZmluZWQgc3RhdGUgd2hlbiBwcmVzc2luZyB0aGUgYmFjayBidXR0b24uXG4gKi9cblxuZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xuICByZXR1cm4gZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xO1xufVxuXG52YXIgUG9wU3RhdGVFdmVudCA9ICdwb3BzdGF0ZSc7XG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG5mdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZm9yY2VSZWZyZXNoID0gX3Byb3BzLmZvcmNlUmVmcmVzaCxcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXG4gICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTtcblxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2Yga2V5cyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbEtleXMuaW5kZXhPZih0b0xvY2F0aW9uLmtleSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKTtcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQkMSA9ICdoYXNoY2hhbmdlJztcbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG5mdW5jdGlvbiBzdHJpcEhhc2godXJsKSB7XG4gIHZhciBoYXNoSW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/IHVybCA6IHVybC5zbGljZSgwLCBoYXNoSW5kZXgpO1xufVxuXG5mdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn1cblxuZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpICsgJyMnICsgcGF0aCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IF9wcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB2b2lkIDAgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxuICAgICAgZW5jb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5lbmNvZGVQYXRoLFxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsJCQxKGEsIGIpIHtcbiAgICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2g7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gICAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSB7XG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG4gICAgICBpZiAoIWZvcmNlTmV4dFBvcCAmJiBsb2NhdGlvbnNBcmVFcXVhbCQkMShwcmV2TG9jYXRpb24sIGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBBIGhhc2hjaGFuZ2UgZG9lc24ndCBhbHdheXMgPT0gbG9jYXRpb24gY2hhbmdlLlxuXG4gICAgICBpZiAoaWdub3JlUGF0aCA9PT0gY3JlYXRlUGF0aChsb2NhdGlvbikpIHJldHVybjsgLy8gSWdub3JlIHRoaXMgY2hhbmdlOyB3ZSBhbHJlYWR5IHNldFN0YXRlIGluIHB1c2gvcmVwbGFjZS5cblxuICAgICAgaWdub3JlUGF0aCA9IG51bGw7XG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoZnJvbUxvY2F0aW9uKSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH0gLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXG5cblxuICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHZhciBiYXNlVGFnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYmFzZScpO1xuICAgIHZhciBocmVmID0gJyc7XG5cbiAgICBpZiAoYmFzZVRhZyAmJiBiYXNlVGFnLmdldEF0dHJpYnV0ZSgnaHJlZicpKSB7XG4gICAgICBocmVmID0gc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaHJlZiArICcjJyArIGVuY29kZVBhdGgoYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcHVzaEhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgIG5leHRQYXRocy5wdXNoKHBhdGgpO1xuICAgICAgICBhbGxQYXRocyA9IG5leHRQYXRocztcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdIYXNoIGhpc3RvcnkgY2Fubm90IFBVU0ggdGhlIHNhbWUgcGF0aDsgYSBuZXcgZW50cnkgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2snKSA6IHZvaWQgMDtcbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBSRVBMQUNFLCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMuaW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKSA6IHZvaWQgMDtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZnVuY3Rpb24gY2xhbXAobiwgbG93ZXJCb3VuZCwgdXBwZXJCb3VuZCkge1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgbG93ZXJCb3VuZCksIHVwcGVyQm91bmQpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCBzdG9yZXMgbG9jYXRpb25zIGluIG1lbW9yeS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gX3Byb3BzLmluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPT09IHZvaWQgMCA/IFsnLyddIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IF9wcm9wcy5pbml0aWFsSW5kZXgsXG4gICAgICBpbml0aWFsSW5kZXggPSBfcHJvcHMkaW5pdGlhbEluZGV4ID09PSB2b2lkIDAgPyAwIDogX3Byb3BzJGluaXRpYWxJbmRleCxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGNyZWF0ZVBhdGg7XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwcmV2SW5kZXggPSBoaXN0b3J5LmluZGV4O1xuICAgICAgdmFyIG5leHRJbmRleCA9IHByZXZJbmRleCArIDE7XG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG5cbiAgICAgIGlmIChuZXh0RW50cmllcy5sZW5ndGggPiBuZXh0SW5kZXgpIHtcbiAgICAgICAgbmV4dEVudHJpZXMuc3BsaWNlKG5leHRJbmRleCwgbmV4dEVudHJpZXMubGVuZ3RoIC0gbmV4dEluZGV4LCBsb2NhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0RW50cmllcy5wdXNoKGxvY2F0aW9uKTtcbiAgICAgIH1cblxuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBpbmRleDogbmV4dEluZGV4LFxuICAgICAgICBlbnRyaWVzOiBuZXh0RW50cmllc1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgaGlzdG9yeS5lbnRyaWVzW2hpc3RvcnkuaW5kZXhdID0gbG9jYXRpb247XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICB2YXIgbG9jYXRpb24gPSBoaXN0b3J5LmVudHJpZXNbbmV4dEluZGV4XTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKG9rKSB7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgaW5kZXg6IG5leHRJbmRleFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE1pbWljIHRoZSBiZWhhdmlvciBvZiBET00gaGlzdG9yaWVzIGJ5XG4gICAgICAgIC8vIGNhdXNpbmcgYSByZW5kZXIgYWZ0ZXIgYSBjYW5jZWxsZWQgUE9QLlxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNhbkdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gaGlzdG9yeS5pbmRleCArIG47XG4gICAgcmV0dXJuIG5leHRJbmRleCA+PSAwICYmIG5leHRJbmRleCA8IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gIH1cblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGVudHJpZXMubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGVudHJpZXNbaW5kZXhdLFxuICAgIGluZGV4OiBpbmRleCxcbiAgICBlbnRyaWVzOiBlbnRyaWVzLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBjYW5HbzogY2FuR28sXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5leHBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgcGFyc2VQYXRoLCBjcmVhdGVQYXRoIH07XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5cbnZhciBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgPSAxMDczNzQxODIzO1xudmFyIGNvbW1vbmpzR2xvYmFsID0gdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsVGhpcyA6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDogdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWwgOiB7fTtcblxuZnVuY3Rpb24gZ2V0VW5pcXVlSWQoKSB7XG4gIHZhciBrZXkgPSAnX19nbG9iYWxfdW5pcXVlX2lkX18nO1xuICByZXR1cm4gY29tbW9uanNHbG9iYWxba2V5XSA9IChjb21tb25qc0dsb2JhbFtrZXldIHx8IDApICsgMTtcbn1cblxuZnVuY3Rpb24gb2JqZWN0SXMoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50RW1pdHRlcih2YWx1ZSkge1xuICB2YXIgaGFuZGxlcnMgPSBbXTtcbiAgcmV0dXJuIHtcbiAgICBvbjogZnVuY3Rpb24gb24oaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMucHVzaChoYW5kbGVyKTtcbiAgICB9LFxuICAgIG9mZjogZnVuY3Rpb24gb2ZmKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzID0gaGFuZGxlcnMuZmlsdGVyKGZ1bmN0aW9uIChoKSB7XG4gICAgICAgIHJldHVybiBoICE9PSBoYW5kbGVyO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgIGhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIodmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gb25seUNoaWxkKGNoaWxkcmVuKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuWzBdIDogY2hpbGRyZW47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlYWN0Q29udGV4dChkZWZhdWx0VmFsdWUsIGNhbGN1bGF0ZUNoYW5nZWRCaXRzKSB7XG4gIHZhciBfUHJvdmlkZXIkY2hpbGRDb250ZXgsIF9Db25zdW1lciRjb250ZXh0VHlwZTtcblxuICB2YXIgY29udGV4dFByb3AgPSAnX19jcmVhdGUtcmVhY3QtY29udGV4dC0nICsgZ2V0VW5pcXVlSWQoKSArICdfXyc7XG5cbiAgdmFyIFByb3ZpZGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzTG9vc2UoUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XG4gICAgICB2YXIgX3RoaXM7XG5cbiAgICAgIF90aGlzID0gX0NvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpcy5lbWl0dGVyID0gY3JlYXRlRXZlbnRFbWl0dGVyKF90aGlzLnByb3BzLnZhbHVlKTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvID0gUHJvdmlkZXIucHJvdG90eXBlO1xuXG4gICAgX3Byb3RvLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICAgIHZhciBfcmVmO1xuXG4gICAgICByZXR1cm4gX3JlZiA9IHt9LCBfcmVmW2NvbnRleHRQcm9wXSA9IHRoaXMuZW1pdHRlciwgX3JlZjtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgaWYgKHRoaXMucHJvcHMudmFsdWUgIT09IG5leHRQcm9wcy52YWx1ZSkge1xuICAgICAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLnByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgbmV3VmFsdWUgPSBuZXh0UHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBjaGFuZ2VkQml0cztcblxuICAgICAgICBpZiAob2JqZWN0SXMob2xkVmFsdWUsIG5ld1ZhbHVlKSkge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IHR5cGVvZiBjYWxjdWxhdGVDaGFuZ2VkQml0cyA9PT0gJ2Z1bmN0aW9uJyA/IGNhbGN1bGF0ZUNoYW5nZWRCaXRzKG9sZFZhbHVlLCBuZXdWYWx1ZSkgOiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQ7XG5cbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgd2FybmluZygoY2hhbmdlZEJpdHMgJiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQpID09PSBjaGFuZ2VkQml0cywgJ2NhbGN1bGF0ZUNoYW5nZWRCaXRzOiBFeHBlY3RlZCB0aGUgcmV0dXJuIHZhbHVlIHRvIGJlIGEgJyArICczMS1iaXQgaW50ZWdlci4gSW5zdGVhZCByZWNlaXZlZDogJyArIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjaGFuZ2VkQml0cyB8PSAwO1xuXG4gICAgICAgICAgaWYgKGNoYW5nZWRCaXRzICE9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuc2V0KG5leHRQcm9wcy52YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgfTtcblxuICAgIHJldHVybiBQcm92aWRlcjtcbiAgfShDb21wb25lbnQpO1xuXG4gIFByb3ZpZGVyLmNoaWxkQ29udGV4dFR5cGVzID0gKF9Qcm92aWRlciRjaGlsZENvbnRleCA9IHt9LCBfUHJvdmlkZXIkY2hpbGRDb250ZXhbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLCBfUHJvdmlkZXIkY2hpbGRDb250ZXgpO1xuXG4gIHZhciBDb25zdW1lciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbXBvbmVudDIpIHtcbiAgICBfaW5oZXJpdHNMb29zZShDb25zdW1lciwgX0NvbXBvbmVudDIpO1xuXG4gICAgZnVuY3Rpb24gQ29uc3VtZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyO1xuXG4gICAgICBfdGhpczIgPSBfQ29tcG9uZW50Mi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpczIuc3RhdGUgPSB7XG4gICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgfTtcblxuICAgICAgX3RoaXMyLm9uVXBkYXRlID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gX3RoaXMyLm9ic2VydmVkQml0cyB8IDA7XG5cbiAgICAgICAgaWYgKChvYnNlcnZlZEJpdHMgJiBjaGFuZ2VkQml0cykgIT09IDApIHtcbiAgICAgICAgICBfdGhpczIuc2V0U3RhdGUoe1xuICAgICAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBfdGhpczI7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90bzIgPSBDb25zdW1lci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IG5leHRQcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vbih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cblxuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IHRoaXMucHJvcHMub2JzZXJ2ZWRCaXRzO1xuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub2ZmKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8yLmdldFZhbHVlID0gZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5nZXQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIG9ubHlDaGlsZCh0aGlzLnByb3BzLmNoaWxkcmVuKSh0aGlzLnN0YXRlLnZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIENvbnN1bWVyO1xuICB9KENvbXBvbmVudCk7XG5cbiAgQ29uc3VtZXIuY29udGV4dFR5cGVzID0gKF9Db25zdW1lciRjb250ZXh0VHlwZSA9IHt9LCBfQ29uc3VtZXIkY29udGV4dFR5cGVbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlKTtcbiAgcmV0dXJuIHtcbiAgICBQcm92aWRlcjogUHJvdmlkZXIsXG4gICAgQ29uc3VtZXI6IENvbnN1bWVyXG4gIH07XG59XG5cbnZhciBpbmRleCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQgfHwgY3JlYXRlUmVhY3RDb250ZXh0O1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gIHZhciB0YXJnZXQgPSB7fTtcbiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICB2YXIga2V5LCBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0gc291cmNlS2V5c1tpXTtcbiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufSIsImltcG9ydCBjcmVhdGVOYW1lZENvbnRleHQgZnJvbSBcIi4vY3JlYXRlTmFtZUNvbnRleHRcIjtcblxuY29uc3QgaGlzdG9yeUNvbnRleHQgPSAvKiNfX1BVUkVfXyovIGNyZWF0ZU5hbWVkQ29udGV4dChcIlJvdXRlci1IaXN0b3J5XCIpO1xuZXhwb3J0IGRlZmF1bHQgaGlzdG9yeUNvbnRleHQ7XG4iLCIvLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5pbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tIFwibWluaS1jcmVhdGUtcmVhY3QtY29udGV4dFwiO1xuXG5jb25zdCBjcmVhdGVOYW1lZENvbnRleHQgPSBuYW1lID0+IHtcbiAgY29uc3QgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbiAgY29udGV4dC5kaXNwbGF5TmFtZSA9IG5hbWU7XG5cbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVOYW1lZENvbnRleHQ7XG4iLCIvLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5pbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tIFwibWluaS1jcmVhdGUtcmVhY3QtY29udGV4dFwiO1xuXG5jb25zdCBjcmVhdGVOYW1lZENvbnRleHQgPSBuYW1lID0+IHtcbiAgY29uc3QgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbiAgY29udGV4dC5kaXNwbGF5TmFtZSA9IG5hbWU7XG5cbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG5jb25zdCBjb250ZXh0ID0gLyojX19QVVJFX18qLyBjcmVhdGVOYW1lZENvbnRleHQoXCJSb3V0ZXJcIik7XG5leHBvcnQgZGVmYXVsdCBjb250ZXh0O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcInRpbnktd2FybmluZ1wiO1xuXG5pbXBvcnQgSGlzdG9yeUNvbnRleHQgZnJvbSBcIi4vSGlzdG9yeUNvbnRleHQuanNcIjtcbmltcG9ydCBSb3V0ZXJDb250ZXh0IGZyb20gXCIuL1JvdXRlckNvbnRleHQuanNcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cbmNsYXNzIFJvdXRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBjb21wdXRlUm9vdE1hdGNoKHBhdGhuYW1lKSB7XG4gICAgcmV0dXJuIHsgcGF0aDogXCIvXCIsIHVybDogXCIvXCIsIHBhcmFtczoge30sIGlzRXhhY3Q6IHBhdGhuYW1lID09PSBcIi9cIiB9O1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgbG9jYXRpb246IHByb3BzLmhpc3RvcnkubG9jYXRpb25cbiAgICB9O1xuXG4gICAgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxuICAgIC8vIGNoYW5nZXMgaGVyZSBpbiB0aGUgY29uc3RydWN0b3IgaW4gY2FzZSB0aGVyZSBhcmUgYW55IDxSZWRpcmVjdD5zXG4gICAgLy8gb24gdGhlIGluaXRpYWwgcmVuZGVyLiBJZiB0aGVyZSBhcmUsIHRoZXkgd2lsbCByZXBsYWNlL3B1c2ggd2hlblxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XG4gICAgLy8gZ2V0IGEgbmV3IGxvY2F0aW9uIGJlZm9yZSB0aGUgPFJvdXRlcj4gaXMgbW91bnRlZC5cbiAgICB0aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBudWxsO1xuXG4gICAgaWYgKCFwcm9wcy5zdGF0aWNDb250ZXh0KSB7XG4gICAgICB0aGlzLnVubGlzdGVuID0gcHJvcHMuaGlzdG9yeS5saXN0ZW4obG9jYXRpb24gPT4ge1xuICAgICAgICBpZiAodGhpcy5faXNNb3VudGVkKSB7XG4gICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGxvY2F0aW9uIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IGxvY2F0aW9uO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLl9pc01vdW50ZWQgPSB0cnVlO1xuXG4gICAgaWYgKHRoaXMuX3BlbmRpbmdMb2NhdGlvbikge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IGxvY2F0aW9uOiB0aGlzLl9wZW5kaW5nTG9jYXRpb24gfSk7XG4gICAgfVxuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMudW5saXN0ZW4pIHRoaXMudW5saXN0ZW4oKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPFJvdXRlckNvbnRleHQuUHJvdmlkZXJcbiAgICAgICAgdmFsdWU9e3tcbiAgICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgICAgbG9jYXRpb246IHRoaXMuc3RhdGUubG9jYXRpb24sXG4gICAgICAgICAgbWF0Y2g6IFJvdXRlci5jb21wdXRlUm9vdE1hdGNoKHRoaXMuc3RhdGUubG9jYXRpb24ucGF0aG5hbWUpLFxuICAgICAgICAgIHN0YXRpY0NvbnRleHQ6IHRoaXMucHJvcHMuc3RhdGljQ29udGV4dFxuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICA8SGlzdG9yeUNvbnRleHQuUHJvdmlkZXJcbiAgICAgICAgICBjaGlsZHJlbj17dGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBudWxsfVxuICAgICAgICAgIHZhbHVlPXt0aGlzLnByb3BzLmhpc3Rvcnl9XG4gICAgICAgIC8+XG4gICAgICA8L1JvdXRlckNvbnRleHQuUHJvdmlkZXI+XG4gICAgKTtcbiAgfVxufVxuXG5pZiAoX19ERVZfXykge1xuICBSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24ocHJldlByb3BzKSB7XG4gICAgd2FybmluZyhcbiAgICAgIHByZXZQcm9wcy5oaXN0b3J5ID09PSB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIlxuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlcjtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IGNyZWF0ZU1lbW9yeUhpc3RvcnkgYXMgY3JlYXRlSGlzdG9yeSB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwidGlueS13YXJuaW5nXCI7XG5cbmltcG9ydCBSb3V0ZXIgZnJvbSBcIi4vUm91dGVyLmpzXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCBzdG9yZXMgbG9jYXRpb24gaW4gbWVtb3J5LlxuICovXG5jbGFzcyBNZW1vcnlSb3V0ZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBoaXN0b3J5ID0gY3JlYXRlSGlzdG9yeSh0aGlzLnByb3BzKTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIDxSb3V0ZXIgaGlzdG9yeT17dGhpcy5oaXN0b3J5fSBjaGlsZHJlbj17dGhpcy5wcm9wcy5jaGlsZHJlbn0gLz47XG4gIH1cbn1cblxuaWYgKF9fREVWX18pIHtcbiAgTWVtb3J5Um91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBpbml0aWFsRW50cmllczogUHJvcFR5cGVzLmFycmF5LFxuICAgIGluaXRpYWxJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG4gIH07XG5cbiAgTWVtb3J5Um91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uKCkge1xuICAgIHdhcm5pbmcoXG4gICAgICAhdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgXCI8TWVtb3J5Um91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArXG4gICAgICAgIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgTWVtb3J5Um91dGVyIGFzIFJvdXRlciB9YC5cIlxuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1lbW9yeVJvdXRlcjtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuY2xhc3MgTGlmZWN5Y2xlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Nb3VudCkgdGhpcy5wcm9wcy5vbk1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH1cblxuICBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25VcGRhdGUpIHRoaXMucHJvcHMub25VcGRhdGUuY2FsbCh0aGlzLCB0aGlzLCBwcmV2UHJvcHMpO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Vbm1vdW50KSB0aGlzLnByb3BzLm9uVW5tb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IExpZmVjeWNsZTtcbiIsImltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSBcInBhdGgtdG8tcmVnZXhwXCI7XG5cbmNvbnN0IGNhY2hlID0ge307XG5jb25zdCBjYWNoZUxpbWl0ID0gMTAwMDA7XG5sZXQgY2FjaGVDb3VudCA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgsIG9wdGlvbnMpIHtcbiAgY29uc3QgY2FjaGVLZXkgPSBgJHtvcHRpb25zLmVuZH0ke29wdGlvbnMuc3RyaWN0fSR7b3B0aW9ucy5zZW5zaXRpdmV9YDtcbiAgY29uc3QgcGF0aENhY2hlID0gY2FjaGVbY2FjaGVLZXldIHx8IChjYWNoZVtjYWNoZUtleV0gPSB7fSk7XG5cbiAgaWYgKHBhdGhDYWNoZVtwYXRoXSkgcmV0dXJuIHBhdGhDYWNoZVtwYXRoXTtcblxuICBjb25zdCBrZXlzID0gW107XG4gIGNvbnN0IHJlZ2V4cCA9IHBhdGhUb1JlZ2V4cChwYXRoLCBrZXlzLCBvcHRpb25zKTtcbiAgY29uc3QgcmVzdWx0ID0geyByZWdleHAsIGtleXMgfTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBwYXRoQ2FjaGVbcGF0aF0gPSByZXN1bHQ7XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIFVSTCBwYXRobmFtZSB0byBhIHBhdGguXG4gKi9cbmZ1bmN0aW9uIG1hdGNoUGF0aChwYXRobmFtZSwgb3B0aW9ucyA9IHt9KSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiB8fCBBcnJheS5pc0FycmF5KG9wdGlvbnMpKSB7XG4gICAgb3B0aW9ucyA9IHsgcGF0aDogb3B0aW9ucyB9O1xuICB9XG5cbiAgY29uc3QgeyBwYXRoLCBleGFjdCA9IGZhbHNlLCBzdHJpY3QgPSBmYWxzZSwgc2Vuc2l0aXZlID0gZmFsc2UgfSA9IG9wdGlvbnM7XG5cbiAgY29uc3QgcGF0aHMgPSBbXS5jb25jYXQocGF0aCk7XG5cbiAgcmV0dXJuIHBhdGhzLnJlZHVjZSgobWF0Y2hlZCwgcGF0aCkgPT4ge1xuICAgIGlmICghcGF0aCAmJiBwYXRoICE9PSBcIlwiKSByZXR1cm4gbnVsbDtcbiAgICBpZiAobWF0Y2hlZCkgcmV0dXJuIG1hdGNoZWQ7XG5cbiAgICBjb25zdCB7IHJlZ2V4cCwga2V5cyB9ID0gY29tcGlsZVBhdGgocGF0aCwge1xuICAgICAgZW5kOiBleGFjdCxcbiAgICAgIHN0cmljdCxcbiAgICAgIHNlbnNpdGl2ZVxuICAgIH0pO1xuICAgIGNvbnN0IG1hdGNoID0gcmVnZXhwLmV4ZWMocGF0aG5hbWUpO1xuXG4gICAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG5cbiAgICBjb25zdCBbdXJsLCAuLi52YWx1ZXNdID0gbWF0Y2g7XG4gICAgY29uc3QgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XG5cbiAgICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGgsIC8vIHRoZSBwYXRoIHVzZWQgdG8gbWF0Y2hcbiAgICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgICAgaXNFeGFjdCwgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgICBwYXJhbXM6IGtleXMucmVkdWNlKChtZW1vLCBrZXksIGluZGV4KSA9PiB7XG4gICAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgICB9LCB7fSlcbiAgICB9O1xuICB9LCBudWxsKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWF0Y2hQYXRoO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgaXNWYWxpZEVsZW1lbnRUeXBlIH0gZnJvbSBcInJlYWN0LWlzXCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJ0aW55LWludmFyaWFudFwiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcInRpbnktd2FybmluZ1wiO1xuXG5pbXBvcnQgUm91dGVyQ29udGV4dCBmcm9tIFwiLi9Sb3V0ZXJDb250ZXh0LmpzXCI7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gXCIuL21hdGNoUGF0aC5qc1wiO1xuXG5mdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcbn1cblxuZnVuY3Rpb24gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgcGF0aCkge1xuICBjb25zdCB2YWx1ZSA9IGNoaWxkcmVuKHByb3BzKTtcblxuICB3YXJuaW5nKFxuICAgIHZhbHVlICE9PSB1bmRlZmluZWQsXG4gICAgXCJZb3UgcmV0dXJuZWQgYHVuZGVmaW5lZGAgZnJvbSB0aGUgYGNoaWxkcmVuYCBmdW5jdGlvbiBvZiBcIiArXG4gICAgICBgPFJvdXRlJHtwYXRoID8gYCBwYXRoPVwiJHtwYXRofVwiYCA6IFwiXCJ9PiwgYnV0IHlvdSBgICtcbiAgICAgIFwic2hvdWxkIGhhdmUgcmV0dXJuZWQgYSBSZWFjdCBlbGVtZW50IG9yIGBudWxsYFwiXG4gICk7XG5cbiAgcmV0dXJuIHZhbHVlIHx8IG51bGw7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuY2xhc3MgUm91dGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxSb3V0ZXJDb250ZXh0LkNvbnN1bWVyPlxuICAgICAgICB7Y29udGV4dCA9PiB7XG4gICAgICAgICAgaW52YXJpYW50KGNvbnRleHQsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgICAgICAgY29uc3QgbG9jYXRpb24gPSB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQubG9jYXRpb247XG4gICAgICAgICAgY29uc3QgbWF0Y2ggPSB0aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2hcbiAgICAgICAgICAgID8gdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoIC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuICAgICAgICAgICAgOiB0aGlzLnByb3BzLnBhdGhcbiAgICAgICAgICAgID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCB0aGlzLnByb3BzKVxuICAgICAgICAgICAgOiBjb250ZXh0Lm1hdGNoO1xuXG4gICAgICAgICAgY29uc3QgcHJvcHMgPSB7IC4uLmNvbnRleHQsIGxvY2F0aW9uLCBtYXRjaCB9O1xuXG4gICAgICAgICAgbGV0IHsgY2hpbGRyZW4sIGNvbXBvbmVudCwgcmVuZGVyIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgICAgLy8gUHJlYWN0IHVzZXMgYW4gZW1wdHkgYXJyYXkgYXMgY2hpbGRyZW4gYnlcbiAgICAgICAgICAvLyBkZWZhdWx0LCBzbyB1c2UgbnVsbCBpZiB0aGF0J3MgdGhlIGNhc2UuXG4gICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pICYmIGNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgY2hpbGRyZW4gPSBudWxsO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Um91dGVyQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17cHJvcHN9PlxuICAgICAgICAgICAgICB7cHJvcHMubWF0Y2hcbiAgICAgICAgICAgICAgICA/IGNoaWxkcmVuXG4gICAgICAgICAgICAgICAgICA/IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgICAgICAgICAgID8gX19ERVZfX1xuICAgICAgICAgICAgICAgICAgICAgID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgdGhpcy5wcm9wcy5wYXRoKVxuICAgICAgICAgICAgICAgICAgICAgIDogY2hpbGRyZW4ocHJvcHMpXG4gICAgICAgICAgICAgICAgICAgIDogY2hpbGRyZW5cbiAgICAgICAgICAgICAgICAgIDogY29tcG9uZW50XG4gICAgICAgICAgICAgICAgICA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcylcbiAgICAgICAgICAgICAgICAgIDogcmVuZGVyXG4gICAgICAgICAgICAgICAgICA/IHJlbmRlcihwcm9wcylcbiAgICAgICAgICAgICAgICAgIDogbnVsbFxuICAgICAgICAgICAgICAgIDogdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICAgICAgICA/IF9fREVWX19cbiAgICAgICAgICAgICAgICAgID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgdGhpcy5wcm9wcy5wYXRoKVxuICAgICAgICAgICAgICAgICAgOiBjaGlsZHJlbihwcm9wcylcbiAgICAgICAgICAgICAgICA6IG51bGx9XG4gICAgICAgICAgICA8L1JvdXRlckNvbnRleHQuUHJvdmlkZXI+XG4gICAgICAgICAgKTtcbiAgICAgICAgfX1cbiAgICAgIDwvUm91dGVyQ29udGV4dC5Db25zdW1lcj5cbiAgICApO1xuICB9XG59XG5cbmlmIChfX0RFVl9fKSB7XG4gIFJvdXRlLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gICAgY29tcG9uZW50OiAocHJvcHMsIHByb3BOYW1lKSA9PiB7XG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdICYmICFpc1ZhbGlkRWxlbWVudFR5cGUocHJvcHNbcHJvcE5hbWVdKSkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFxuICAgICAgICAgIGBJbnZhbGlkIHByb3AgJ2NvbXBvbmVudCcgc3VwcGxpZWQgdG8gJ1JvdXRlJzogdGhlIHByb3AgaXMgbm90IGEgdmFsaWQgUmVhY3QgY29tcG9uZW50YFxuICAgICAgICApO1xuICAgICAgfVxuICAgIH0sXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHBhdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgICAgUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpXG4gICAgXSksXG4gICAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2xcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbigpIHtcbiAgICB3YXJuaW5nKFxuICAgICAgIShcbiAgICAgICAgdGhpcy5wcm9wcy5jaGlsZHJlbiAmJlxuICAgICAgICAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmXG4gICAgICAgIHRoaXMucHJvcHMuY29tcG9uZW50XG4gICAgICApLFxuICAgICAgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjb21wb25lbnQ+IHdpbGwgYmUgaWdub3JlZFwiXG4gICAgKTtcblxuICAgIHdhcm5pbmcoXG4gICAgICAhKFxuICAgICAgICB0aGlzLnByb3BzLmNoaWxkcmVuICYmXG4gICAgICAgICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiZcbiAgICAgICAgdGhpcy5wcm9wcy5yZW5kZXJcbiAgICAgICksXG4gICAgICBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCJcbiAgICApO1xuXG4gICAgd2FybmluZyhcbiAgICAgICEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLFxuICAgICAgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIlxuICAgICk7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uKHByZXZQcm9wcykge1xuICAgIHdhcm5pbmcoXG4gICAgICAhKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksXG4gICAgICAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLidcbiAgICApO1xuXG4gICAgd2FybmluZyhcbiAgICAgICEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSxcbiAgICAgICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nXG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUm91dGU7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiwgY3JlYXRlUGF0aCB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJ0aW55LWludmFyaWFudFwiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcInRpbnktd2FybmluZ1wiO1xuXG5pbXBvcnQgUm91dGVyIGZyb20gXCIuL1JvdXRlci5qc1wiO1xuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiL1wiID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuZnVuY3Rpb24gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcblxuICByZXR1cm4ge1xuICAgIC4uLmxvY2F0aW9uLFxuICAgIHBhdGhuYW1lOiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpICsgbG9jYXRpb24ucGF0aG5hbWVcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuXG4gIGNvbnN0IGJhc2UgPSBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpO1xuXG4gIGlmIChsb2NhdGlvbi5wYXRobmFtZS5pbmRleE9mKGJhc2UpICE9PSAwKSByZXR1cm4gbG9jYXRpb247XG5cbiAgcmV0dXJuIHtcbiAgICAuLi5sb2NhdGlvbixcbiAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyKGJhc2UubGVuZ3RoKVxuICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IGxvY2F0aW9uIDogY3JlYXRlUGF0aChsb2NhdGlvbik7XG59XG5cbmZ1bmN0aW9uIHN0YXRpY0hhbmRsZXIobWV0aG9kTmFtZSkge1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGludmFyaWFudChmYWxzZSwgXCJZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj5cIiwgbWV0aG9kTmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgdG9wLWxldmVsIEFQSSBmb3IgYSBcInN0YXRpY1wiIDxSb3V0ZXI+LCBzby1jYWxsZWQgYmVjYXVzZSBpdFxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcbiAqIGxvY2F0aW9uIGNoYW5nZXMgaW4gYSBjb250ZXh0IG9iamVjdC4gVXNlZnVsIG1haW5seSBpbiB0ZXN0aW5nIGFuZFxuICogc2VydmVyLXJlbmRlcmluZyBzY2VuYXJpb3MuXG4gKi9cbmNsYXNzIFN0YXRpY1JvdXRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIG5hdmlnYXRlVG8obG9jYXRpb24sIGFjdGlvbikge1xuICAgIGNvbnN0IHsgYmFzZW5hbWUgPSBcIlwiLCBjb250ZXh0ID0ge30gfSA9IHRoaXMucHJvcHM7XG4gICAgY29udGV4dC5hY3Rpb24gPSBhY3Rpb247XG4gICAgY29udGV4dC5sb2NhdGlvbiA9IGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpO1xuICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICB9XG5cbiAgaGFuZGxlUHVzaCA9IGxvY2F0aW9uID0+IHRoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJQVVNIXCIpO1xuICBoYW5kbGVSZXBsYWNlID0gbG9jYXRpb24gPT4gdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlJFUExBQ0VcIik7XG4gIGhhbmRsZUxpc3RlbiA9ICgpID0+IG5vb3A7XG4gIGhhbmRsZUJsb2NrID0gKCkgPT4gbm9vcDtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBiYXNlbmFtZSA9IFwiXCIsIGNvbnRleHQgPSB7fSwgbG9jYXRpb24gPSBcIi9cIiwgLi4ucmVzdCB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IGhpc3RvcnkgPSB7XG4gICAgICBjcmVhdGVIcmVmOiBwYXRoID0+IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSArIGNyZWF0ZVVSTChwYXRoKSksXG4gICAgICBhY3Rpb246IFwiUE9QXCIsXG4gICAgICBsb2NhdGlvbjogc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKSxcbiAgICAgIHB1c2g6IHRoaXMuaGFuZGxlUHVzaCxcbiAgICAgIHJlcGxhY2U6IHRoaXMuaGFuZGxlUmVwbGFjZSxcbiAgICAgIGdvOiBzdGF0aWNIYW5kbGVyKFwiZ29cIiksXG4gICAgICBnb0JhY2s6IHN0YXRpY0hhbmRsZXIoXCJnb0JhY2tcIiksXG4gICAgICBnb0ZvcndhcmQ6IHN0YXRpY0hhbmRsZXIoXCJnb0ZvcndhcmRcIiksXG4gICAgICBsaXN0ZW46IHRoaXMuaGFuZGxlTGlzdGVuLFxuICAgICAgYmxvY2s6IHRoaXMuaGFuZGxlQmxvY2tcbiAgICB9O1xuXG4gICAgcmV0dXJuIDxSb3V0ZXIgey4uLnJlc3R9IGhpc3Rvcnk9e2hpc3Rvcnl9IHN0YXRpY0NvbnRleHQ9e2NvbnRleHR9IC8+O1xuICB9XG59XG5cbmlmIChfX0RFVl9fKSB7XG4gIFN0YXRpY1JvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pXG4gIH07XG5cbiAgU3RhdGljUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uKCkge1xuICAgIHdhcm5pbmcoXG4gICAgICAhdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgXCI8U3RhdGljUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArXG4gICAgICAgIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgU3RhdGljUm91dGVyIGFzIFJvdXRlciB9YC5cIlxuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN0YXRpY1JvdXRlcjtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcInRpbnktaW52YXJpYW50XCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwidGlueS13YXJuaW5nXCI7XG5cbmltcG9ydCBSb3V0ZXJDb250ZXh0IGZyb20gXCIuL1JvdXRlckNvbnRleHQuanNcIjtcbmltcG9ydCBtYXRjaFBhdGggZnJvbSBcIi4vbWF0Y2hQYXRoLmpzXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyB0aGUgZmlyc3QgPFJvdXRlPiB0aGF0IG1hdGNoZXMuXG4gKi9cbmNsYXNzIFN3aXRjaCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPFJvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICAgICAgIHtjb250ZXh0ID0+IHtcbiAgICAgICAgICBpbnZhcmlhbnQoY29udGV4dCwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgICAgICAgY29uc3QgbG9jYXRpb24gPSB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQubG9jYXRpb247XG5cbiAgICAgICAgICBsZXQgZWxlbWVudCwgbWF0Y2g7XG5cbiAgICAgICAgICAvLyBXZSB1c2UgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCBpbnN0ZWFkIG9mIFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoKS5maW5kKClcbiAgICAgICAgICAvLyBoZXJlIGJlY2F1c2UgdG9BcnJheSBhZGRzIGtleXMgdG8gYWxsIGNoaWxkIGVsZW1lbnRzIGFuZCB3ZSBkbyBub3Qgd2FudFxuICAgICAgICAgIC8vIHRvIHRyaWdnZXIgYW4gdW5tb3VudC9yZW1vdW50IGZvciB0d28gPFJvdXRlPnMgdGhhdCByZW5kZXIgdGhlIHNhbWVcbiAgICAgICAgICAvLyBjb21wb25lbnQgYXQgZGlmZmVyZW50IFVSTHMuXG4gICAgICAgICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCh0aGlzLnByb3BzLmNoaWxkcmVuLCBjaGlsZCA9PiB7XG4gICAgICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgICAgICAgZWxlbWVudCA9IGNoaWxkO1xuXG4gICAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjaGlsZC5wcm9wcy5wYXRoIHx8IGNoaWxkLnByb3BzLmZyb207XG5cbiAgICAgICAgICAgICAgbWF0Y2ggPSBwYXRoXG4gICAgICAgICAgICAgICAgPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHsgLi4uY2hpbGQucHJvcHMsIHBhdGggfSlcbiAgICAgICAgICAgICAgICA6IGNvbnRleHQubWF0Y2g7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICByZXR1cm4gbWF0Y2hcbiAgICAgICAgICAgID8gUmVhY3QuY2xvbmVFbGVtZW50KGVsZW1lbnQsIHsgbG9jYXRpb24sIGNvbXB1dGVkTWF0Y2g6IG1hdGNoIH0pXG4gICAgICAgICAgICA6IG51bGw7XG4gICAgICAgIH19XG4gICAgICA8L1JvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICAgKTtcbiAgfVxufVxuXG5pZiAoX19ERVZfXykge1xuICBTd2l0Y2gucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24ocHJldlByb3BzKSB7XG4gICAgd2FybmluZyhcbiAgICAgICEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSxcbiAgICAgICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLidcbiAgICApO1xuXG4gICAgd2FybmluZyhcbiAgICAgICEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSxcbiAgICAgICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJ1xuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN3aXRjaDtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcInRpbnktaW52YXJpYW50XCI7XG5cbmltcG9ydCBDb250ZXh0IGZyb20gXCIuL1JvdXRlckNvbnRleHQuanNcIjtcbmltcG9ydCBIaXN0b3J5Q29udGV4dCBmcm9tIFwiLi9IaXN0b3J5Q29udGV4dC5qc1wiO1xuaW1wb3J0IG1hdGNoUGF0aCBmcm9tIFwiLi9tYXRjaFBhdGguanNcIjtcblxuY29uc3QgdXNlQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQ7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VIaXN0b3J5KCkge1xuICBpZiAoX19ERVZfXykge1xuICAgIGludmFyaWFudChcbiAgICAgIHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIsXG4gICAgICBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VIaXN0b3J5KClcIlxuICAgICk7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChIaXN0b3J5Q29udGV4dCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VMb2NhdGlvbigpIHtcbiAgaWYgKF9fREVWX18pIHtcbiAgICBpbnZhcmlhbnQoXG4gICAgICB0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiLFxuICAgICAgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlTG9jYXRpb24oKVwiXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KENvbnRleHQpLmxvY2F0aW9uO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICBpZiAoX19ERVZfXykge1xuICAgIGludmFyaWFudChcbiAgICAgIHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIsXG4gICAgICBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VQYXJhbXMoKVwiXG4gICAgKTtcbiAgfVxuXG4gIGNvbnN0IG1hdGNoID0gdXNlQ29udGV4dChDb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIG1hdGNoID8gbWF0Y2gucGFyYW1zIDoge307XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VSb3V0ZU1hdGNoKHBhdGgpIHtcbiAgaWYgKF9fREVWX18pIHtcbiAgICBpbnZhcmlhbnQoXG4gICAgICB0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiLFxuICAgICAgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUm91dGVNYXRjaCgpXCJcbiAgICApO1xuICB9XG5cbiAgY29uc3QgbG9jYXRpb24gPSB1c2VMb2NhdGlvbigpO1xuICBjb25zdCBtYXRjaCA9IHVzZUNvbnRleHQoQ29udGV4dCkubWF0Y2g7XG5cbiAgcmV0dXJuIHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHBhdGgpIDogbWF0Y2g7XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwicmVhY3Qtcm91dGVyXCI7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSBhcyBjcmVhdGVIaXN0b3J5IH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ0aW55LXdhcm5pbmdcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuY2xhc3MgQnJvd3NlclJvdXRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KHRoaXMucHJvcHMpO1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gPFJvdXRlciBoaXN0b3J5PXt0aGlzLmhpc3Rvcnl9IGNoaWxkcmVuPXt0aGlzLnByb3BzLmNoaWxkcmVufSAvPjtcbiAgfVxufVxuXG5pZiAoX19ERVZfXykge1xuICBCcm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZm9yY2VSZWZyZXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXJcbiAgfTtcblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uKCkge1xuICAgIHdhcm5pbmcoXG4gICAgICAhdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgK1xuICAgICAgICBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiXG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgQnJvd3NlclJvdXRlcjtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJyZWFjdC1yb3V0ZXJcIjtcbmltcG9ydCB7IGNyZWF0ZUhhc2hIaXN0b3J5IGFzIGNyZWF0ZUhpc3RvcnkgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcInRpbnktd2FybmluZ1wiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyB3aW5kb3cubG9jYXRpb24uaGFzaC5cbiAqL1xuY2xhc3MgSGFzaFJvdXRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KHRoaXMucHJvcHMpO1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gPFJvdXRlciBoaXN0b3J5PXt0aGlzLmhpc3Rvcnl9IGNoaWxkcmVuPXt0aGlzLnByb3BzLmNoaWxkcmVufSAvPjtcbiAgfVxufVxuXG5pZiAoX19ERVZfXykge1xuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbXCJoYXNoYmFuZ1wiLCBcIm5vc2xhc2hcIiwgXCJzbGFzaFwiXSlcbiAgfTtcblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uKCkge1xuICAgIHdhcm5pbmcoXG4gICAgICAhdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgXCI8SGFzaFJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgK1xuICAgICAgICBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEhhc2hSb3V0ZXIgYXMgUm91dGVyIH1gLlwiXG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgSGFzaFJvdXRlcjtcbiIsImltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSBcImhpc3RvcnlcIjtcblxuZXhwb3J0IGNvbnN0IHJlc29sdmVUb0xvY2F0aW9uID0gKHRvLCBjdXJyZW50TG9jYXRpb24pID0+XG4gIHR5cGVvZiB0byA9PT0gXCJmdW5jdGlvblwiID8gdG8oY3VycmVudExvY2F0aW9uKSA6IHRvO1xuXG5leHBvcnQgY29uc3Qgbm9ybWFsaXplVG9Mb2NhdGlvbiA9ICh0bywgY3VycmVudExvY2F0aW9uKSA9PiB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCJcbiAgICA/IGNyZWF0ZUxvY2F0aW9uKHRvLCBudWxsLCBudWxsLCBjdXJyZW50TG9jYXRpb24pXG4gICAgOiB0bztcbn07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBfX1JvdXRlckNvbnRleHQgYXMgUm91dGVyQ29udGV4dCB9IGZyb20gXCJyZWFjdC1yb3V0ZXJcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcInRpbnktaW52YXJpYW50XCI7XG5pbXBvcnQge1xuICByZXNvbHZlVG9Mb2NhdGlvbixcbiAgbm9ybWFsaXplVG9Mb2NhdGlvblxufSBmcm9tIFwiLi91dGlscy9sb2NhdGlvblV0aWxzLmpzXCI7XG5cbi8vIFJlYWN0IDE1IGNvbXBhdFxuY29uc3QgZm9yd2FyZFJlZlNoaW0gPSBDID0+IEM7XG5sZXQgeyBmb3J3YXJkUmVmIH0gPSBSZWFjdDtcbmlmICh0eXBlb2YgZm9yd2FyZFJlZiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICBmb3J3YXJkUmVmID0gZm9yd2FyZFJlZlNoaW07XG59XG5cbmZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59XG5cbmNvbnN0IExpbmtBbmNob3IgPSBmb3J3YXJkUmVmKFxuICAoXG4gICAge1xuICAgICAgaW5uZXJSZWYsIC8vIFRPRE86IGRlcHJlY2F0ZVxuICAgICAgbmF2aWdhdGUsXG4gICAgICBvbkNsaWNrLFxuICAgICAgLi4ucmVzdFxuICAgIH0sXG4gICAgZm9yd2FyZGVkUmVmXG4gICkgPT4ge1xuICAgIGNvbnN0IHsgdGFyZ2V0IH0gPSByZXN0O1xuXG4gICAgbGV0IHByb3BzID0ge1xuICAgICAgLi4ucmVzdCxcbiAgICAgIG9uQ2xpY2s6IGV2ZW50ID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBpZiAob25DbGljaykgb25DbGljayhldmVudCk7XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICB0aHJvdyBleDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcbiAgICAgICAgICAhZXZlbnQuZGVmYXVsdFByZXZlbnRlZCAmJiAvLyBvbkNsaWNrIHByZXZlbnRlZCBkZWZhdWx0XG4gICAgICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmIC8vIGlnbm9yZSBldmVyeXRoaW5nIGJ1dCBsZWZ0IGNsaWNrc1xuICAgICAgICAgICghdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICAgICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgICAgICkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbmF2aWdhdGUoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICAvLyBSZWFjdCAxNSBjb21wYXRcbiAgICBpZiAoZm9yd2FyZFJlZlNoaW0gIT09IGZvcndhcmRSZWYpIHtcbiAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvcHMucmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGpzeC1hMTF5L2FuY2hvci1oYXMtY29udGVudCAqL1xuICAgIHJldHVybiA8YSB7Li4ucHJvcHN9IC8+O1xuICB9XG4pO1xuXG5pZiAoX19ERVZfXykge1xuICBMaW5rQW5jaG9yLmRpc3BsYXlOYW1lID0gXCJMaW5rQW5jaG9yXCI7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyBhIGhpc3RvcnktYXdhcmUgPGE+LlxuICovXG5jb25zdCBMaW5rID0gZm9yd2FyZFJlZihcbiAgKFxuICAgIHtcbiAgICAgIGNvbXBvbmVudCA9IExpbmtBbmNob3IsXG4gICAgICByZXBsYWNlLFxuICAgICAgdG8sXG4gICAgICBpbm5lclJlZiwgLy8gVE9ETzogZGVwcmVjYXRlXG4gICAgICAuLi5yZXN0XG4gICAgfSxcbiAgICBmb3J3YXJkZWRSZWZcbiAgKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxSb3V0ZXJDb250ZXh0LkNvbnN1bWVyPlxuICAgICAgICB7Y29udGV4dCA9PiB7XG4gICAgICAgICAgaW52YXJpYW50KGNvbnRleHQsIFwiWW91IHNob3VsZCBub3QgdXNlIDxMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICAgICAgICBjb25zdCB7IGhpc3RvcnkgfSA9IGNvbnRleHQ7XG5cbiAgICAgICAgICBjb25zdCBsb2NhdGlvbiA9IG5vcm1hbGl6ZVRvTG9jYXRpb24oXG4gICAgICAgICAgICByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksXG4gICAgICAgICAgICBjb250ZXh0LmxvY2F0aW9uXG4gICAgICAgICAgKTtcblxuICAgICAgICAgIGNvbnN0IGhyZWYgPSBsb2NhdGlvbiA/IGhpc3RvcnkuY3JlYXRlSHJlZihsb2NhdGlvbikgOiBcIlwiO1xuICAgICAgICAgIGNvbnN0IHByb3BzID0ge1xuICAgICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICAgIGhyZWYsXG4gICAgICAgICAgICBuYXZpZ2F0ZSgpIHtcbiAgICAgICAgICAgICAgY29uc3QgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XG4gICAgICAgICAgICAgIGNvbnN0IG1ldGhvZCA9IHJlcGxhY2UgPyBoaXN0b3J5LnJlcGxhY2UgOiBoaXN0b3J5LnB1c2g7XG5cbiAgICAgICAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgLy8gUmVhY3QgMTUgY29tcGF0XG4gICAgICAgICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICAgICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XG4gICAgICAgIH19XG4gICAgICA8L1JvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICAgKTtcbiAgfVxuKTtcblxuaWYgKF9fREVWX18pIHtcbiAgY29uc3QgdG9UeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgUHJvcFR5cGVzLnN0cmluZyxcbiAgICBQcm9wVHlwZXMub2JqZWN0LFxuICAgIFByb3BUeXBlcy5mdW5jXG4gIF0pO1xuICBjb25zdCByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgUHJvcFR5cGVzLnN0cmluZyxcbiAgICBQcm9wVHlwZXMuZnVuYyxcbiAgICBQcm9wVHlwZXMuc2hhcGUoeyBjdXJyZW50OiBQcm9wVHlwZXMuYW55IH0pXG4gIF0pO1xuXG4gIExpbmsuZGlzcGxheU5hbWUgPSBcIkxpbmtcIjtcblxuICBMaW5rLnByb3BUeXBlcyA9IHtcbiAgICBpbm5lclJlZjogcmVmVHlwZSxcbiAgICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICByZXBsYWNlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICB0YXJnZXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IHRvVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IExpbms7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBfX1JvdXRlckNvbnRleHQgYXMgUm91dGVyQ29udGV4dCwgbWF0Y2hQYXRoIH0gZnJvbSBcInJlYWN0LXJvdXRlclwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwidGlueS1pbnZhcmlhbnRcIjtcbmltcG9ydCBMaW5rIGZyb20gXCIuL0xpbmsuanNcIjtcbmltcG9ydCB7XG4gIHJlc29sdmVUb0xvY2F0aW9uLFxuICBub3JtYWxpemVUb0xvY2F0aW9uXG59IGZyb20gXCIuL3V0aWxzL2xvY2F0aW9uVXRpbHMuanNcIjtcblxuLy8gUmVhY3QgMTUgY29tcGF0XG5jb25zdCBmb3J3YXJkUmVmU2hpbSA9IEMgPT4gQztcbmxldCB7IGZvcndhcmRSZWYgfSA9IFJlYWN0O1xuaWYgKHR5cGVvZiBmb3J3YXJkUmVmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYgPSBmb3J3YXJkUmVmU2hpbTtcbn1cblxuZnVuY3Rpb24gam9pbkNsYXNzbmFtZXMoLi4uY2xhc3NuYW1lcykge1xuICByZXR1cm4gY2xhc3NuYW1lcy5maWx0ZXIoaSA9PiBpKS5qb2luKFwiIFwiKTtcbn1cblxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuY29uc3QgTmF2TGluayA9IGZvcndhcmRSZWYoXG4gIChcbiAgICB7XG4gICAgICBcImFyaWEtY3VycmVudFwiOiBhcmlhQ3VycmVudCA9IFwicGFnZVwiLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gXCJhY3RpdmVcIixcbiAgICAgIGFjdGl2ZVN0eWxlLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVQcm9wLFxuICAgICAgZXhhY3QsXG4gICAgICBpc0FjdGl2ZTogaXNBY3RpdmVQcm9wLFxuICAgICAgbG9jYXRpb246IGxvY2F0aW9uUHJvcCxcbiAgICAgIHNlbnNpdGl2ZSxcbiAgICAgIHN0cmljdCxcbiAgICAgIHN0eWxlOiBzdHlsZVByb3AsXG4gICAgICB0byxcbiAgICAgIGlubmVyUmVmLCAvLyBUT0RPOiBkZXByZWNhdGVcbiAgICAgIC4uLnJlc3RcbiAgICB9LFxuICAgIGZvcndhcmRlZFJlZlxuICApID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPFJvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICAgICAgIHtjb250ZXh0ID0+IHtcbiAgICAgICAgICBpbnZhcmlhbnQoY29udGV4dCwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPE5hdkxpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKTtcblxuICAgICAgICAgIGNvbnN0IGN1cnJlbnRMb2NhdGlvbiA9IGxvY2F0aW9uUHJvcCB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgICAgICAgIGNvbnN0IHRvTG9jYXRpb24gPSBub3JtYWxpemVUb0xvY2F0aW9uKFxuICAgICAgICAgICAgcmVzb2x2ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbiksXG4gICAgICAgICAgICBjdXJyZW50TG9jYXRpb25cbiAgICAgICAgICApO1xuICAgICAgICAgIGNvbnN0IHsgcGF0aG5hbWU6IHBhdGggfSA9IHRvTG9jYXRpb247XG4gICAgICAgICAgLy8gUmVnZXggdGFrZW4gZnJvbTogaHR0cHM6Ly9naXRodWIuY29tL3BpbGxhcmpzL3BhdGgtdG8tcmVnZXhwL2Jsb2IvbWFzdGVyL2luZGV4LmpzI0wyMDJcbiAgICAgICAgICBjb25zdCBlc2NhcGVkUGF0aCA9XG4gICAgICAgICAgICBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xuXG4gICAgICAgICAgY29uc3QgbWF0Y2ggPSBlc2NhcGVkUGF0aFxuICAgICAgICAgICAgPyBtYXRjaFBhdGgoY3VycmVudExvY2F0aW9uLnBhdGhuYW1lLCB7XG4gICAgICAgICAgICAgICAgcGF0aDogZXNjYXBlZFBhdGgsXG4gICAgICAgICAgICAgICAgZXhhY3QsXG4gICAgICAgICAgICAgICAgc2Vuc2l0aXZlLFxuICAgICAgICAgICAgICAgIHN0cmljdFxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgOiBudWxsO1xuICAgICAgICAgIGNvbnN0IGlzQWN0aXZlID0gISEoaXNBY3RpdmVQcm9wXG4gICAgICAgICAgICA/IGlzQWN0aXZlUHJvcChtYXRjaCwgY3VycmVudExvY2F0aW9uKVxuICAgICAgICAgICAgOiBtYXRjaCk7XG5cbiAgICAgICAgICBjb25zdCBjbGFzc05hbWUgPSBpc0FjdGl2ZVxuICAgICAgICAgICAgPyBqb2luQ2xhc3NuYW1lcyhjbGFzc05hbWVQcm9wLCBhY3RpdmVDbGFzc05hbWUpXG4gICAgICAgICAgICA6IGNsYXNzTmFtZVByb3A7XG4gICAgICAgICAgY29uc3Qgc3R5bGUgPSBpc0FjdGl2ZSA/IHsgLi4uc3R5bGVQcm9wLCAuLi5hY3RpdmVTdHlsZSB9IDogc3R5bGVQcm9wO1xuXG4gICAgICAgICAgY29uc3QgcHJvcHMgPSB7XG4gICAgICAgICAgICBcImFyaWEtY3VycmVudFwiOiAoaXNBY3RpdmUgJiYgYXJpYUN1cnJlbnQpIHx8IG51bGwsXG4gICAgICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgICAgICBzdHlsZSxcbiAgICAgICAgICAgIHRvOiB0b0xvY2F0aW9uLFxuICAgICAgICAgICAgLi4ucmVzdFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICAvLyBSZWFjdCAxNSBjb21wYXRcbiAgICAgICAgICBpZiAoZm9yd2FyZFJlZlNoaW0gIT09IGZvcndhcmRSZWYpIHtcbiAgICAgICAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJvcHMuaW5uZXJSZWYgPSBpbm5lclJlZjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gPExpbmsgey4uLnByb3BzfSAvPjtcbiAgICAgICAgfX1cbiAgICAgIDwvUm91dGVyQ29udGV4dC5Db25zdW1lcj5cbiAgICApO1xuICB9XG4pO1xuXG5pZiAoX19ERVZfXykge1xuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XG5cbiAgY29uc3QgYXJpYUN1cnJlbnRUeXBlID0gUHJvcFR5cGVzLm9uZU9mKFtcbiAgICBcInBhZ2VcIixcbiAgICBcInN0ZXBcIixcbiAgICBcImxvY2F0aW9uXCIsXG4gICAgXCJkYXRlXCIsXG4gICAgXCJ0aW1lXCIsXG4gICAgXCJ0cnVlXCJcbiAgXSk7XG5cbiAgTmF2TGluay5wcm9wVHlwZXMgPSB7XG4gICAgLi4uTGluay5wcm9wVHlwZXMsXG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxuICAgIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgTmF2TGluaztcbiIsIi8qXG5cbkJhc2VkIG9mZiBnbGFtb3IncyBTdHlsZVNoZWV0LCB0aGFua3MgU3VuaWwg4p2k77iPXG5cbmhpZ2ggcGVyZm9ybWFuY2UgU3R5bGVTaGVldCBmb3IgY3NzLWluLWpzIHN5c3RlbXNcblxuLSB1c2VzIG11bHRpcGxlIHN0eWxlIHRhZ3MgYmVoaW5kIHRoZSBzY2VuZXMgZm9yIG1pbGxpb25zIG9mIHJ1bGVzXG4tIHVzZXMgYGluc2VydFJ1bGVgIGZvciBhcHBlbmRpbmcgaW4gcHJvZHVjdGlvbiBmb3IgKm11Y2gqIGZhc3RlciBwZXJmb3JtYW5jZVxuXG4vLyB1c2FnZVxuXG5pbXBvcnQgeyBTdHlsZVNoZWV0IH0gZnJvbSAnQGVtb3Rpb24vc2hlZXQnXG5cbmxldCBzdHlsZVNoZWV0ID0gbmV3IFN0eWxlU2hlZXQoeyBrZXk6ICcnLCBjb250YWluZXI6IGRvY3VtZW50LmhlYWQgfSlcblxuc3R5bGVTaGVldC5pbnNlcnQoJyNib3ggeyBib3JkZXI6IDFweCBzb2xpZCByZWQ7IH0nKVxuLSBhcHBlbmRzIGEgY3NzIHJ1bGUgaW50byB0aGUgc3R5bGVzaGVldFxuXG5zdHlsZVNoZWV0LmZsdXNoKClcbi0gZW1wdGllcyB0aGUgc3R5bGVzaGVldCBvZiBhbGwgaXRzIGNvbnRlbnRzXG5cbiovXG4vLyAkRmxvd0ZpeE1lXG5mdW5jdGlvbiBzaGVldEZvclRhZyh0YWcpIHtcbiAgaWYgKHRhZy5zaGVldCkge1xuICAgIC8vICRGbG93Rml4TWVcbiAgICByZXR1cm4gdGFnLnNoZWV0O1xuICB9IC8vIHRoaXMgd2VpcmRuZXNzIGJyb3VnaHQgdG8geW91IGJ5IGZpcmVmb3hcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBkb2N1bWVudC5zdHlsZVNoZWV0cy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChkb2N1bWVudC5zdHlsZVNoZWV0c1tpXS5vd25lck5vZGUgPT09IHRhZykge1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgcmV0dXJuIGRvY3VtZW50LnN0eWxlU2hlZXRzW2ldO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgdGFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgdGFnLnNldEF0dHJpYnV0ZSgnZGF0YS1lbW90aW9uJywgb3B0aW9ucy5rZXkpO1xuXG4gIGlmIChvcHRpb25zLm5vbmNlICE9PSB1bmRlZmluZWQpIHtcbiAgICB0YWcuc2V0QXR0cmlidXRlKCdub25jZScsIG9wdGlvbnMubm9uY2UpO1xuICB9XG5cbiAgdGFnLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKSk7XG4gIHRhZy5zZXRBdHRyaWJ1dGUoJ2RhdGEtcycsICcnKTtcbiAgcmV0dXJuIHRhZztcbn1cblxudmFyIFN0eWxlU2hlZXQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBTdHlsZVNoZWV0KG9wdGlvbnMpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgdGhpcy5faW5zZXJ0VGFnID0gZnVuY3Rpb24gKHRhZykge1xuICAgICAgdmFyIGJlZm9yZTtcblxuICAgICAgaWYgKF90aGlzLnRhZ3MubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGJlZm9yZSA9IF90aGlzLnByZXBlbmQgPyBfdGhpcy5jb250YWluZXIuZmlyc3RDaGlsZCA6IF90aGlzLmJlZm9yZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJlZm9yZSA9IF90aGlzLnRhZ3NbX3RoaXMudGFncy5sZW5ndGggLSAxXS5uZXh0U2libGluZztcbiAgICAgIH1cblxuICAgICAgX3RoaXMuY29udGFpbmVyLmluc2VydEJlZm9yZSh0YWcsIGJlZm9yZSk7XG5cbiAgICAgIF90aGlzLnRhZ3MucHVzaCh0YWcpO1xuICAgIH07XG5cbiAgICB0aGlzLmlzU3BlZWR5ID0gb3B0aW9ucy5zcGVlZHkgPT09IHVuZGVmaW5lZCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgOiBvcHRpb25zLnNwZWVkeTtcbiAgICB0aGlzLnRhZ3MgPSBbXTtcbiAgICB0aGlzLmN0ciA9IDA7XG4gICAgdGhpcy5ub25jZSA9IG9wdGlvbnMubm9uY2U7IC8vIGtleSBpcyB0aGUgdmFsdWUgb2YgdGhlIGRhdGEtZW1vdGlvbiBhdHRyaWJ1dGUsIGl0J3MgdXNlZCB0byBpZGVudGlmeSBkaWZmZXJlbnQgc2hlZXRzXG5cbiAgICB0aGlzLmtleSA9IG9wdGlvbnMua2V5O1xuICAgIHRoaXMuY29udGFpbmVyID0gb3B0aW9ucy5jb250YWluZXI7XG4gICAgdGhpcy5wcmVwZW5kID0gb3B0aW9ucy5wcmVwZW5kO1xuICAgIHRoaXMuYmVmb3JlID0gbnVsbDtcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTdHlsZVNoZWV0LnByb3RvdHlwZTtcblxuICBfcHJvdG8uaHlkcmF0ZSA9IGZ1bmN0aW9uIGh5ZHJhdGUobm9kZXMpIHtcbiAgICBub2Rlcy5mb3JFYWNoKHRoaXMuX2luc2VydFRhZyk7XG4gIH07XG5cbiAgX3Byb3RvLmluc2VydCA9IGZ1bmN0aW9uIGluc2VydChydWxlKSB7XG4gICAgLy8gdGhlIG1heCBsZW5ndGggaXMgaG93IG1hbnkgcnVsZXMgd2UgaGF2ZSBwZXIgc3R5bGUgdGFnLCBpdCdzIDY1MDAwIGluIHNwZWVkeSBtb2RlXG4gICAgLy8gaXQncyAxIGluIGRldiBiZWNhdXNlIHdlIGluc2VydCBzb3VyY2UgbWFwcyB0aGF0IG1hcCBhIHNpbmdsZSBydWxlIHRvIGEgbG9jYXRpb25cbiAgICAvLyBhbmQgeW91IGNhbiBvbmx5IGhhdmUgb25lIHNvdXJjZSBtYXAgcGVyIHN0eWxlIHRhZ1xuICAgIGlmICh0aGlzLmN0ciAlICh0aGlzLmlzU3BlZWR5ID8gNjUwMDAgOiAxKSA9PT0gMCkge1xuICAgICAgdGhpcy5faW5zZXJ0VGFnKGNyZWF0ZVN0eWxlRWxlbWVudCh0aGlzKSk7XG4gICAgfVxuXG4gICAgdmFyIHRhZyA9IHRoaXMudGFnc1t0aGlzLnRhZ3MubGVuZ3RoIC0gMV07XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIGlzSW1wb3J0UnVsZSA9IHJ1bGUuY2hhckNvZGVBdCgwKSA9PT0gNjQgJiYgcnVsZS5jaGFyQ29kZUF0KDEpID09PSAxMDU7XG5cbiAgICAgIGlmIChpc0ltcG9ydFJ1bGUgJiYgdGhpcy5fYWxyZWFkeUluc2VydGVkT3JkZXJJbnNlbnNpdGl2ZVJ1bGUpIHtcbiAgICAgICAgLy8gdGhpcyB3b3VsZCBvbmx5IGNhdXNlIHByb2JsZW0gaW4gc3BlZWR5IG1vZGVcbiAgICAgICAgLy8gYnV0IHdlIGRvbid0IHdhbnQgZW5hYmxpbmcgc3BlZWR5IHRvIGFmZmVjdCB0aGUgb2JzZXJ2YWJsZSBiZWhhdmlvclxuICAgICAgICAvLyBzbyB3ZSByZXBvcnQgdGhpcyBlcnJvciBhdCBhbGwgdGltZXNcbiAgICAgICAgY29uc29sZS5lcnJvcihcIllvdSdyZSBhdHRlbXB0aW5nIHRvIGluc2VydCB0aGUgZm9sbG93aW5nIHJ1bGU6XFxuXCIgKyBydWxlICsgJ1xcblxcbmBAaW1wb3J0YCBydWxlcyBtdXN0IGJlIGJlZm9yZSBhbGwgb3RoZXIgdHlwZXMgb2YgcnVsZXMgaW4gYSBzdHlsZXNoZWV0IGJ1dCBvdGhlciBydWxlcyBoYXZlIGFscmVhZHkgYmVlbiBpbnNlcnRlZC4gUGxlYXNlIGVuc3VyZSB0aGF0IGBAaW1wb3J0YCBydWxlcyBhcmUgYmVmb3JlIGFsbCBvdGhlciBydWxlcy4nKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuX2FscmVhZHlJbnNlcnRlZE9yZGVySW5zZW5zaXRpdmVSdWxlID0gdGhpcy5fYWxyZWFkeUluc2VydGVkT3JkZXJJbnNlbnNpdGl2ZVJ1bGUgfHwgIWlzSW1wb3J0UnVsZTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5pc1NwZWVkeSkge1xuICAgICAgdmFyIHNoZWV0ID0gc2hlZXRGb3JUYWcodGFnKTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gdGhpcyBpcyB0aGUgdWx0cmFmYXN0IHZlcnNpb24sIHdvcmtzIGFjcm9zcyBicm93c2Vyc1xuICAgICAgICAvLyB0aGUgYmlnIGRyYXdiYWNrIGlzIHRoYXQgdGhlIGNzcyB3b24ndCBiZSBlZGl0YWJsZSBpbiBkZXZ0b29sc1xuICAgICAgICBzaGVldC5pbnNlcnRSdWxlKHJ1bGUsIHNoZWV0LmNzc1J1bGVzLmxlbmd0aCk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICEvOigtbW96LXBsYWNlaG9sZGVyfC1tcy1pbnB1dC1wbGFjZWhvbGRlcnwtbW96LXJlYWQtd3JpdGV8LW1vei1yZWFkLW9ubHkpey8udGVzdChydWxlKSkge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJUaGVyZSB3YXMgYSBwcm9ibGVtIGluc2VydGluZyB0aGUgZm9sbG93aW5nIHJ1bGU6IFxcXCJcIiArIHJ1bGUgKyBcIlxcXCJcIiwgZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGFnLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHJ1bGUpKTtcbiAgICB9XG5cbiAgICB0aGlzLmN0cisrO1xuICB9O1xuXG4gIF9wcm90by5mbHVzaCA9IGZ1bmN0aW9uIGZsdXNoKCkge1xuICAgIC8vICRGbG93Rml4TWVcbiAgICB0aGlzLnRhZ3MuZm9yRWFjaChmdW5jdGlvbiAodGFnKSB7XG4gICAgICByZXR1cm4gdGFnLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGFnKTtcbiAgICB9KTtcbiAgICB0aGlzLnRhZ3MgPSBbXTtcbiAgICB0aGlzLmN0ciA9IDA7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdGhpcy5fYWxyZWFkeUluc2VydGVkT3JkZXJJbnNlbnNpdGl2ZVJ1bGUgPSBmYWxzZTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIFN0eWxlU2hlZXQ7XG59KCk7XG5cbmV4cG9ydCB7IFN0eWxlU2hlZXQgfTtcbiIsIi8qKlxuICogQHBhcmFtIHtudW1iZXJ9XG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCB2YXIgYWJzID0gTWF0aC5hYnNcblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn1cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZXhwb3J0IHZhciBmcm9tID0gU3RyaW5nLmZyb21DaGFyQ29kZVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaGFzaCAodmFsdWUsIGxlbmd0aCkge1xuXHRyZXR1cm4gKCgoKCgoKGxlbmd0aCA8PCAyKSBeIGNoYXJhdCh2YWx1ZSwgMCkpIDw8IDIpIF4gY2hhcmF0KHZhbHVlLCAxKSkgPDwgMikgXiBjaGFyYXQodmFsdWUsIDIpKSA8PCAyKSBeIGNoYXJhdCh2YWx1ZSwgMylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRyaW0gKHZhbHVlKSB7XG5cdHJldHVybiB2YWx1ZS50cmltKClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7UmVnRXhwfSBwYXR0ZXJuXG4gKiBAcmV0dXJuIHtzdHJpbmc/fVxuICovXG5leHBvcnQgZnVuY3Rpb24gbWF0Y2ggKHZhbHVlLCBwYXR0ZXJuKSB7XG5cdHJldHVybiAodmFsdWUgPSBwYXR0ZXJuLmV4ZWModmFsdWUpKSA/IHZhbHVlWzBdIDogdmFsdWVcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7KHN0cmluZ3xSZWdFeHApfSBwYXR0ZXJuXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVwbGFjZW1lbnRcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcGxhY2UgKHZhbHVlLCBwYXR0ZXJuLCByZXBsYWNlbWVudCkge1xuXHRyZXR1cm4gdmFsdWUucmVwbGFjZShwYXR0ZXJuLCByZXBsYWNlbWVudClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5kZXhvZiAodmFsdWUsIHNlYXJjaCkge1xuXHRyZXR1cm4gdmFsdWUuaW5kZXhPZihzZWFyY2gpXG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKiBAcGFyYW0ge251bWJlcn0gaW5kZXhcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNoYXJhdCAodmFsdWUsIGluZGV4KSB7XG5cdHJldHVybiB2YWx1ZS5jaGFyQ29kZUF0KGluZGV4KSB8IDBcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7bnVtYmVyfSBiZWdpblxuICogQHBhcmFtIHtudW1iZXJ9IGVuZFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc3Vic3RyICh2YWx1ZSwgYmVnaW4sIGVuZCkge1xuXHRyZXR1cm4gdmFsdWUuc2xpY2UoYmVnaW4sIGVuZClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0cmxlbiAodmFsdWUpIHtcblx0cmV0dXJuIHZhbHVlLmxlbmd0aFxufVxuXG4vKipcbiAqIEBwYXJhbSB7YW55W119IHZhbHVlXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzaXplb2YgKHZhbHVlKSB7XG5cdHJldHVybiB2YWx1ZS5sZW5ndGhcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEBwYXJhbSB7YW55W119IGFycmF5XG4gKiBAcmV0dXJuIHthbnl9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcHBlbmQgKHZhbHVlLCBhcnJheSkge1xuXHRyZXR1cm4gYXJyYXkucHVzaCh2YWx1ZSksIHZhbHVlXG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmdbXX0gYXJyYXlcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21iaW5lIChhcnJheSwgY2FsbGJhY2spIHtcblx0cmV0dXJuIGFycmF5Lm1hcChjYWxsYmFjaykuam9pbignJylcbn1cbiIsImltcG9ydCB7ZnJvbSwgdHJpbSwgY2hhcmF0LCBzdHJsZW4sIHN1YnN0ciwgYXBwZW5kfSBmcm9tICcuL1V0aWxpdHkuanMnXG5cbmV4cG9ydCB2YXIgbGluZSA9IDFcbmV4cG9ydCB2YXIgY29sdW1uID0gMVxuZXhwb3J0IHZhciBsZW5ndGggPSAwXG5leHBvcnQgdmFyIHBvc2l0aW9uID0gMFxuZXhwb3J0IHZhciBjaGFyYWN0ZXIgPSAwXG5leHBvcnQgdmFyIGNoYXJhY3RlcnMgPSAnJ1xuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICogQHBhcmFtIHtvYmplY3R9IHJvb3RcbiAqIEBwYXJhbSB7b2JqZWN0P30gcGFyZW50XG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICogQHBhcmFtIHtzdHJpbmdbXX0gcHJvcHNcbiAqIEBwYXJhbSB7b2JqZWN0W119IGNoaWxkcmVuXG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub2RlICh2YWx1ZSwgcm9vdCwgcGFyZW50LCB0eXBlLCBwcm9wcywgY2hpbGRyZW4sIGxlbmd0aCkge1xuXHRyZXR1cm4ge3ZhbHVlOiB2YWx1ZSwgcm9vdDogcm9vdCwgcGFyZW50OiBwYXJlbnQsIHR5cGU6IHR5cGUsIHByb3BzOiBwcm9wcywgY2hpbGRyZW46IGNoaWxkcmVuLCBsaW5lOiBsaW5lLCBjb2x1bW46IGNvbHVtbiwgbGVuZ3RoOiBsZW5ndGgsIHJldHVybjogJyd9XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKiBAcGFyYW0ge29iamVjdH0gcm9vdFxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvcHkgKHZhbHVlLCByb290LCB0eXBlKSB7XG5cdHJldHVybiBub2RlKHZhbHVlLCByb290LnJvb3QsIHJvb3QucGFyZW50LCB0eXBlLCByb290LnByb3BzLCByb290LmNoaWxkcmVuLCAwKVxufVxuXG4vKipcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNoYXIgKCkge1xuXHRyZXR1cm4gY2hhcmFjdGVyXG59XG5cbi8qKlxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gbmV4dCAoKSB7XG5cdGNoYXJhY3RlciA9IHBvc2l0aW9uIDwgbGVuZ3RoID8gY2hhcmF0KGNoYXJhY3RlcnMsIHBvc2l0aW9uKyspIDogMFxuXG5cdGlmIChjb2x1bW4rKywgY2hhcmFjdGVyID09PSAxMClcblx0XHRjb2x1bW4gPSAxLCBsaW5lKytcblxuXHRyZXR1cm4gY2hhcmFjdGVyXG59XG5cbi8qKlxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcGVlayAoKSB7XG5cdHJldHVybiBjaGFyYXQoY2hhcmFjdGVycywgcG9zaXRpb24pXG59XG5cbi8qKlxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY2FyZXQgKCkge1xuXHRyZXR1cm4gcG9zaXRpb25cbn1cblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gYmVnaW5cbiAqIEBwYXJhbSB7bnVtYmVyfSBlbmRcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNsaWNlIChiZWdpbiwgZW5kKSB7XG5cdHJldHVybiBzdWJzdHIoY2hhcmFjdGVycywgYmVnaW4sIGVuZClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gdHlwZVxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9rZW4gKHR5cGUpIHtcblx0c3dpdGNoICh0eXBlKSB7XG5cdFx0Ly8gXFwwIFxcdCBcXG4gXFxyIFxccyB3aGl0ZXNwYWNlIHRva2VuXG5cdFx0Y2FzZSAwOiBjYXNlIDk6IGNhc2UgMTA6IGNhc2UgMTM6IGNhc2UgMzI6XG5cdFx0XHRyZXR1cm4gNVxuXHRcdC8vICEgKyAsIC8gPiBAIH4gaXNvbGF0ZSB0b2tlblxuXHRcdGNhc2UgMzM6IGNhc2UgNDM6IGNhc2UgNDQ6IGNhc2UgNDc6IGNhc2UgNjI6IGNhc2UgNjQ6IGNhc2UgMTI2OlxuXHRcdC8vIDsgeyB9IC8gYnJlYWtwb2ludCB0b2tlblxuXHRcdGNhc2UgNTk6IGNhc2UgMTIzOiBjYXNlIDEyNTpcblx0XHRcdHJldHVybiA0XG5cdFx0Ly8gOiBhY2NvbXBhbmllZCB0b2tlblxuXHRcdGNhc2UgNTg6XG5cdFx0XHRyZXR1cm4gM1xuXHRcdC8vIFwiICcgKCBbIG9wZW5pbmcgZGVsaW1pdCB0b2tlblxuXHRcdGNhc2UgMzQ6IGNhc2UgMzk6IGNhc2UgNDA6IGNhc2UgOTE6XG5cdFx0XHRyZXR1cm4gMlxuXHRcdC8vICkgXSBjbG9zaW5nIGRlbGltaXQgdG9rZW5cblx0XHRjYXNlIDQxOiBjYXNlIDkzOlxuXHRcdFx0cmV0dXJuIDFcblx0fVxuXG5cdHJldHVybiAwXG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKiBAcmV0dXJuIHthbnlbXX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFsbG9jICh2YWx1ZSkge1xuXHRyZXR1cm4gbGluZSA9IGNvbHVtbiA9IDEsIGxlbmd0aCA9IHN0cmxlbihjaGFyYWN0ZXJzID0gdmFsdWUpLCBwb3NpdGlvbiA9IDAsIFtdXG59XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IHZhbHVlXG4gKiBAcmV0dXJuIHthbnl9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWFsbG9jICh2YWx1ZSkge1xuXHRyZXR1cm4gY2hhcmFjdGVycyA9ICcnLCB2YWx1ZVxufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSB0eXBlXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWxpbWl0ICh0eXBlKSB7XG5cdHJldHVybiB0cmltKHNsaWNlKHBvc2l0aW9uIC0gMSwgZGVsaW1pdGVyKHR5cGUgPT09IDkxID8gdHlwZSArIDIgOiB0eXBlID09PSA0MCA/IHR5cGUgKyAxIDogdHlwZSkpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICogQHJldHVybiB7c3RyaW5nW119XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b2tlbml6ZSAodmFsdWUpIHtcblx0cmV0dXJuIGRlYWxsb2ModG9rZW5pemVyKGFsbG9jKHZhbHVlKSkpXG59XG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IHR5cGVcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdoaXRlc3BhY2UgKHR5cGUpIHtcblx0d2hpbGUgKGNoYXJhY3RlciA9IHBlZWsoKSlcblx0XHRpZiAoY2hhcmFjdGVyIDwgMzMpXG5cdFx0XHRuZXh0KClcblx0XHRlbHNlXG5cdFx0XHRicmVha1xuXG5cdHJldHVybiB0b2tlbih0eXBlKSA+IDIgfHwgdG9rZW4oY2hhcmFjdGVyKSA+IDMgPyAnJyA6ICcgJ1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nW119IGNoaWxkcmVuXG4gKiBAcmV0dXJuIHtzdHJpbmdbXX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRva2VuaXplciAoY2hpbGRyZW4pIHtcblx0d2hpbGUgKG5leHQoKSlcblx0XHRzd2l0Y2ggKHRva2VuKGNoYXJhY3RlcikpIHtcblx0XHRcdGNhc2UgMDogYXBwZW5kKGlkZW50aWZpZXIocG9zaXRpb24gLSAxKSwgY2hpbGRyZW4pXG5cdFx0XHRcdGJyZWFrXG5cdFx0XHRjYXNlIDI6IGFwcGVuZChkZWxpbWl0KGNoYXJhY3RlciksIGNoaWxkcmVuKVxuXHRcdFx0XHRicmVha1xuXHRcdFx0ZGVmYXVsdDogYXBwZW5kKGZyb20oY2hhcmFjdGVyKSwgY2hpbGRyZW4pXG5cdFx0fVxuXG5cdHJldHVybiBjaGlsZHJlblxufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSB0eXBlXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWxpbWl0ZXIgKHR5cGUpIHtcblx0d2hpbGUgKG5leHQoKSlcblx0XHRzd2l0Y2ggKGNoYXJhY3Rlcikge1xuXHRcdFx0Ly8gXSApIFwiICdcblx0XHRcdGNhc2UgdHlwZTpcblx0XHRcdFx0cmV0dXJuIHBvc2l0aW9uXG5cdFx0XHQvLyBcIiAnXG5cdFx0XHRjYXNlIDM0OiBjYXNlIDM5OlxuXHRcdFx0XHRyZXR1cm4gZGVsaW1pdGVyKHR5cGUgPT09IDM0IHx8IHR5cGUgPT09IDM5ID8gdHlwZSA6IGNoYXJhY3Rlcilcblx0XHRcdC8vIChcblx0XHRcdGNhc2UgNDA6XG5cdFx0XHRcdGlmICh0eXBlID09PSA0MSlcblx0XHRcdFx0XHRkZWxpbWl0ZXIodHlwZSlcblx0XHRcdFx0YnJlYWtcblx0XHRcdC8vIFxcXG5cdFx0XHRjYXNlIDkyOlxuXHRcdFx0XHRuZXh0KClcblx0XHRcdFx0YnJlYWtcblx0XHR9XG5cblx0cmV0dXJuIHBvc2l0aW9uXG59XG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IHR5cGVcbiAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tbWVudGVyICh0eXBlLCBpbmRleCkge1xuXHR3aGlsZSAobmV4dCgpKVxuXHRcdC8vIC8vXG5cdFx0aWYgKHR5cGUgKyBjaGFyYWN0ZXIgPT09IDQ3ICsgMTApXG5cdFx0XHRicmVha1xuXHRcdC8vIC8qXG5cdFx0ZWxzZSBpZiAodHlwZSArIGNoYXJhY3RlciA9PT0gNDIgKyA0MiAmJiBwZWVrKCkgPT09IDQ3KVxuXHRcdFx0YnJlYWtcblxuXHRyZXR1cm4gJy8qJyArIHNsaWNlKGluZGV4LCBwb3NpdGlvbiAtIDEpICsgJyonICsgZnJvbSh0eXBlID09PSA0NyA/IHR5cGUgOiBuZXh0KCkpXG59XG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IGluZGV4XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpZGVudGlmaWVyIChpbmRleCkge1xuXHR3aGlsZSAoIXRva2VuKHBlZWsoKSkpXG5cdFx0bmV4dCgpXG5cblx0cmV0dXJuIHNsaWNlKGluZGV4LCBwb3NpdGlvbilcbn1cbiIsImV4cG9ydCB2YXIgTVMgPSAnLW1zLSdcbmV4cG9ydCB2YXIgTU9aID0gJy1tb3otJ1xuZXhwb3J0IHZhciBXRUJLSVQgPSAnLXdlYmtpdC0nXG5cbmV4cG9ydCB2YXIgQ09NTUVOVCA9ICdjb21tJ1xuZXhwb3J0IHZhciBSVUxFU0VUID0gJ3J1bGUnXG5leHBvcnQgdmFyIERFQ0xBUkFUSU9OID0gJ2RlY2wnXG5cbmV4cG9ydCB2YXIgUEFHRSA9ICdAcGFnZSdcbmV4cG9ydCB2YXIgTUVESUEgPSAnQG1lZGlhJ1xuZXhwb3J0IHZhciBJTVBPUlQgPSAnQGltcG9ydCdcbmV4cG9ydCB2YXIgQ0hBUlNFVCA9ICdAY2hhcnNldCdcbmV4cG9ydCB2YXIgVklFV1BPUlQgPSAnQHZpZXdwb3J0J1xuZXhwb3J0IHZhciBTVVBQT1JUUyA9ICdAc3VwcG9ydHMnXG5leHBvcnQgdmFyIERPQ1VNRU5UID0gJ0Bkb2N1bWVudCdcbmV4cG9ydCB2YXIgTkFNRVNQQUNFID0gJ0BuYW1lc3BhY2UnXG5leHBvcnQgdmFyIEtFWUZSQU1FUyA9ICdAa2V5ZnJhbWVzJ1xuZXhwb3J0IHZhciBGT05UX0ZBQ0UgPSAnQGZvbnQtZmFjZSdcbmV4cG9ydCB2YXIgQ09VTlRFUl9TVFlMRSA9ICdAY291bnRlci1zdHlsZSdcbmV4cG9ydCB2YXIgRk9OVF9GRUFUVVJFX1ZBTFVFUyA9ICdAZm9udC1mZWF0dXJlLXZhbHVlcydcbiIsImltcG9ydCB7SU1QT1JULCBDT01NRU5ULCBSVUxFU0VULCBERUNMQVJBVElPTn0gZnJvbSAnLi9FbnVtLmpzJ1xuaW1wb3J0IHtzdHJsZW4sIHNpemVvZn0gZnJvbSAnLi9VdGlsaXR5LmpzJ1xuXG4vKipcbiAqIEBwYXJhbSB7b2JqZWN0W119IGNoaWxkcmVuXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplIChjaGlsZHJlbiwgY2FsbGJhY2spIHtcblx0dmFyIG91dHB1dCA9ICcnXG5cdHZhciBsZW5ndGggPSBzaXplb2YoY2hpbGRyZW4pXG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKylcblx0XHRvdXRwdXQgKz0gY2FsbGJhY2soY2hpbGRyZW5baV0sIGksIGNoaWxkcmVuLCBjYWxsYmFjaykgfHwgJydcblxuXHRyZXR1cm4gb3V0cHV0XG59XG5cbi8qKlxuICogQHBhcmFtIHtvYmplY3R9IGVsZW1lbnRcbiAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxuICogQHBhcmFtIHtvYmplY3RbXX0gY2hpbGRyZW5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHJpbmdpZnkgKGVsZW1lbnQsIGluZGV4LCBjaGlsZHJlbiwgY2FsbGJhY2spIHtcblx0c3dpdGNoIChlbGVtZW50LnR5cGUpIHtcblx0XHRjYXNlIElNUE9SVDogY2FzZSBERUNMQVJBVElPTjogcmV0dXJuIGVsZW1lbnQucmV0dXJuID0gZWxlbWVudC5yZXR1cm4gfHwgZWxlbWVudC52YWx1ZVxuXHRcdGNhc2UgQ09NTUVOVDogcmV0dXJuICcnXG5cdFx0Y2FzZSBSVUxFU0VUOiBlbGVtZW50LnZhbHVlID0gZWxlbWVudC5wcm9wcy5qb2luKCcsJylcblx0fVxuXG5cdHJldHVybiBzdHJsZW4oY2hpbGRyZW4gPSBzZXJpYWxpemUoZWxlbWVudC5jaGlsZHJlbiwgY2FsbGJhY2spKSA/IGVsZW1lbnQucmV0dXJuID0gZWxlbWVudC52YWx1ZSArICd7JyArIGNoaWxkcmVuICsgJ30nIDogJydcbn1cbiIsImltcG9ydCB7TVMsIE1PWiwgV0VCS0lUfSBmcm9tICcuL0VudW0uanMnXG5pbXBvcnQge2hhc2gsIGNoYXJhdCwgc3RybGVuLCBpbmRleG9mLCByZXBsYWNlfSBmcm9tICcuL1V0aWxpdHkuanMnXG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcmVmaXggKHZhbHVlLCBsZW5ndGgpIHtcblx0c3dpdGNoIChoYXNoKHZhbHVlLCBsZW5ndGgpKSB7XG5cdFx0Ly8gYW5pbWF0aW9uLCBhbmltYXRpb24tKGRlbGF5fGRpcmVjdGlvbnxkdXJhdGlvbnxmaWxsLW1vZGV8aXRlcmF0aW9uLWNvdW50fG5hbWV8cGxheS1zdGF0ZXx0aW1pbmctZnVuY3Rpb24pXG5cdFx0Y2FzZSA1NzM3OiBjYXNlIDQyMDE6IGNhc2UgMzE3NzogY2FzZSAzNDMzOiBjYXNlIDE2NDE6IGNhc2UgNDQ1NzogY2FzZSAyOTIxOlxuXHRcdC8vIHRleHQtZGVjb3JhdGlvbiwgZmlsdGVyLCBjbGlwLXBhdGgsIGJhY2tmYWNlLXZpc2liaWxpdHksIGNvbHVtbiwgYm94LWRlY29yYXRpb24tYnJlYWtcblx0XHRjYXNlIDU1NzI6IGNhc2UgNjM1NjogY2FzZSA1ODQ0OiBjYXNlIDMxOTE6IGNhc2UgNjY0NTogY2FzZSAzMDA1OlxuXHRcdC8vIG1hc2ssIG1hc2staW1hZ2UsIG1hc2stKG1vZGV8Y2xpcHxzaXplKSwgbWFzay0ocmVwZWF0fG9yaWdpbiksIG1hc2stcG9zaXRpb24sIG1hc2stY29tcG9zaXRlLFxuXHRcdGNhc2UgNjM5MTogY2FzZSA1ODc5OiBjYXNlIDU2MjM6IGNhc2UgNjEzNTogY2FzZSA0NTk5OiBjYXNlIDQ4NTU6XG5cdFx0Ly8gYmFja2dyb3VuZC1jbGlwLCBjb2x1bW5zLCBjb2x1bW4tKGNvdW50fGZpbGx8Z2FwfHJ1bGV8cnVsZS1jb2xvcnxydWxlLXN0eWxlfHJ1bGUtd2lkdGh8c3Bhbnx3aWR0aClcblx0XHRjYXNlIDQyMTU6IGNhc2UgNjM4OTogY2FzZSA1MTA5OiBjYXNlIDUzNjU6IGNhc2UgNTYyMTogY2FzZSAzODI5OlxuXHRcdFx0cmV0dXJuIFdFQktJVCArIHZhbHVlICsgdmFsdWVcblx0XHQvLyBhcHBlYXJhbmNlLCB1c2VyLXNlbGVjdCwgdHJhbnNmb3JtLCBoeXBoZW5zLCB0ZXh0LXNpemUtYWRqdXN0XG5cdFx0Y2FzZSA1MzQ5OiBjYXNlIDQyNDY6IGNhc2UgNDgxMDogY2FzZSA2OTY4OiBjYXNlIDI3NTY6XG5cdFx0XHRyZXR1cm4gV0VCS0lUICsgdmFsdWUgKyBNT1ogKyB2YWx1ZSArIE1TICsgdmFsdWUgKyB2YWx1ZVxuXHRcdC8vIGZsZXgsIGZsZXgtZGlyZWN0aW9uXG5cdFx0Y2FzZSA2ODI4OiBjYXNlIDQyNjg6XG5cdFx0XHRyZXR1cm4gV0VCS0lUICsgdmFsdWUgKyBNUyArIHZhbHVlICsgdmFsdWVcblx0XHQvLyBvcmRlclxuXHRcdGNhc2UgNjE2NTpcblx0XHRcdHJldHVybiBXRUJLSVQgKyB2YWx1ZSArIE1TICsgJ2ZsZXgtJyArIHZhbHVlICsgdmFsdWVcblx0XHQvLyBhbGlnbi1pdGVtc1xuXHRcdGNhc2UgNTE4Nzpcblx0XHRcdHJldHVybiBXRUJLSVQgKyB2YWx1ZSArIHJlcGxhY2UodmFsdWUsIC8oXFx3KykuKyg6W15dKykvLCBXRUJLSVQgKyAnYm94LSQxJDInICsgTVMgKyAnZmxleC0kMSQyJykgKyB2YWx1ZVxuXHRcdC8vIGFsaWduLXNlbGZcblx0XHRjYXNlIDU0NDM6XG5cdFx0XHRyZXR1cm4gV0VCS0lUICsgdmFsdWUgKyBNUyArICdmbGV4LWl0ZW0tJyArIHJlcGxhY2UodmFsdWUsIC9mbGV4LXwtc2VsZi8sICcnKSArIHZhbHVlXG5cdFx0Ly8gYWxpZ24tY29udGVudFxuXHRcdGNhc2UgNDY3NTpcblx0XHRcdHJldHVybiBXRUJLSVQgKyB2YWx1ZSArIE1TICsgJ2ZsZXgtbGluZS1wYWNrJyArIHJlcGxhY2UodmFsdWUsIC9hbGlnbi1jb250ZW50fGZsZXgtfC1zZWxmLywgJycpICsgdmFsdWVcblx0XHQvLyBmbGV4LXNocmlua1xuXHRcdGNhc2UgNTU0ODpcblx0XHRcdHJldHVybiBXRUJLSVQgKyB2YWx1ZSArIE1TICsgcmVwbGFjZSh2YWx1ZSwgJ3NocmluaycsICduZWdhdGl2ZScpICsgdmFsdWVcblx0XHQvLyBmbGV4LWJhc2lzXG5cdFx0Y2FzZSA1MjkyOlxuXHRcdFx0cmV0dXJuIFdFQktJVCArIHZhbHVlICsgTVMgKyByZXBsYWNlKHZhbHVlLCAnYmFzaXMnLCAncHJlZmVycmVkLXNpemUnKSArIHZhbHVlXG5cdFx0Ly8gZmxleC1ncm93XG5cdFx0Y2FzZSA2MDYwOlxuXHRcdFx0cmV0dXJuIFdFQktJVCArICdib3gtJyArIHJlcGxhY2UodmFsdWUsICctZ3JvdycsICcnKSArIFdFQktJVCArIHZhbHVlICsgTVMgKyByZXBsYWNlKHZhbHVlLCAnZ3JvdycsICdwb3NpdGl2ZScpICsgdmFsdWVcblx0XHQvLyB0cmFuc2l0aW9uXG5cdFx0Y2FzZSA0NTU0OlxuXHRcdFx0cmV0dXJuIFdFQktJVCArIHJlcGxhY2UodmFsdWUsIC8oW14tXSkodHJhbnNmb3JtKS9nLCAnJDEnICsgV0VCS0lUICsgJyQyJykgKyB2YWx1ZVxuXHRcdC8vIGN1cnNvclxuXHRcdGNhc2UgNjE4Nzpcblx0XHRcdHJldHVybiByZXBsYWNlKHJlcGxhY2UocmVwbGFjZSh2YWx1ZSwgLyh6b29tLXxncmFiKS8sIFdFQktJVCArICckMScpLCAvKGltYWdlLXNldCkvLCBXRUJLSVQgKyAnJDEnKSwgdmFsdWUsICcnKSArIHZhbHVlXG5cdFx0Ly8gYmFja2dyb3VuZCwgYmFja2dyb3VuZC1pbWFnZVxuXHRcdGNhc2UgNTQ5NTogY2FzZSAzOTU5OlxuXHRcdFx0cmV0dXJuIHJlcGxhY2UodmFsdWUsIC8oaW1hZ2Utc2V0XFwoW15dKikvLCBXRUJLSVQgKyAnJDEnICsgJyRgJDEnKVxuXHRcdC8vIGp1c3RpZnktY29udGVudFxuXHRcdGNhc2UgNDk2ODpcblx0XHRcdHJldHVybiByZXBsYWNlKHJlcGxhY2UodmFsdWUsIC8oLis6KShmbGV4LSk/KC4qKS8sIFdFQktJVCArICdib3gtcGFjazokMycgKyBNUyArICdmbGV4LXBhY2s6JDMnKSwgL3MuKy1iW147XSsvLCAnanVzdGlmeScpICsgV0VCS0lUICsgdmFsdWUgKyB2YWx1ZVxuXHRcdC8vIChtYXJnaW58cGFkZGluZyktaW5saW5lLShzdGFydHxlbmQpXG5cdFx0Y2FzZSA0MDk1OiBjYXNlIDM1ODM6IGNhc2UgNDA2ODogY2FzZSAyNTMyOlxuXHRcdFx0cmV0dXJuIHJlcGxhY2UodmFsdWUsIC8oLispLWlubGluZSguKykvLCBXRUJLSVQgKyAnJDEkMicpICsgdmFsdWVcblx0XHQvLyAobWlufG1heCk/KHdpZHRofGhlaWdodHxpbmxpbmUtc2l6ZXxibG9jay1zaXplKVxuXHRcdGNhc2UgODExNjogY2FzZSA3MDU5OiBjYXNlIDU3NTM6IGNhc2UgNTUzNTpcblx0XHRjYXNlIDU0NDU6IGNhc2UgNTcwMTogY2FzZSA0OTMzOiBjYXNlIDQ2Nzc6XG5cdFx0Y2FzZSA1NTMzOiBjYXNlIDU3ODk6IGNhc2UgNTAyMTogY2FzZSA0NzY1OlxuXHRcdFx0Ly8gc3RyZXRjaCwgbWF4LWNvbnRlbnQsIG1pbi1jb250ZW50LCBmaWxsLWF2YWlsYWJsZVxuXHRcdFx0aWYgKHN0cmxlbih2YWx1ZSkgLSAxIC0gbGVuZ3RoID4gNilcblx0XHRcdFx0c3dpdGNoIChjaGFyYXQodmFsdWUsIGxlbmd0aCArIDEpKSB7XG5cdFx0XHRcdFx0Ly8gKGYpaWxsLWF2YWlsYWJsZSwgKGYpaXQtY29udGVudFxuXHRcdFx0XHRcdGNhc2UgMTAyOiBsZW5ndGggPSBjaGFyYXQodmFsdWUsIGxlbmd0aCArIDMpXG5cdFx0XHRcdFx0Ly8gKG0pYXgtY29udGVudCwgKG0paW4tY29udGVudFxuXHRcdFx0XHRcdGNhc2UgMTA5OlxuXHRcdFx0XHRcdFx0cmV0dXJuIHJlcGxhY2UodmFsdWUsIC8oLis6KSguKyktKFteXSspLywgJyQxJyArIFdFQktJVCArICckMi0kMycgKyAnJDEnICsgTU9aICsgKGxlbmd0aCA9PSAxMDggPyAnJDMnIDogJyQyLSQzJykpICsgdmFsdWVcblx0XHRcdFx0XHQvLyAocyl0cmV0Y2hcblx0XHRcdFx0XHRjYXNlIDExNTpcblx0XHRcdFx0XHRcdHJldHVybiB+aW5kZXhvZih2YWx1ZSwgJ3N0cmV0Y2gnKSA/IHByZWZpeChyZXBsYWNlKHZhbHVlLCAnc3RyZXRjaCcsICdmaWxsLWF2YWlsYWJsZScpLCBsZW5ndGgpICsgdmFsdWUgOiB2YWx1ZVxuXHRcdFx0XHR9XG5cdFx0XHRicmVha1xuXHRcdC8vIHBvc2l0aW9uOiBzdGlja3lcblx0XHRjYXNlIDQ5NDk6XG5cdFx0XHQvLyAocyl0aWNreT9cblx0XHRcdGlmIChjaGFyYXQodmFsdWUsIGxlbmd0aCArIDEpICE9PSAxMTUpXG5cdFx0XHRcdGJyZWFrXG5cdFx0Ly8gZGlzcGxheTogKGZsZXh8aW5saW5lLWZsZXh8aW5saW5lLWJveClcblx0XHRjYXNlIDY0NDQ6XG5cdFx0XHRzd2l0Y2ggKGNoYXJhdCh2YWx1ZSwgc3RybGVuKHZhbHVlKSAtIDMgLSAofmluZGV4b2YodmFsdWUsICchaW1wb3J0YW50JykgJiYgMTApKSkge1xuXHRcdFx0XHQvLyBzdGljKGspeSwgaW5saW5lLWIobyl4XG5cdFx0XHRcdGNhc2UgMTA3OiBjYXNlIDExMTpcblx0XHRcdFx0XHRyZXR1cm4gcmVwbGFjZSh2YWx1ZSwgdmFsdWUsIFdFQktJVCArIHZhbHVlKSArIHZhbHVlXG5cdFx0XHRcdC8vIChpbmxpbmUtKT9mbChlKXhcblx0XHRcdFx0Y2FzZSAxMDE6XG5cdFx0XHRcdFx0cmV0dXJuIHJlcGxhY2UodmFsdWUsIC8oLis6KShbXjshXSspKDt8IS4rKT8vLCAnJDEnICsgV0VCS0lUICsgKGNoYXJhdCh2YWx1ZSwgMTQpID09PSA0NSA/ICdpbmxpbmUtJyA6ICcnKSArICdib3gkMycgKyAnJDEnICsgV0VCS0lUICsgJyQyJDMnICsgJyQxJyArIE1TICsgJyQyYm94JDMnKSArIHZhbHVlXG5cdFx0XHR9XG5cdFx0XHRicmVha1xuXHRcdC8vIHdyaXRpbmctbW9kZVxuXHRcdGNhc2UgNTkzNjpcblx0XHRcdHN3aXRjaCAoY2hhcmF0KHZhbHVlLCBsZW5ndGggKyAxMSkpIHtcblx0XHRcdFx0Ly8gdmVydGljYWwtbChyKVxuXHRcdFx0XHRjYXNlIDExNDpcblx0XHRcdFx0XHRyZXR1cm4gV0VCS0lUICsgdmFsdWUgKyBNUyArIHJlcGxhY2UodmFsdWUsIC9bc3ZoXVxcdystW3RibHJdezJ9LywgJ3RiJykgKyB2YWx1ZVxuXHRcdFx0XHQvLyB2ZXJ0aWNhbC1yKGwpXG5cdFx0XHRcdGNhc2UgMTA4OlxuXHRcdFx0XHRcdHJldHVybiBXRUJLSVQgKyB2YWx1ZSArIE1TICsgcmVwbGFjZSh2YWx1ZSwgL1tzdmhdXFx3Ky1bdGJscl17Mn0vLCAndGItcmwnKSArIHZhbHVlXG5cdFx0XHRcdC8vIGhvcml6b250YWwoLSl0YlxuXHRcdFx0XHRjYXNlIDQ1OlxuXHRcdFx0XHRcdHJldHVybiBXRUJLSVQgKyB2YWx1ZSArIE1TICsgcmVwbGFjZSh2YWx1ZSwgL1tzdmhdXFx3Ky1bdGJscl17Mn0vLCAnbHInKSArIHZhbHVlXG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBXRUJLSVQgKyB2YWx1ZSArIE1TICsgdmFsdWUgKyB2YWx1ZVxuXHR9XG5cblx0cmV0dXJuIHZhbHVlXG59XG4iLCJpbXBvcnQge0NPTU1FTlQsIFJVTEVTRVQsIERFQ0xBUkFUSU9OfSBmcm9tICcuL0VudW0uanMnXG5pbXBvcnQge2FicywgdHJpbSwgZnJvbSwgc2l6ZW9mLCBzdHJsZW4sIHN1YnN0ciwgYXBwZW5kLCByZXBsYWNlfSBmcm9tICcuL1V0aWxpdHkuanMnXG5pbXBvcnQge25vZGUsIGNoYXIsIG5leHQsIHBlZWssIGNhcmV0LCBhbGxvYywgZGVhbGxvYywgZGVsaW1pdCwgd2hpdGVzcGFjZSwgaWRlbnRpZmllciwgY29tbWVudGVyfSBmcm9tICcuL1Rva2VuaXplci5qcydcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEByZXR1cm4ge29iamVjdFtdfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcGlsZSAodmFsdWUpIHtcblx0cmV0dXJuIGRlYWxsb2MocGFyc2UoJycsIG51bGwsIG51bGwsIG51bGwsIFsnJ10sIHZhbHVlID0gYWxsb2ModmFsdWUpLCAwLCBbMF0sIHZhbHVlKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7b2JqZWN0fSByb290XG4gKiBAcGFyYW0ge29iamVjdD99IHBhcmVudFxuICogQHBhcmFtIHtzdHJpbmdbXX0gcnVsZVxuICogQHBhcmFtIHtzdHJpbmdbXX0gcnVsZXNcbiAqIEBwYXJhbSB7c3RyaW5nW119IHJ1bGVzZXRzXG4gKiBAcGFyYW0ge251bWJlcltdfSBwc2V1ZG9cbiAqIEBwYXJhbSB7bnVtYmVyW119IHBvaW50c1xuICogQHBhcmFtIHtzdHJpbmdbXX0gZGVjbGFyYXRpb25zXG4gKiBAcmV0dXJuIHtvYmplY3R9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZSAodmFsdWUsIHJvb3QsIHBhcmVudCwgcnVsZSwgcnVsZXMsIHJ1bGVzZXRzLCBwc2V1ZG8sIHBvaW50cywgZGVjbGFyYXRpb25zKSB7XG5cdHZhciBpbmRleCA9IDBcblx0dmFyIG9mZnNldCA9IDBcblx0dmFyIGxlbmd0aCA9IHBzZXVkb1xuXHR2YXIgYXRydWxlID0gMFxuXHR2YXIgcHJvcGVydHkgPSAwXG5cdHZhciBwcmV2aW91cyA9IDBcblx0dmFyIHZhcmlhYmxlID0gMVxuXHR2YXIgc2Nhbm5pbmcgPSAxXG5cdHZhciBhbXBlcnNhbmQgPSAxXG5cdHZhciBjaGFyYWN0ZXIgPSAwXG5cdHZhciB0eXBlID0gJydcblx0dmFyIHByb3BzID0gcnVsZXNcblx0dmFyIGNoaWxkcmVuID0gcnVsZXNldHNcblx0dmFyIHJlZmVyZW5jZSA9IHJ1bGVcblx0dmFyIGNoYXJhY3RlcnMgPSB0eXBlXG5cblx0d2hpbGUgKHNjYW5uaW5nKVxuXHRcdHN3aXRjaCAocHJldmlvdXMgPSBjaGFyYWN0ZXIsIGNoYXJhY3RlciA9IG5leHQoKSkge1xuXHRcdFx0Ly8gXCIgJyBbIChcblx0XHRcdGNhc2UgMzQ6IGNhc2UgMzk6IGNhc2UgOTE6IGNhc2UgNDA6XG5cdFx0XHRcdGNoYXJhY3RlcnMgKz0gZGVsaW1pdChjaGFyYWN0ZXIpXG5cdFx0XHRcdGJyZWFrXG5cdFx0XHQvLyBcXHQgXFxuIFxcciBcXHNcblx0XHRcdGNhc2UgOTogY2FzZSAxMDogY2FzZSAxMzogY2FzZSAzMjpcblx0XHRcdFx0Y2hhcmFjdGVycyArPSB3aGl0ZXNwYWNlKHByZXZpb3VzKVxuXHRcdFx0XHRicmVha1xuXHRcdFx0Ly8gL1xuXHRcdFx0Y2FzZSA0Nzpcblx0XHRcdFx0c3dpdGNoIChwZWVrKCkpIHtcblx0XHRcdFx0XHRjYXNlIDQyOiBjYXNlIDQ3OlxuXHRcdFx0XHRcdFx0YXBwZW5kKGNvbW1lbnQoY29tbWVudGVyKG5leHQoKSwgY2FyZXQoKSksIHJvb3QsIHBhcmVudCksIGRlY2xhcmF0aW9ucylcblx0XHRcdFx0XHRcdGJyZWFrXG5cdFx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRcdGNoYXJhY3RlcnMgKz0gJy8nXG5cdFx0XHRcdH1cblx0XHRcdFx0YnJlYWtcblx0XHRcdC8vIHtcblx0XHRcdGNhc2UgMTIzICogdmFyaWFibGU6XG5cdFx0XHRcdHBvaW50c1tpbmRleCsrXSA9IHN0cmxlbihjaGFyYWN0ZXJzKSAqIGFtcGVyc2FuZFxuXHRcdFx0Ly8gfSA7IFxcMFxuXHRcdFx0Y2FzZSAxMjUgKiB2YXJpYWJsZTogY2FzZSA1OTogY2FzZSAwOlxuXHRcdFx0XHRzd2l0Y2ggKGNoYXJhY3Rlcikge1xuXHRcdFx0XHRcdC8vIFxcMCB9XG5cdFx0XHRcdFx0Y2FzZSAwOiBjYXNlIDEyNTogc2Nhbm5pbmcgPSAwXG5cdFx0XHRcdFx0Ly8gO1xuXHRcdFx0XHRcdGNhc2UgNTkgKyBvZmZzZXQ6XG5cdFx0XHRcdFx0XHRpZiAocHJvcGVydHkgPiAwICYmIChzdHJsZW4oY2hhcmFjdGVycykgLSBsZW5ndGgpKVxuXHRcdFx0XHRcdFx0XHRhcHBlbmQocHJvcGVydHkgPiAzMiA/IGRlY2xhcmF0aW9uKGNoYXJhY3RlcnMgKyAnOycsIHJ1bGUsIHBhcmVudCwgbGVuZ3RoIC0gMSkgOiBkZWNsYXJhdGlvbihyZXBsYWNlKGNoYXJhY3RlcnMsICcgJywgJycpICsgJzsnLCBydWxlLCBwYXJlbnQsIGxlbmd0aCAtIDIpLCBkZWNsYXJhdGlvbnMpXG5cdFx0XHRcdFx0XHRicmVha1xuXHRcdFx0XHRcdC8vIEAgO1xuXHRcdFx0XHRcdGNhc2UgNTk6IGNoYXJhY3RlcnMgKz0gJzsnXG5cdFx0XHRcdFx0Ly8geyBydWxlL2F0LXJ1bGVcblx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0YXBwZW5kKHJlZmVyZW5jZSA9IHJ1bGVzZXQoY2hhcmFjdGVycywgcm9vdCwgcGFyZW50LCBpbmRleCwgb2Zmc2V0LCBydWxlcywgcG9pbnRzLCB0eXBlLCBwcm9wcyA9IFtdLCBjaGlsZHJlbiA9IFtdLCBsZW5ndGgpLCBydWxlc2V0cylcblxuXHRcdFx0XHRcdFx0aWYgKGNoYXJhY3RlciA9PT0gMTIzKVxuXHRcdFx0XHRcdFx0XHRpZiAob2Zmc2V0ID09PSAwKVxuXHRcdFx0XHRcdFx0XHRcdHBhcnNlKGNoYXJhY3RlcnMsIHJvb3QsIHJlZmVyZW5jZSwgcmVmZXJlbmNlLCBwcm9wcywgcnVsZXNldHMsIGxlbmd0aCwgcG9pbnRzLCBjaGlsZHJlbilcblx0XHRcdFx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdFx0XHRcdHN3aXRjaCAoYXRydWxlKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBkIG0gc1xuXHRcdFx0XHRcdFx0XHRcdFx0Y2FzZSAxMDA6IGNhc2UgMTA5OiBjYXNlIDExNTpcblx0XHRcdFx0XHRcdFx0XHRcdFx0cGFyc2UodmFsdWUsIHJlZmVyZW5jZSwgcmVmZXJlbmNlLCBydWxlICYmIGFwcGVuZChydWxlc2V0KHZhbHVlLCByZWZlcmVuY2UsIHJlZmVyZW5jZSwgMCwgMCwgcnVsZXMsIHBvaW50cywgdHlwZSwgcnVsZXMsIHByb3BzID0gW10sIGxlbmd0aCksIGNoaWxkcmVuKSwgcnVsZXMsIGNoaWxkcmVuLCBsZW5ndGgsIHBvaW50cywgcnVsZSA/IHByb3BzIDogY2hpbGRyZW4pXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrXG5cdFx0XHRcdFx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRwYXJzZShjaGFyYWN0ZXJzLCByZWZlcmVuY2UsIHJlZmVyZW5jZSwgcmVmZXJlbmNlLCBbJyddLCBjaGlsZHJlbiwgbGVuZ3RoLCBwb2ludHMsIGNoaWxkcmVuKVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdGluZGV4ID0gb2Zmc2V0ID0gcHJvcGVydHkgPSAwLCB2YXJpYWJsZSA9IGFtcGVyc2FuZCA9IDEsIHR5cGUgPSBjaGFyYWN0ZXJzID0gJycsIGxlbmd0aCA9IHBzZXVkb1xuXHRcdFx0XHRicmVha1xuXHRcdFx0Ly8gOlxuXHRcdFx0Y2FzZSA1ODpcblx0XHRcdFx0bGVuZ3RoID0gMSArIHN0cmxlbihjaGFyYWN0ZXJzKSwgcHJvcGVydHkgPSBwcmV2aW91c1xuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0c3dpdGNoIChjaGFyYWN0ZXJzICs9IGZyb20oY2hhcmFjdGVyKSwgY2hhcmFjdGVyICogdmFyaWFibGUpIHtcblx0XHRcdFx0XHQvLyAmXG5cdFx0XHRcdFx0Y2FzZSAzODpcblx0XHRcdFx0XHRcdGFtcGVyc2FuZCA9IG9mZnNldCA+IDAgPyAxIDogKGNoYXJhY3RlcnMgKz0gJ1xcZicsIC0xKVxuXHRcdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0XHQvLyAsXG5cdFx0XHRcdFx0Y2FzZSA0NDpcblx0XHRcdFx0XHRcdHBvaW50c1tpbmRleCsrXSA9IChzdHJsZW4oY2hhcmFjdGVycykgLSAxKSAqIGFtcGVyc2FuZCwgYW1wZXJzYW5kID0gMVxuXHRcdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0XHQvLyBAXG5cdFx0XHRcdFx0Y2FzZSA2NDpcblx0XHRcdFx0XHRcdC8vIC1cblx0XHRcdFx0XHRcdGlmIChwZWVrKCkgPT09IDQ1KVxuXHRcdFx0XHRcdFx0XHRjaGFyYWN0ZXJzICs9IGRlbGltaXQobmV4dCgpKVxuXG5cdFx0XHRcdFx0XHRhdHJ1bGUgPSBwZWVrKCksIG9mZnNldCA9IHN0cmxlbih0eXBlID0gY2hhcmFjdGVycyArPSBpZGVudGlmaWVyKGNhcmV0KCkpKSwgY2hhcmFjdGVyKytcblx0XHRcdFx0XHRcdGJyZWFrXG5cdFx0XHRcdFx0Ly8gLVxuXHRcdFx0XHRcdGNhc2UgNDU6XG5cdFx0XHRcdFx0XHRpZiAocHJldmlvdXMgPT09IDQ1ICYmIHN0cmxlbihjaGFyYWN0ZXJzKSA9PSAyKVxuXHRcdFx0XHRcdFx0XHR2YXJpYWJsZSA9IDBcblx0XHRcdFx0fVxuXHRcdH1cblxuXHRyZXR1cm4gcnVsZXNldHNcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7b2JqZWN0fSByb290XG4gKiBAcGFyYW0ge29iamVjdD99IHBhcmVudFxuICogQHBhcmFtIHtudW1iZXJ9IGluZGV4XG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBydWxlc1xuICogQHBhcmFtIHtudW1iZXJbXX0gcG9pbnRzXG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICogQHBhcmFtIHtzdHJpbmdbXX0gcHJvcHNcbiAqIEBwYXJhbSB7c3RyaW5nW119IGNoaWxkcmVuXG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcmV0dXJuIHtvYmplY3R9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBydWxlc2V0ICh2YWx1ZSwgcm9vdCwgcGFyZW50LCBpbmRleCwgb2Zmc2V0LCBydWxlcywgcG9pbnRzLCB0eXBlLCBwcm9wcywgY2hpbGRyZW4sIGxlbmd0aCkge1xuXHR2YXIgcG9zdCA9IG9mZnNldCAtIDFcblx0dmFyIHJ1bGUgPSBvZmZzZXQgPT09IDAgPyBydWxlcyA6IFsnJ11cblx0dmFyIHNpemUgPSBzaXplb2YocnVsZSlcblxuXHRmb3IgKHZhciBpID0gMCwgaiA9IDAsIGsgPSAwOyBpIDwgaW5kZXg7ICsraSlcblx0XHRmb3IgKHZhciB4ID0gMCwgeSA9IHN1YnN0cih2YWx1ZSwgcG9zdCArIDEsIHBvc3QgPSBhYnMoaiA9IHBvaW50c1tpXSkpLCB6ID0gdmFsdWU7IHggPCBzaXplOyArK3gpXG5cdFx0XHRpZiAoeiA9IHRyaW0oaiA+IDAgPyBydWxlW3hdICsgJyAnICsgeSA6IHJlcGxhY2UoeSwgLyZcXGYvZywgcnVsZVt4XSkpKVxuXHRcdFx0XHRwcm9wc1trKytdID0gelxuXG5cdHJldHVybiBub2RlKHZhbHVlLCByb290LCBwYXJlbnQsIG9mZnNldCA9PT0gMCA/IFJVTEVTRVQgOiB0eXBlLCBwcm9wcywgY2hpbGRyZW4sIGxlbmd0aClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gdmFsdWVcbiAqIEBwYXJhbSB7b2JqZWN0fSByb290XG4gKiBAcGFyYW0ge29iamVjdD99IHBhcmVudFxuICogQHJldHVybiB7b2JqZWN0fVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tbWVudCAodmFsdWUsIHJvb3QsIHBhcmVudCkge1xuXHRyZXR1cm4gbm9kZSh2YWx1ZSwgcm9vdCwgcGFyZW50LCBDT01NRU5ULCBmcm9tKGNoYXIoKSksIHN1YnN0cih2YWx1ZSwgMiwgLTIpLCAwKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICogQHBhcmFtIHtvYmplY3R9IHJvb3RcbiAqIEBwYXJhbSB7b2JqZWN0P30gcGFyZW50XG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcmV0dXJuIHtvYmplY3R9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNsYXJhdGlvbiAodmFsdWUsIHJvb3QsIHBhcmVudCwgbGVuZ3RoKSB7XG5cdHJldHVybiBub2RlKHZhbHVlLCByb290LCBwYXJlbnQsIERFQ0xBUkFUSU9OLCBzdWJzdHIodmFsdWUsIDAsIGxlbmd0aCksIHN1YnN0cih2YWx1ZSwgbGVuZ3RoICsgMSwgLTEpLCBsZW5ndGgpXG59XG4iLCJpbXBvcnQgeyBTdHlsZVNoZWV0IH0gZnJvbSAnQGVtb3Rpb24vc2hlZXQnO1xuaW1wb3J0IHsgZGVhbGxvYywgYWxsb2MsIG5leHQsIHRva2VuLCBmcm9tLCBwZWVrLCBkZWxpbWl0LCBpZGVudGlmaWVyLCBwb3NpdGlvbiwgc3RyaW5naWZ5LCBDT01NRU5ULCBydWxlc2hlZXQsIG1pZGRsZXdhcmUsIHByZWZpeGVyLCBzZXJpYWxpemUsIGNvbXBpbGUgfSBmcm9tICdzdHlsaXMnO1xuaW1wb3J0ICdAZW1vdGlvbi93ZWFrLW1lbW9pemUnO1xuaW1wb3J0ICdAZW1vdGlvbi9tZW1vaXplJztcblxudmFyIGxhc3QgPSBmdW5jdGlvbiBsYXN0KGFycikge1xuICByZXR1cm4gYXJyLmxlbmd0aCA/IGFyclthcnIubGVuZ3RoIC0gMV0gOiBudWxsO1xufTtcblxudmFyIHRvUnVsZXMgPSBmdW5jdGlvbiB0b1J1bGVzKHBhcnNlZCwgcG9pbnRzKSB7XG4gIC8vIHByZXRlbmQgd2UndmUgc3RhcnRlZCB3aXRoIGEgY29tbWFcbiAgdmFyIGluZGV4ID0gLTE7XG4gIHZhciBjaGFyYWN0ZXIgPSA0NDtcblxuICBkbyB7XG4gICAgc3dpdGNoICh0b2tlbihjaGFyYWN0ZXIpKSB7XG4gICAgICBjYXNlIDA6XG4gICAgICAgIC8vICZcXGZcbiAgICAgICAgaWYgKGNoYXJhY3RlciA9PT0gMzggJiYgcGVlaygpID09PSAxMikge1xuICAgICAgICAgIC8vIHRoaXMgaXMgbm90IDEwMCUgY29ycmVjdCwgd2UgZG9uJ3QgYWNjb3VudCBmb3IgbGl0ZXJhbCBzZXF1ZW5jZXMgaGVyZSAtIGxpa2UgZm9yIGV4YW1wbGUgcXVvdGVkIHN0cmluZ3NcbiAgICAgICAgICAvLyBzdHlsaXMgaW5zZXJ0cyBcXGYgYWZ0ZXIgJiB0byBrbm93IHdoZW4gJiB3aGVyZSBpdCBzaG91bGQgcmVwbGFjZSB0aGlzIHNlcXVlbmNlIHdpdGggdGhlIGNvbnRleHQgc2VsZWN0b3JcbiAgICAgICAgICAvLyBhbmQgd2hlbiBpdCBzaG91bGQganVzdCBjb25jYXRlbmF0ZSB0aGUgb3V0ZXIgYW5kIGlubmVyIHNlbGVjdG9yc1xuICAgICAgICAgIC8vIGl0J3MgdmVyeSB1bmxpa2VseSBmb3IgdGhpcyBzZXF1ZW5jZSB0byBhY3R1YWxseSBhcHBlYXIgaW4gYSBkaWZmZXJlbnQgY29udGV4dCwgc28gd2UganVzdCBsZXZlcmFnZSB0aGlzIGZhY3QgaGVyZVxuICAgICAgICAgIHBvaW50c1tpbmRleF0gPSAxO1xuICAgICAgICB9XG5cbiAgICAgICAgcGFyc2VkW2luZGV4XSArPSBpZGVudGlmaWVyKHBvc2l0aW9uIC0gMSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDI6XG4gICAgICAgIHBhcnNlZFtpbmRleF0gKz0gZGVsaW1pdChjaGFyYWN0ZXIpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA0OlxuICAgICAgICAvLyBjb21tYVxuICAgICAgICBpZiAoY2hhcmFjdGVyID09PSA0NCkge1xuICAgICAgICAgIC8vIGNvbG9uXG4gICAgICAgICAgcGFyc2VkWysraW5kZXhdID0gcGVlaygpID09PSA1OCA/ICcmXFxmJyA6ICcnO1xuICAgICAgICAgIHBvaW50c1tpbmRleF0gPSBwYXJzZWRbaW5kZXhdLmxlbmd0aDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAvLyBmYWxsdGhyb3VnaFxuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBwYXJzZWRbaW5kZXhdICs9IGZyb20oY2hhcmFjdGVyKTtcbiAgICB9XG4gIH0gd2hpbGUgKGNoYXJhY3RlciA9IG5leHQoKSk7XG5cbiAgcmV0dXJuIHBhcnNlZDtcbn07XG5cbnZhciBnZXRSdWxlcyA9IGZ1bmN0aW9uIGdldFJ1bGVzKHZhbHVlLCBwb2ludHMpIHtcbiAgcmV0dXJuIGRlYWxsb2ModG9SdWxlcyhhbGxvYyh2YWx1ZSksIHBvaW50cykpO1xufTsgLy8gV2Vha1NldCB3b3VsZCBiZSBtb3JlIGFwcHJvcHJpYXRlLCBidXQgb25seSBXZWFrTWFwIGlzIHN1cHBvcnRlZCBpbiBJRTExXG5cblxudmFyIGZpeGVkRWxlbWVudHMgPSAvKiAjX19QVVJFX18gKi9uZXcgV2Vha01hcCgpO1xudmFyIGNvbXBhdCA9IGZ1bmN0aW9uIGNvbXBhdChlbGVtZW50KSB7XG4gIGlmIChlbGVtZW50LnR5cGUgIT09ICdydWxlJyB8fCAhZWxlbWVudC5wYXJlbnQgfHwgLy8gLmxlbmd0aCBpbmRpY2F0ZXMgaWYgdGhpcyBydWxlIGNvbnRhaW5zIHBzZXVkbyBvciBub3RcbiAgIWVsZW1lbnQubGVuZ3RoKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHZhbHVlID0gZWxlbWVudC52YWx1ZSxcbiAgICAgIHBhcmVudCA9IGVsZW1lbnQucGFyZW50O1xuICB2YXIgaXNJbXBsaWNpdFJ1bGUgPSBlbGVtZW50LmNvbHVtbiA9PT0gcGFyZW50LmNvbHVtbiAmJiBlbGVtZW50LmxpbmUgPT09IHBhcmVudC5saW5lO1xuXG4gIHdoaWxlIChwYXJlbnQudHlwZSAhPT0gJ3J1bGUnKSB7XG4gICAgcGFyZW50ID0gcGFyZW50LnBhcmVudDtcbiAgICBpZiAoIXBhcmVudCkgcmV0dXJuO1xuICB9IC8vIHNob3J0LWNpcmN1aXQgZm9yIHRoZSBzaW1wbGVzdCBjYXNlXG5cblxuICBpZiAoZWxlbWVudC5wcm9wcy5sZW5ndGggPT09IDEgJiYgdmFsdWUuY2hhckNvZGVBdCgwKSAhPT0gNThcbiAgLyogY29sb24gKi9cbiAgJiYgIWZpeGVkRWxlbWVudHMuZ2V0KHBhcmVudCkpIHtcbiAgICByZXR1cm47XG4gIH0gLy8gaWYgdGhpcyBpcyBhbiBpbXBsaWNpdGx5IGluc2VydGVkIHJ1bGUgKHRoZSBvbmUgZWFnZXJseSBpbnNlcnRlZCBhdCB0aGUgZWFjaCBuZXcgbmVzdGVkIGxldmVsKVxuICAvLyB0aGVuIHRoZSBwcm9wcyBoYXMgYWxyZWFkeSBiZWVuIG1hbmlwdWxhdGVkIGJlZm9yZWhhbmQgYXMgdGhleSB0aGF0IGFycmF5IGlzIHNoYXJlZCBiZXR3ZWVuIGl0IGFuZCBpdHMgXCJydWxlIHBhcmVudFwiXG5cblxuICBpZiAoaXNJbXBsaWNpdFJ1bGUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBmaXhlZEVsZW1lbnRzLnNldChlbGVtZW50LCB0cnVlKTtcbiAgdmFyIHBvaW50cyA9IFtdO1xuICB2YXIgcnVsZXMgPSBnZXRSdWxlcyh2YWx1ZSwgcG9pbnRzKTtcbiAgdmFyIHBhcmVudFJ1bGVzID0gcGFyZW50LnByb3BzO1xuXG4gIGZvciAodmFyIGkgPSAwLCBrID0gMDsgaSA8IHJ1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCBwYXJlbnRSdWxlcy5sZW5ndGg7IGorKywgaysrKSB7XG4gICAgICBlbGVtZW50LnByb3BzW2tdID0gcG9pbnRzW2ldID8gcnVsZXNbaV0ucmVwbGFjZSgvJlxcZi9nLCBwYXJlbnRSdWxlc1tqXSkgOiBwYXJlbnRSdWxlc1tqXSArIFwiIFwiICsgcnVsZXNbaV07XG4gICAgfVxuICB9XG59O1xudmFyIHJlbW92ZUxhYmVsID0gZnVuY3Rpb24gcmVtb3ZlTGFiZWwoZWxlbWVudCkge1xuICBpZiAoZWxlbWVudC50eXBlID09PSAnZGVjbCcpIHtcbiAgICB2YXIgdmFsdWUgPSBlbGVtZW50LnZhbHVlO1xuXG4gICAgaWYgKCAvLyBjaGFyY29kZSBmb3IgbFxuICAgIHZhbHVlLmNoYXJDb2RlQXQoMCkgPT09IDEwOCAmJiAvLyBjaGFyY29kZSBmb3IgYlxuICAgIHZhbHVlLmNoYXJDb2RlQXQoMikgPT09IDk4KSB7XG4gICAgICAvLyB0aGlzIGlnbm9yZXMgbGFiZWxcbiAgICAgIGVsZW1lbnRbXCJyZXR1cm5cIl0gPSAnJztcbiAgICAgIGVsZW1lbnQudmFsdWUgPSAnJztcbiAgICB9XG4gIH1cbn07XG52YXIgaWdub3JlRmxhZyA9ICdlbW90aW9uLWRpc2FibGUtc2VydmVyLXJlbmRlcmluZy11bnNhZmUtc2VsZWN0b3Itd2FybmluZy1wbGVhc2UtZG8tbm90LXVzZS10aGlzLXRoZS13YXJuaW5nLWV4aXN0cy1mb3ItYS1yZWFzb24nO1xuXG52YXIgaXNJZ25vcmluZ0NvbW1lbnQgPSBmdW5jdGlvbiBpc0lnbm9yaW5nQ29tbWVudChlbGVtZW50KSB7XG4gIHJldHVybiAhIWVsZW1lbnQgJiYgZWxlbWVudC50eXBlID09PSAnY29tbScgJiYgZWxlbWVudC5jaGlsZHJlbi5pbmRleE9mKGlnbm9yZUZsYWcpID4gLTE7XG59O1xuXG52YXIgY3JlYXRlVW5zYWZlU2VsZWN0b3JzQWxhcm0gPSBmdW5jdGlvbiBjcmVhdGVVbnNhZmVTZWxlY3RvcnNBbGFybShjYWNoZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKGVsZW1lbnQsIGluZGV4LCBjaGlsZHJlbikge1xuICAgIGlmIChlbGVtZW50LnR5cGUgIT09ICdydWxlJykgcmV0dXJuO1xuICAgIHZhciB1bnNhZmVQc2V1ZG9DbGFzc2VzID0gZWxlbWVudC52YWx1ZS5tYXRjaCgvKDpmaXJzdHw6bnRofDpudGgtbGFzdCktY2hpbGQvZyk7XG5cbiAgICBpZiAodW5zYWZlUHNldWRvQ2xhc3NlcyAmJiBjYWNoZS5jb21wYXQgIT09IHRydWUpIHtcbiAgICAgIHZhciBwcmV2RWxlbWVudCA9IGluZGV4ID4gMCA/IGNoaWxkcmVuW2luZGV4IC0gMV0gOiBudWxsO1xuXG4gICAgICBpZiAocHJldkVsZW1lbnQgJiYgaXNJZ25vcmluZ0NvbW1lbnQobGFzdChwcmV2RWxlbWVudC5jaGlsZHJlbikpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdW5zYWZlUHNldWRvQ2xhc3Nlcy5mb3JFYWNoKGZ1bmN0aW9uICh1bnNhZmVQc2V1ZG9DbGFzcykge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiVGhlIHBzZXVkbyBjbGFzcyBcXFwiXCIgKyB1bnNhZmVQc2V1ZG9DbGFzcyArIFwiXFxcIiBpcyBwb3RlbnRpYWxseSB1bnNhZmUgd2hlbiBkb2luZyBzZXJ2ZXItc2lkZSByZW5kZXJpbmcuIFRyeSBjaGFuZ2luZyBpdCB0byBcXFwiXCIgKyB1bnNhZmVQc2V1ZG9DbGFzcy5zcGxpdCgnLWNoaWxkJylbMF0gKyBcIi1vZi10eXBlXFxcIi5cIik7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59O1xuXG52YXIgaXNJbXBvcnRSdWxlID0gZnVuY3Rpb24gaXNJbXBvcnRSdWxlKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGVsZW1lbnQudHlwZS5jaGFyQ29kZUF0KDEpID09PSAxMDUgJiYgZWxlbWVudC50eXBlLmNoYXJDb2RlQXQoMCkgPT09IDY0O1xufTtcblxudmFyIGlzUHJlcGVuZGVkV2l0aFJlZ3VsYXJSdWxlcyA9IGZ1bmN0aW9uIGlzUHJlcGVuZGVkV2l0aFJlZ3VsYXJSdWxlcyhpbmRleCwgY2hpbGRyZW4pIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4IC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBpZiAoIWlzSW1wb3J0UnVsZShjaGlsZHJlbltpXSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn07IC8vIHVzZSB0aGlzIHRvIHJlbW92ZSBpbmNvcnJlY3QgZWxlbWVudHMgZnJvbSBmdXJ0aGVyIHByb2Nlc3Npbmdcbi8vIHNvIHRoZXkgZG9uJ3QgZ2V0IGhhbmRlZCB0byB0aGUgYHNoZWV0YCAob3IgYW55dGhpbmcgZWxzZSlcbi8vIGFzIHRoYXQgY291bGQgcG90ZW50aWFsbHkgbGVhZCB0byBhZGRpdGlvbmFsIGxvZ3Mgd2hpY2ggaW4gdHVybiBjb3VsZCBiZSBvdmVyaGVsbWluZyB0byB0aGUgdXNlclxuXG5cbnZhciBudWxsaWZ5RWxlbWVudCA9IGZ1bmN0aW9uIG51bGxpZnlFbGVtZW50KGVsZW1lbnQpIHtcbiAgZWxlbWVudC50eXBlID0gJyc7XG4gIGVsZW1lbnQudmFsdWUgPSAnJztcbiAgZWxlbWVudFtcInJldHVyblwiXSA9ICcnO1xuICBlbGVtZW50LmNoaWxkcmVuID0gJyc7XG4gIGVsZW1lbnQucHJvcHMgPSAnJztcbn07XG5cbnZhciBpbmNvcnJlY3RJbXBvcnRBbGFybSA9IGZ1bmN0aW9uIGluY29ycmVjdEltcG9ydEFsYXJtKGVsZW1lbnQsIGluZGV4LCBjaGlsZHJlbikge1xuICBpZiAoIWlzSW1wb3J0UnVsZShlbGVtZW50KSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChlbGVtZW50LnBhcmVudCkge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJgQGltcG9ydGAgcnVsZXMgY2FuJ3QgYmUgbmVzdGVkIGluc2lkZSBvdGhlciBydWxlcy4gUGxlYXNlIG1vdmUgaXQgdG8gdGhlIHRvcCBsZXZlbCBhbmQgcHV0IGl0IGJlZm9yZSByZWd1bGFyIHJ1bGVzLiBLZWVwIGluIG1pbmQgdGhhdCB0aGV5IGNhbiBvbmx5IGJlIHVzZWQgd2l0aGluIGdsb2JhbCBzdHlsZXMuXCIpO1xuICAgIG51bGxpZnlFbGVtZW50KGVsZW1lbnQpO1xuICB9IGVsc2UgaWYgKGlzUHJlcGVuZGVkV2l0aFJlZ3VsYXJSdWxlcyhpbmRleCwgY2hpbGRyZW4pKSB7XG4gICAgY29uc29sZS5lcnJvcihcImBAaW1wb3J0YCBydWxlcyBjYW4ndCBiZSBhZnRlciBvdGhlciBydWxlcy4gUGxlYXNlIHB1dCB5b3VyIGBAaW1wb3J0YCBydWxlcyBiZWZvcmUgeW91ciBvdGhlciBydWxlcy5cIik7XG4gICAgbnVsbGlmeUVsZW1lbnQoZWxlbWVudCk7XG4gIH1cbn07XG5cbnZhciBkZWZhdWx0U3R5bGlzUGx1Z2lucyA9IFtwcmVmaXhlcl07XG5cbnZhciBjcmVhdGVDYWNoZSA9IGZ1bmN0aW9uIGNyZWF0ZUNhY2hlKG9wdGlvbnMpIHtcbiAgdmFyIGtleSA9IG9wdGlvbnMua2V5O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICFrZXkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgaGF2ZSB0byBjb25maWd1cmUgYGtleWAgZm9yIHlvdXIgY2FjaGUuIFBsZWFzZSBtYWtlIHN1cmUgaXQncyB1bmlxdWUgKGFuZCBub3QgZXF1YWwgdG8gJ2NzcycpIGFzIGl0J3MgdXNlZCBmb3IgbGlua2luZyBzdHlsZXMgdG8geW91ciBjYWNoZS5cXG5cIiArIFwiSWYgbXVsdGlwbGUgY2FjaGVzIHNoYXJlIHRoZSBzYW1lIGtleSB0aGV5IG1pZ2h0IFxcXCJmaWdodFxcXCIgZm9yIGVhY2ggb3RoZXIncyBzdHlsZSBlbGVtZW50cy5cIik7XG4gIH1cblxuICBpZiAoIGtleSA9PT0gJ2NzcycpIHtcbiAgICB2YXIgc3NyU3R5bGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcInN0eWxlW2RhdGEtZW1vdGlvbl06bm90KFtkYXRhLXNdKVwiKTsgLy8gZ2V0IFNTUmVkIHN0eWxlcyBvdXQgb2YgdGhlIHdheSBvZiBSZWFjdCdzIGh5ZHJhdGlvblxuICAgIC8vIGRvY3VtZW50LmhlYWQgaXMgYSBzYWZlIHBsYWNlIHRvIG1vdmUgdGhlbSB0b1xuXG4gICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChzc3JTdHlsZXMsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKG5vZGUpO1xuICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ2RhdGEtcycsICcnKTtcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBzdHlsaXNQbHVnaW5zID0gb3B0aW9ucy5zdHlsaXNQbHVnaW5zIHx8IGRlZmF1bHRTdHlsaXNQbHVnaW5zO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIGlmICgvW15hLXotXS8udGVzdChrZXkpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFbW90aW9uIGtleSBtdXN0IG9ubHkgY29udGFpbiBsb3dlciBjYXNlIGFscGhhYmV0aWNhbCBjaGFyYWN0ZXJzIGFuZCAtIGJ1dCBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgd2FzIHBhc3NlZFwiKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaW5zZXJ0ZWQgPSB7fTsgLy8gJEZsb3dGaXhNZVxuXG4gIHZhciBjb250YWluZXI7XG4gIHZhciBub2Rlc1RvSHlkcmF0ZSA9IFtdO1xuXG4gIHtcbiAgICBjb250YWluZXIgPSBvcHRpb25zLmNvbnRhaW5lciB8fCBkb2N1bWVudC5oZWFkO1xuICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcInN0eWxlW2RhdGEtZW1vdGlvbl1cIiksIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICB2YXIgYXR0cmliID0gbm9kZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWVtb3Rpb25cIikuc3BsaXQoJyAnKTtcblxuICAgICAgaWYgKGF0dHJpYlswXSAhPT0ga2V5KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0gLy8gJEZsb3dGaXhNZVxuXG5cbiAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXR0cmliLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGluc2VydGVkW2F0dHJpYltpXV0gPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICBub2Rlc1RvSHlkcmF0ZS5wdXNoKG5vZGUpO1xuICAgIH0pO1xuICB9XG5cbiAgdmFyIF9pbnNlcnQ7XG5cbiAgdmFyIG9tbmlwcmVzZW50UGx1Z2lucyA9IFtjb21wYXQsIHJlbW92ZUxhYmVsXTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIG9tbmlwcmVzZW50UGx1Z2lucy5wdXNoKGNyZWF0ZVVuc2FmZVNlbGVjdG9yc0FsYXJtKHtcbiAgICAgIGdldCBjb21wYXQoKSB7XG4gICAgICAgIHJldHVybiBjYWNoZS5jb21wYXQ7XG4gICAgICB9XG5cbiAgICB9KSwgaW5jb3JyZWN0SW1wb3J0QWxhcm0pO1xuICB9XG5cbiAge1xuICAgIHZhciBjdXJyZW50U2hlZXQ7XG4gICAgdmFyIGZpbmFsaXppbmdQbHVnaW5zID0gW3N0cmluZ2lmeSwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICBpZiAoIWVsZW1lbnQucm9vdCkge1xuICAgICAgICBpZiAoZWxlbWVudFtcInJldHVyblwiXSkge1xuICAgICAgICAgIGN1cnJlbnRTaGVldC5pbnNlcnQoZWxlbWVudFtcInJldHVyblwiXSk7XG4gICAgICAgIH0gZWxzZSBpZiAoZWxlbWVudC52YWx1ZSAmJiBlbGVtZW50LnR5cGUgIT09IENPTU1FTlQpIHtcbiAgICAgICAgICAvLyBpbnNlcnQgZW1wdHkgcnVsZSBpbiBub24tcHJvZHVjdGlvbiBlbnZpcm9ubWVudHNcbiAgICAgICAgICAvLyBzbyBAZW1vdGlvbi9qZXN0IGNhbiBncmFiIGBrZXlgIGZyb20gdGhlIChKUylET00gZm9yIGNhY2hlcyB3aXRob3V0IGFueSBydWxlcyBpbnNlcnRlZCB5ZXRcbiAgICAgICAgICBjdXJyZW50U2hlZXQuaW5zZXJ0KGVsZW1lbnQudmFsdWUgKyBcInt9XCIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSA6IHJ1bGVzaGVldChmdW5jdGlvbiAocnVsZSkge1xuICAgICAgY3VycmVudFNoZWV0Lmluc2VydChydWxlKTtcbiAgICB9KV07XG4gICAgdmFyIHNlcmlhbGl6ZXIgPSBtaWRkbGV3YXJlKG9tbmlwcmVzZW50UGx1Z2lucy5jb25jYXQoc3R5bGlzUGx1Z2lucywgZmluYWxpemluZ1BsdWdpbnMpKTtcblxuICAgIHZhciBzdHlsaXMgPSBmdW5jdGlvbiBzdHlsaXMoc3R5bGVzKSB7XG4gICAgICByZXR1cm4gc2VyaWFsaXplKGNvbXBpbGUoc3R5bGVzKSwgc2VyaWFsaXplcik7XG4gICAgfTtcblxuICAgIF9pbnNlcnQgPSBmdW5jdGlvbiBpbnNlcnQoc2VsZWN0b3IsIHNlcmlhbGl6ZWQsIHNoZWV0LCBzaG91bGRDYWNoZSkge1xuICAgICAgY3VycmVudFNoZWV0ID0gc2hlZXQ7XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHNlcmlhbGl6ZWQubWFwICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY3VycmVudFNoZWV0ID0ge1xuICAgICAgICAgIGluc2VydDogZnVuY3Rpb24gaW5zZXJ0KHJ1bGUpIHtcbiAgICAgICAgICAgIHNoZWV0Lmluc2VydChydWxlICsgc2VyaWFsaXplZC5tYXApO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgc3R5bGlzKHNlbGVjdG9yID8gc2VsZWN0b3IgKyBcIntcIiArIHNlcmlhbGl6ZWQuc3R5bGVzICsgXCJ9XCIgOiBzZXJpYWxpemVkLnN0eWxlcyk7XG5cbiAgICAgIGlmIChzaG91bGRDYWNoZSkge1xuICAgICAgICBjYWNoZS5pbnNlcnRlZFtzZXJpYWxpemVkLm5hbWVdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgdmFyIGNhY2hlID0ge1xuICAgIGtleToga2V5LFxuICAgIHNoZWV0OiBuZXcgU3R5bGVTaGVldCh7XG4gICAgICBrZXk6IGtleSxcbiAgICAgIGNvbnRhaW5lcjogY29udGFpbmVyLFxuICAgICAgbm9uY2U6IG9wdGlvbnMubm9uY2UsXG4gICAgICBzcGVlZHk6IG9wdGlvbnMuc3BlZWR5LFxuICAgICAgcHJlcGVuZDogb3B0aW9ucy5wcmVwZW5kXG4gICAgfSksXG4gICAgbm9uY2U6IG9wdGlvbnMubm9uY2UsXG4gICAgaW5zZXJ0ZWQ6IGluc2VydGVkLFxuICAgIHJlZ2lzdGVyZWQ6IHt9LFxuICAgIGluc2VydDogX2luc2VydFxuICB9O1xuICBjYWNoZS5zaGVldC5oeWRyYXRlKG5vZGVzVG9IeWRyYXRlKTtcbiAgcmV0dXJuIGNhY2hlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlQ2FjaGU7XG4iLCJpbXBvcnQge01TLCBNT1osIFdFQktJVCwgUlVMRVNFVCwgS0VZRlJBTUVTLCBERUNMQVJBVElPTn0gZnJvbSAnLi9FbnVtLmpzJ1xuaW1wb3J0IHttYXRjaCwgY2hhcmF0LCBzdWJzdHIsIHN0cmxlbiwgc2l6ZW9mLCByZXBsYWNlLCBjb21iaW5lfSBmcm9tICcuL1V0aWxpdHkuanMnXG5pbXBvcnQge2NvcHksIHRva2VuaXplfSBmcm9tICcuL1Rva2VuaXplci5qcydcbmltcG9ydCB7c2VyaWFsaXplfSBmcm9tICcuL1NlcmlhbGl6ZXIuanMnXG5pbXBvcnQge3ByZWZpeH0gZnJvbSAnLi9QcmVmaXhlci5qcydcblxuLyoqXG4gKiBAcGFyYW0ge2Z1bmN0aW9uW119IGNvbGxlY3Rpb25cbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxuICovXG5leHBvcnQgZnVuY3Rpb24gbWlkZGxld2FyZSAoY29sbGVjdGlvbikge1xuXHR2YXIgbGVuZ3RoID0gc2l6ZW9mKGNvbGxlY3Rpb24pXG5cblx0cmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50LCBpbmRleCwgY2hpbGRyZW4sIGNhbGxiYWNrKSB7XG5cdFx0dmFyIG91dHB1dCA9ICcnXG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKVxuXHRcdFx0b3V0cHV0ICs9IGNvbGxlY3Rpb25baV0oZWxlbWVudCwgaW5kZXgsIGNoaWxkcmVuLCBjYWxsYmFjaykgfHwgJydcblxuXHRcdHJldHVybiBvdXRwdXRcblx0fVxufVxuXG4vKipcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrXG4gKiBAcmV0dXJuIHtmdW5jdGlvbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJ1bGVzaGVldCAoY2FsbGJhY2spIHtcblx0cmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50KSB7XG5cdFx0aWYgKCFlbGVtZW50LnJvb3QpXG5cdFx0XHRpZiAoZWxlbWVudCA9IGVsZW1lbnQucmV0dXJuKVxuXHRcdFx0XHRjYWxsYmFjayhlbGVtZW50KVxuXHR9XG59XG5cbi8qKlxuICogQHBhcmFtIHtvYmplY3R9IGVsZW1lbnRcbiAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxuICogQHBhcmFtIHtvYmplY3RbXX0gY2hpbGRyZW5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcmVmaXhlciAoZWxlbWVudCwgaW5kZXgsIGNoaWxkcmVuLCBjYWxsYmFjaykge1xuXHRpZiAoIWVsZW1lbnQucmV0dXJuKVxuXHRcdHN3aXRjaCAoZWxlbWVudC50eXBlKSB7XG5cdFx0XHRjYXNlIERFQ0xBUkFUSU9OOiBlbGVtZW50LnJldHVybiA9IHByZWZpeChlbGVtZW50LnZhbHVlLCBlbGVtZW50Lmxlbmd0aClcblx0XHRcdFx0YnJlYWtcblx0XHRcdGNhc2UgS0VZRlJBTUVTOlxuXHRcdFx0XHRyZXR1cm4gc2VyaWFsaXplKFtjb3B5KHJlcGxhY2UoZWxlbWVudC52YWx1ZSwgJ0AnLCAnQCcgKyBXRUJLSVQpLCBlbGVtZW50LCAnJyldLCBjYWxsYmFjaylcblx0XHRcdGNhc2UgUlVMRVNFVDpcblx0XHRcdFx0aWYgKGVsZW1lbnQubGVuZ3RoKVxuXHRcdFx0XHRcdHJldHVybiBjb21iaW5lKGVsZW1lbnQucHJvcHMsIGZ1bmN0aW9uICh2YWx1ZSkge1xuXHRcdFx0XHRcdFx0c3dpdGNoIChtYXRjaCh2YWx1ZSwgLyg6OnBsYWNcXHcrfDpyZWFkLVxcdyspLykpIHtcblx0XHRcdFx0XHRcdFx0Ly8gOnJlYWQtKG9ubHl8d3JpdGUpXG5cdFx0XHRcdFx0XHRcdGNhc2UgJzpyZWFkLW9ubHknOiBjYXNlICc6cmVhZC13cml0ZSc6XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHNlcmlhbGl6ZShbY29weShyZXBsYWNlKHZhbHVlLCAvOihyZWFkLVxcdyspLywgJzonICsgTU9aICsgJyQxJyksIGVsZW1lbnQsICcnKV0sIGNhbGxiYWNrKVxuXHRcdFx0XHRcdFx0XHQvLyA6cGxhY2Vob2xkZXJcblx0XHRcdFx0XHRcdFx0Y2FzZSAnOjpwbGFjZWhvbGRlcic6XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHNlcmlhbGl6ZShbXG5cdFx0XHRcdFx0XHRcdFx0XHRjb3B5KHJlcGxhY2UodmFsdWUsIC86KHBsYWNcXHcrKS8sICc6JyArIFdFQktJVCArICdpbnB1dC0kMScpLCBlbGVtZW50LCAnJyksXG5cdFx0XHRcdFx0XHRcdFx0XHRjb3B5KHJlcGxhY2UodmFsdWUsIC86KHBsYWNcXHcrKS8sICc6JyArIE1PWiArICckMScpLCBlbGVtZW50LCAnJyksXG5cdFx0XHRcdFx0XHRcdFx0XHRjb3B5KHJlcGxhY2UodmFsdWUsIC86KHBsYWNcXHcrKS8sIE1TICsgJ2lucHV0LSQxJyksIGVsZW1lbnQsICcnKVxuXHRcdFx0XHRcdFx0XHRcdF0sIGNhbGxiYWNrKVxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRyZXR1cm4gJydcblx0XHRcdFx0XHR9KVxuXHRcdH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge29iamVjdH0gZWxlbWVudFxuICogQHBhcmFtIHtudW1iZXJ9IGluZGV4XG4gKiBAcGFyYW0ge29iamVjdFtdfSBjaGlsZHJlblxuICovXG5leHBvcnQgZnVuY3Rpb24gbmFtZXNwYWNlIChlbGVtZW50KSB7XG5cdHN3aXRjaCAoZWxlbWVudC50eXBlKSB7XG5cdFx0Y2FzZSBSVUxFU0VUOlxuXHRcdFx0ZWxlbWVudC5wcm9wcyA9IGVsZW1lbnQucHJvcHMubWFwKGZ1bmN0aW9uICh2YWx1ZSkge1xuXHRcdFx0XHRyZXR1cm4gY29tYmluZSh0b2tlbml6ZSh2YWx1ZSksIGZ1bmN0aW9uICh2YWx1ZSwgaW5kZXgsIGNoaWxkcmVuKSB7XG5cdFx0XHRcdFx0c3dpdGNoIChjaGFyYXQodmFsdWUsIDApKSB7XG5cdFx0XHRcdFx0XHQvLyBcXGZcblx0XHRcdFx0XHRcdGNhc2UgMTI6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBzdWJzdHIodmFsdWUsIDEsIHN0cmxlbih2YWx1ZSkpXG5cdFx0XHRcdFx0XHQvLyBcXDAgKCArID4gflxuXHRcdFx0XHRcdFx0Y2FzZSAwOiBjYXNlIDQwOiBjYXNlIDQzOiBjYXNlIDYyOiBjYXNlIDEyNjpcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHZhbHVlXG5cdFx0XHRcdFx0XHQvLyA6XG5cdFx0XHRcdFx0XHRjYXNlIDU4OlxuXHRcdFx0XHRcdFx0XHRpZiAoY2hpbGRyZW5baW5kZXggKyAxXSA9PT0gJ2dsb2JhbCcpXG5cdFx0XHRcdFx0XHRcdFx0Y2hpbGRyZW5baW5kZXggKyAxXSA9ICcnLCBjaGlsZHJlbltpbmRleCArIDJdID0gJ1xcZicgKyBzdWJzdHIoY2hpbGRyZW5baW5kZXggKyAyXSwgaW5kZXggPSAxLCAtMSlcblx0XHRcdFx0XHRcdC8vIFxcc1xuXHRcdFx0XHRcdFx0Y2FzZSAzMjpcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGluZGV4ID09PSAxID8gJycgOiB2YWx1ZVxuXHRcdFx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRcdFx0c3dpdGNoIChpbmRleCkge1xuXHRcdFx0XHRcdFx0XHRcdGNhc2UgMDogZWxlbWVudCA9IHZhbHVlXG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gc2l6ZW9mKGNoaWxkcmVuKSA+IDEgPyAnJyA6IHZhbHVlXG5cdFx0XHRcdFx0XHRcdFx0Y2FzZSBpbmRleCA9IHNpemVvZihjaGlsZHJlbikgLSAxOiBjYXNlIDI6XG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gaW5kZXggPT09IDIgPyB2YWx1ZSArIGVsZW1lbnQgKyBlbGVtZW50IDogdmFsdWUgKyBlbGVtZW50XG5cdFx0XHRcdFx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybiB2YWx1ZVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KVxuXHRcdFx0fSlcblx0fVxufVxuIiwiLyogZXNsaW50LWRpc2FibGUgKi9cbi8vIEluc3BpcmVkIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9nYXJ5Y291cnQvbXVybXVyaGFzaC1qc1xuLy8gUG9ydGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2FhcHBsZWJ5L3NtaGFzaGVyL2Jsb2IvNjFhMDUzMGYyODI3N2YyZTg1MGJmYzM5NjAwY2U2MWQwMmI1MThkZS9zcmMvTXVybXVySGFzaDIuY3BwI0wzNy1MODZcbmZ1bmN0aW9uIG11cm11cjIoc3RyKSB7XG4gIC8vICdtJyBhbmQgJ3InIGFyZSBtaXhpbmcgY29uc3RhbnRzIGdlbmVyYXRlZCBvZmZsaW5lLlxuICAvLyBUaGV5J3JlIG5vdCByZWFsbHkgJ21hZ2ljJywgdGhleSBqdXN0IGhhcHBlbiB0byB3b3JrIHdlbGwuXG4gIC8vIGNvbnN0IG0gPSAweDViZDFlOTk1O1xuICAvLyBjb25zdCByID0gMjQ7XG4gIC8vIEluaXRpYWxpemUgdGhlIGhhc2hcbiAgdmFyIGggPSAwOyAvLyBNaXggNCBieXRlcyBhdCBhIHRpbWUgaW50byB0aGUgaGFzaFxuXG4gIHZhciBrLFxuICAgICAgaSA9IDAsXG4gICAgICBsZW4gPSBzdHIubGVuZ3RoO1xuXG4gIGZvciAoOyBsZW4gPj0gNDsgKytpLCBsZW4gLT0gNCkge1xuICAgIGsgPSBzdHIuY2hhckNvZGVBdChpKSAmIDB4ZmYgfCAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDggfCAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDE2IHwgKHN0ci5jaGFyQ29kZUF0KCsraSkgJiAweGZmKSA8PCAyNDtcbiAgICBrID1cbiAgICAvKiBNYXRoLmltdWwoaywgbSk6ICovXG4gICAgKGsgJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoayA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgICBrIF49XG4gICAgLyogayA+Pj4gcjogKi9cbiAgICBrID4+PiAyNDtcbiAgICBoID1cbiAgICAvKiBNYXRoLmltdWwoaywgbSk6ICovXG4gICAgKGsgJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoayA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KSBeXG4gICAgLyogTWF0aC5pbXVsKGgsIG0pOiAqL1xuICAgIChoICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGggPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gIH0gLy8gSGFuZGxlIHRoZSBsYXN0IGZldyBieXRlcyBvZiB0aGUgaW5wdXQgYXJyYXlcblxuXG4gIHN3aXRjaCAobGVuKSB7XG4gICAgY2FzZSAzOlxuICAgICAgaCBePSAoc3RyLmNoYXJDb2RlQXQoaSArIDIpICYgMHhmZikgPDwgMTY7XG5cbiAgICBjYXNlIDI6XG4gICAgICBoIF49IChzdHIuY2hhckNvZGVBdChpICsgMSkgJiAweGZmKSA8PCA4O1xuXG4gICAgY2FzZSAxOlxuICAgICAgaCBePSBzdHIuY2hhckNvZGVBdChpKSAmIDB4ZmY7XG4gICAgICBoID1cbiAgICAgIC8qIE1hdGguaW11bChoLCBtKTogKi9cbiAgICAgIChoICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGggPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gIH0gLy8gRG8gYSBmZXcgZmluYWwgbWl4ZXMgb2YgdGhlIGhhc2ggdG8gZW5zdXJlIHRoZSBsYXN0IGZld1xuICAvLyBieXRlcyBhcmUgd2VsbC1pbmNvcnBvcmF0ZWQuXG5cblxuICBoIF49IGggPj4+IDEzO1xuICBoID1cbiAgLyogTWF0aC5pbXVsKGgsIG0pOiAqL1xuICAoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChoID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICByZXR1cm4gKChoIF4gaCA+Pj4gMTUpID4+PiAwKS50b1N0cmluZygzNik7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG11cm11cjI7XG4iLCJ2YXIgdW5pdGxlc3NLZXlzID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogMSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IDEsXG4gIGJvcmRlckltYWdlU2xpY2U6IDEsXG4gIGJvcmRlckltYWdlV2lkdGg6IDEsXG4gIGJveEZsZXg6IDEsXG4gIGJveEZsZXhHcm91cDogMSxcbiAgYm94T3JkaW5hbEdyb3VwOiAxLFxuICBjb2x1bW5Db3VudDogMSxcbiAgY29sdW1uczogMSxcbiAgZmxleDogMSxcbiAgZmxleEdyb3c6IDEsXG4gIGZsZXhQb3NpdGl2ZTogMSxcbiAgZmxleFNocmluazogMSxcbiAgZmxleE5lZ2F0aXZlOiAxLFxuICBmbGV4T3JkZXI6IDEsXG4gIGdyaWRSb3c6IDEsXG4gIGdyaWRSb3dFbmQ6IDEsXG4gIGdyaWRSb3dTcGFuOiAxLFxuICBncmlkUm93U3RhcnQ6IDEsXG4gIGdyaWRDb2x1bW46IDEsXG4gIGdyaWRDb2x1bW5FbmQ6IDEsXG4gIGdyaWRDb2x1bW5TcGFuOiAxLFxuICBncmlkQ29sdW1uU3RhcnQ6IDEsXG4gIG1zR3JpZFJvdzogMSxcbiAgbXNHcmlkUm93U3BhbjogMSxcbiAgbXNHcmlkQ29sdW1uOiAxLFxuICBtc0dyaWRDb2x1bW5TcGFuOiAxLFxuICBmb250V2VpZ2h0OiAxLFxuICBsaW5lSGVpZ2h0OiAxLFxuICBvcGFjaXR5OiAxLFxuICBvcmRlcjogMSxcbiAgb3JwaGFuczogMSxcbiAgdGFiU2l6ZTogMSxcbiAgd2lkb3dzOiAxLFxuICB6SW5kZXg6IDEsXG4gIHpvb206IDEsXG4gIFdlYmtpdExpbmVDbGFtcDogMSxcbiAgLy8gU1ZHLXJlbGF0ZWQgcHJvcGVydGllc1xuICBmaWxsT3BhY2l0eTogMSxcbiAgZmxvb2RPcGFjaXR5OiAxLFxuICBzdG9wT3BhY2l0eTogMSxcbiAgc3Ryb2tlRGFzaGFycmF5OiAxLFxuICBzdHJva2VEYXNob2Zmc2V0OiAxLFxuICBzdHJva2VNaXRlcmxpbWl0OiAxLFxuICBzdHJva2VPcGFjaXR5OiAxLFxuICBzdHJva2VXaWR0aDogMVxufTtcblxuZXhwb3J0IGRlZmF1bHQgdW5pdGxlc3NLZXlzO1xuIiwiaW1wb3J0IGhhc2hTdHJpbmcgZnJvbSAnQGVtb3Rpb24vaGFzaCc7XG5pbXBvcnQgdW5pdGxlc3MgZnJvbSAnQGVtb3Rpb24vdW5pdGxlc3MnO1xuaW1wb3J0IG1lbW9pemUgZnJvbSAnQGVtb3Rpb24vbWVtb2l6ZSc7XG5cbnZhciBJTExFR0FMX0VTQ0FQRV9TRVFVRU5DRV9FUlJPUiA9IFwiWW91IGhhdmUgaWxsZWdhbCBlc2NhcGUgc2VxdWVuY2UgaW4geW91ciB0ZW1wbGF0ZSBsaXRlcmFsLCBtb3N0IGxpa2VseSBpbnNpZGUgY29udGVudCdzIHByb3BlcnR5IHZhbHVlLlxcbkJlY2F1c2UgeW91IHdyaXRlIHlvdXIgQ1NTIGluc2lkZSBhIEphdmFTY3JpcHQgc3RyaW5nIHlvdSBhY3R1YWxseSBoYXZlIHRvIGRvIGRvdWJsZSBlc2NhcGluZywgc28gZm9yIGV4YW1wbGUgXFxcImNvbnRlbnQ6ICdcXFxcMDBkNyc7XFxcIiBzaG91bGQgYmVjb21lIFxcXCJjb250ZW50OiAnXFxcXFxcXFwwMGQ3JztcXFwiLlxcbllvdSBjYW4gcmVhZCBtb3JlIGFib3V0IHRoaXMgaGVyZTpcXG5odHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9UZW1wbGF0ZV9saXRlcmFscyNFUzIwMThfcmV2aXNpb25fb2ZfaWxsZWdhbF9lc2NhcGVfc2VxdWVuY2VzXCI7XG52YXIgVU5ERUZJTkVEX0FTX09CSkVDVF9LRVlfRVJST1IgPSBcIllvdSBoYXZlIHBhc3NlZCBpbiBmYWxzeSB2YWx1ZSBhcyBzdHlsZSBvYmplY3QncyBrZXkgKGNhbiBoYXBwZW4gd2hlbiBpbiBleGFtcGxlIHlvdSBwYXNzIHVuZXhwb3J0ZWQgY29tcG9uZW50IGFzIGNvbXB1dGVkIGtleSkuXCI7XG52YXIgaHlwaGVuYXRlUmVnZXggPSAvW0EtWl18Xm1zL2c7XG52YXIgYW5pbWF0aW9uUmVnZXggPSAvX0VNT18oW15fXSs/KV8oW15dKj8pX0VNT18vZztcblxudmFyIGlzQ3VzdG9tUHJvcGVydHkgPSBmdW5jdGlvbiBpc0N1c3RvbVByb3BlcnR5KHByb3BlcnR5KSB7XG4gIHJldHVybiBwcm9wZXJ0eS5jaGFyQ29kZUF0KDEpID09PSA0NTtcbn07XG5cbnZhciBpc1Byb2Nlc3NhYmxlVmFsdWUgPSBmdW5jdGlvbiBpc1Byb2Nlc3NhYmxlVmFsdWUodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlICE9PSAnYm9vbGVhbic7XG59O1xuXG52YXIgcHJvY2Vzc1N0eWxlTmFtZSA9IC8qICNfX1BVUkVfXyAqL21lbW9pemUoZnVuY3Rpb24gKHN0eWxlTmFtZSkge1xuICByZXR1cm4gaXNDdXN0b21Qcm9wZXJ0eShzdHlsZU5hbWUpID8gc3R5bGVOYW1lIDogc3R5bGVOYW1lLnJlcGxhY2UoaHlwaGVuYXRlUmVnZXgsICctJCYnKS50b0xvd2VyQ2FzZSgpO1xufSk7XG5cbnZhciBwcm9jZXNzU3R5bGVWYWx1ZSA9IGZ1bmN0aW9uIHByb2Nlc3NTdHlsZVZhbHVlKGtleSwgdmFsdWUpIHtcbiAgc3dpdGNoIChrZXkpIHtcbiAgICBjYXNlICdhbmltYXRpb24nOlxuICAgIGNhc2UgJ2FuaW1hdGlvbk5hbWUnOlxuICAgICAge1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKGFuaW1hdGlvblJlZ2V4LCBmdW5jdGlvbiAobWF0Y2gsIHAxLCBwMikge1xuICAgICAgICAgICAgY3Vyc29yID0ge1xuICAgICAgICAgICAgICBuYW1lOiBwMSxcbiAgICAgICAgICAgICAgc3R5bGVzOiBwMixcbiAgICAgICAgICAgICAgbmV4dDogY3Vyc29yXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHAxO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gIH1cblxuICBpZiAodW5pdGxlc3Nba2V5XSAhPT0gMSAmJiAhaXNDdXN0b21Qcm9wZXJ0eShrZXkpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgdmFsdWUgIT09IDApIHtcbiAgICByZXR1cm4gdmFsdWUgKyAncHgnO1xuICB9XG5cbiAgcmV0dXJuIHZhbHVlO1xufTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIGNvbnRlbnRWYWx1ZVBhdHRlcm4gPSAvKGF0dHJ8Y2FsY3xjb3VudGVycz98dXJsKVxcKC87XG4gIHZhciBjb250ZW50VmFsdWVzID0gWydub3JtYWwnLCAnbm9uZScsICdjb3VudGVyJywgJ29wZW4tcXVvdGUnLCAnY2xvc2UtcXVvdGUnLCAnbm8tb3Blbi1xdW90ZScsICduby1jbG9zZS1xdW90ZScsICdpbml0aWFsJywgJ2luaGVyaXQnLCAndW5zZXQnXTtcbiAgdmFyIG9sZFByb2Nlc3NTdHlsZVZhbHVlID0gcHJvY2Vzc1N0eWxlVmFsdWU7XG4gIHZhciBtc1BhdHRlcm4gPSAvXi1tcy0vO1xuICB2YXIgaHlwaGVuUGF0dGVybiA9IC8tKC4pL2c7XG4gIHZhciBoeXBoZW5hdGVkQ2FjaGUgPSB7fTtcblxuICBwcm9jZXNzU3R5bGVWYWx1ZSA9IGZ1bmN0aW9uIHByb2Nlc3NTdHlsZVZhbHVlKGtleSwgdmFsdWUpIHtcbiAgICBpZiAoa2V5ID09PSAnY29udGVudCcpIHtcbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnIHx8IGNvbnRlbnRWYWx1ZXMuaW5kZXhPZih2YWx1ZSkgPT09IC0xICYmICFjb250ZW50VmFsdWVQYXR0ZXJuLnRlc3QodmFsdWUpICYmICh2YWx1ZS5jaGFyQXQoMCkgIT09IHZhbHVlLmNoYXJBdCh2YWx1ZS5sZW5ndGggLSAxKSB8fCB2YWx1ZS5jaGFyQXQoMCkgIT09ICdcIicgJiYgdmFsdWUuY2hhckF0KDApICE9PSBcIidcIikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IHNlZW0gdG8gYmUgdXNpbmcgYSB2YWx1ZSBmb3IgJ2NvbnRlbnQnIHdpdGhvdXQgcXVvdGVzLCB0cnkgcmVwbGFjaW5nIGl0IHdpdGggYGNvbnRlbnQ6ICdcXFwiXCIgKyB2YWx1ZSArIFwiXFxcIidgXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBwcm9jZXNzZWQgPSBvbGRQcm9jZXNzU3R5bGVWYWx1ZShrZXksIHZhbHVlKTtcblxuICAgIGlmIChwcm9jZXNzZWQgIT09ICcnICYmICFpc0N1c3RvbVByb3BlcnR5KGtleSkgJiYga2V5LmluZGV4T2YoJy0nKSAhPT0gLTEgJiYgaHlwaGVuYXRlZENhY2hlW2tleV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgaHlwaGVuYXRlZENhY2hlW2tleV0gPSB0cnVlO1xuICAgICAgY29uc29sZS5lcnJvcihcIlVzaW5nIGtlYmFiLWNhc2UgZm9yIGNzcyBwcm9wZXJ0aWVzIGluIG9iamVjdHMgaXMgbm90IHN1cHBvcnRlZC4gRGlkIHlvdSBtZWFuIFwiICsga2V5LnJlcGxhY2UobXNQYXR0ZXJuLCAnbXMtJykucmVwbGFjZShoeXBoZW5QYXR0ZXJuLCBmdW5jdGlvbiAoc3RyLCBfY2hhcikge1xuICAgICAgICByZXR1cm4gX2NoYXIudG9VcHBlckNhc2UoKTtcbiAgICAgIH0pICsgXCI/XCIpO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9jZXNzZWQ7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIGludGVycG9sYXRpb24pIHtcbiAgaWYgKGludGVycG9sYXRpb24gPT0gbnVsbCkge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGlmIChpbnRlcnBvbGF0aW9uLl9fZW1vdGlvbl9zdHlsZXMgIT09IHVuZGVmaW5lZCkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGludGVycG9sYXRpb24udG9TdHJpbmcoKSA9PT0gJ05PX0NPTVBPTkVOVF9TRUxFQ1RPUicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ29tcG9uZW50IHNlbGVjdG9ycyBjYW4gb25seSBiZSB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGggQGVtb3Rpb24vYmFiZWwtcGx1Z2luLicpO1xuICAgIH1cblxuICAgIHJldHVybiBpbnRlcnBvbGF0aW9uO1xuICB9XG5cbiAgc3dpdGNoICh0eXBlb2YgaW50ZXJwb2xhdGlvbikge1xuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9XG5cbiAgICBjYXNlICdvYmplY3QnOlxuICAgICAge1xuICAgICAgICBpZiAoaW50ZXJwb2xhdGlvbi5hbmltID09PSAxKSB7XG4gICAgICAgICAgY3Vyc29yID0ge1xuICAgICAgICAgICAgbmFtZTogaW50ZXJwb2xhdGlvbi5uYW1lLFxuICAgICAgICAgICAgc3R5bGVzOiBpbnRlcnBvbGF0aW9uLnN0eWxlcyxcbiAgICAgICAgICAgIG5leHQ6IGN1cnNvclxuICAgICAgICAgIH07XG4gICAgICAgICAgcmV0dXJuIGludGVycG9sYXRpb24ubmFtZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbnRlcnBvbGF0aW9uLnN0eWxlcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdmFyIG5leHQgPSBpbnRlcnBvbGF0aW9uLm5leHQ7XG5cbiAgICAgICAgICBpZiAobmV4dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAvLyBub3QgdGhlIG1vc3QgZWZmaWNpZW50IHRoaW5nIGV2ZXIgYnV0IHRoaXMgaXMgYSBwcmV0dHkgcmFyZSBjYXNlXG4gICAgICAgICAgICAvLyBhbmQgdGhlcmUgd2lsbCBiZSB2ZXJ5IGZldyBpdGVyYXRpb25zIG9mIHRoaXMgZ2VuZXJhbGx5XG4gICAgICAgICAgICB3aGlsZSAobmV4dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIGN1cnNvciA9IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBuZXh0Lm5hbWUsXG4gICAgICAgICAgICAgICAgc3R5bGVzOiBuZXh0LnN0eWxlcyxcbiAgICAgICAgICAgICAgICBuZXh0OiBjdXJzb3JcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgbmV4dCA9IG5leHQubmV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgc3R5bGVzID0gaW50ZXJwb2xhdGlvbi5zdHlsZXMgKyBcIjtcIjtcblxuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGludGVycG9sYXRpb24ubWFwICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHN0eWxlcyArPSBpbnRlcnBvbGF0aW9uLm1hcDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gc3R5bGVzO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNyZWF0ZVN0cmluZ0Zyb21PYmplY3QobWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIGludGVycG9sYXRpb24pO1xuICAgICAgfVxuXG4gICAgY2FzZSAnZnVuY3Rpb24nOlxuICAgICAge1xuICAgICAgICBpZiAobWVyZ2VkUHJvcHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHZhciBwcmV2aW91c0N1cnNvciA9IGN1cnNvcjtcbiAgICAgICAgICB2YXIgcmVzdWx0ID0gaW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcyk7XG4gICAgICAgICAgY3Vyc29yID0gcHJldmlvdXNDdXJzb3I7XG4gICAgICAgICAgcmV0dXJuIGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIHJlc3VsdCk7XG4gICAgICAgIH0gZWxzZSBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Z1bmN0aW9ucyB0aGF0IGFyZSBpbnRlcnBvbGF0ZWQgaW4gY3NzIGNhbGxzIHdpbGwgYmUgc3RyaW5naWZpZWQuXFxuJyArICdJZiB5b3Ugd2FudCB0byBoYXZlIGEgY3NzIGNhbGwgYmFzZWQgb24gcHJvcHMsIGNyZWF0ZSBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIGNzcyBjYWxsIGxpa2UgdGhpc1xcbicgKyAnbGV0IGR5bmFtaWNTdHlsZSA9IChwcm9wcykgPT4gY3NzYGNvbG9yOiAke3Byb3BzLmNvbG9yfWBcXG4nICsgJ0l0IGNhbiBiZSBjYWxsZWQgZGlyZWN0bHkgd2l0aCBwcm9wcyBvciBpbnRlcnBvbGF0ZWQgaW4gYSBzdHlsZWQgY2FsbCBsaWtlIHRoaXNcXG4nICsgXCJsZXQgU29tZUNvbXBvbmVudCA9IHN0eWxlZCgnZGl2JylgJHtkeW5hbWljU3R5bGV9YFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHZhciBtYXRjaGVkID0gW107XG4gICAgICAgIHZhciByZXBsYWNlZCA9IGludGVycG9sYXRpb24ucmVwbGFjZShhbmltYXRpb25SZWdleCwgZnVuY3Rpb24gKG1hdGNoLCBwMSwgcDIpIHtcbiAgICAgICAgICB2YXIgZmFrZVZhck5hbWUgPSBcImFuaW1hdGlvblwiICsgbWF0Y2hlZC5sZW5ndGg7XG4gICAgICAgICAgbWF0Y2hlZC5wdXNoKFwiY29uc3QgXCIgKyBmYWtlVmFyTmFtZSArIFwiID0ga2V5ZnJhbWVzYFwiICsgcDIucmVwbGFjZSgvXkBrZXlmcmFtZXMgYW5pbWF0aW9uLVxcdysvLCAnJykgKyBcImBcIik7XG4gICAgICAgICAgcmV0dXJuIFwiJHtcIiArIGZha2VWYXJOYW1lICsgXCJ9XCI7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChtYXRjaGVkLmxlbmd0aCkge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ2BrZXlmcmFtZXNgIG91dHB1dCBnb3QgaW50ZXJwb2xhdGVkIGludG8gcGxhaW4gc3RyaW5nLCBwbGVhc2Ugd3JhcCBpdCB3aXRoIGBjc3NgLlxcblxcbicgKyAnSW5zdGVhZCBvZiBkb2luZyB0aGlzOlxcblxcbicgKyBbXS5jb25jYXQobWF0Y2hlZCwgW1wiYFwiICsgcmVwbGFjZWQgKyBcImBcIl0pLmpvaW4oJ1xcbicpICsgJ1xcblxcbllvdSBzaG91bGQgd3JhcCBpdCB3aXRoIGBjc3NgIGxpa2UgdGhpczpcXG5cXG4nICsgKFwiY3NzYFwiICsgcmVwbGFjZWQgKyBcImBcIikpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGJyZWFrO1xuICB9IC8vIGZpbmFsaXplIHN0cmluZyB2YWx1ZXMgKHJlZ3VsYXIgc3RyaW5ncyBhbmQgZnVuY3Rpb25zIGludGVycG9sYXRlZCBpbnRvIGNzcyBjYWxscylcblxuXG4gIGlmIChyZWdpc3RlcmVkID09IG51bGwpIHtcbiAgICByZXR1cm4gaW50ZXJwb2xhdGlvbjtcbiAgfVxuXG4gIHZhciBjYWNoZWQgPSByZWdpc3RlcmVkW2ludGVycG9sYXRpb25dO1xuICByZXR1cm4gY2FjaGVkICE9PSB1bmRlZmluZWQgPyBjYWNoZWQgOiBpbnRlcnBvbGF0aW9uO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHJpbmdGcm9tT2JqZWN0KG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCBvYmopIHtcbiAgdmFyIHN0cmluZyA9ICcnO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iai5sZW5ndGg7IGkrKykge1xuICAgICAgc3RyaW5nICs9IGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIG9ialtpXSkgKyBcIjtcIjtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZm9yICh2YXIgX2tleSBpbiBvYmopIHtcbiAgICAgIHZhciB2YWx1ZSA9IG9ialtfa2V5XTtcblxuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgaWYgKHJlZ2lzdGVyZWQgIT0gbnVsbCAmJiByZWdpc3RlcmVkW3ZhbHVlXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgc3RyaW5nICs9IF9rZXkgKyBcIntcIiArIHJlZ2lzdGVyZWRbdmFsdWVdICsgXCJ9XCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNQcm9jZXNzYWJsZVZhbHVlKHZhbHVlKSkge1xuICAgICAgICAgIHN0cmluZyArPSBwcm9jZXNzU3R5bGVOYW1lKF9rZXkpICsgXCI6XCIgKyBwcm9jZXNzU3R5bGVWYWx1ZShfa2V5LCB2YWx1ZSkgKyBcIjtcIjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKF9rZXkgPT09ICdOT19DT01QT05FTlRfU0VMRUNUT1InICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvbXBvbmVudCBzZWxlY3RvcnMgY2FuIG9ubHkgYmUgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIEBlbW90aW9uL2JhYmVsLXBsdWdpbi4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSAmJiB0eXBlb2YgdmFsdWVbMF0gPT09ICdzdHJpbmcnICYmIChyZWdpc3RlcmVkID09IG51bGwgfHwgcmVnaXN0ZXJlZFt2YWx1ZVswXV0gPT09IHVuZGVmaW5lZCkpIHtcbiAgICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgdmFsdWUubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBpZiAoaXNQcm9jZXNzYWJsZVZhbHVlKHZhbHVlW19pXSkpIHtcbiAgICAgICAgICAgICAgc3RyaW5nICs9IHByb2Nlc3NTdHlsZU5hbWUoX2tleSkgKyBcIjpcIiArIHByb2Nlc3NTdHlsZVZhbHVlKF9rZXksIHZhbHVlW19pXSkgKyBcIjtcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIGludGVycG9sYXRlZCA9IGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIHZhbHVlKTtcblxuICAgICAgICAgIHN3aXRjaCAoX2tleSkge1xuICAgICAgICAgICAgY2FzZSAnYW5pbWF0aW9uJzpcbiAgICAgICAgICAgIGNhc2UgJ2FuaW1hdGlvbk5hbWUnOlxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RyaW5nICs9IHByb2Nlc3NTdHlsZU5hbWUoX2tleSkgKyBcIjpcIiArIGludGVycG9sYXRlZCArIFwiO1wiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBfa2V5ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihVTkRFRklORURfQVNfT0JKRUNUX0tFWV9FUlJPUik7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgc3RyaW5nICs9IF9rZXkgKyBcIntcIiArIGludGVycG9sYXRlZCArIFwifVwiO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZztcbn1cblxudmFyIGxhYmVsUGF0dGVybiA9IC9sYWJlbDpcXHMqKFteXFxzO1xcbntdKylcXHMqOy9nO1xudmFyIHNvdXJjZU1hcFBhdHRlcm47XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHNvdXJjZU1hcFBhdHRlcm4gPSAvXFwvXFwqI1xcc3NvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvblxcL2pzb247XFxTK1xccytcXCpcXC8vZztcbn0gLy8gdGhpcyBpcyB0aGUgY3Vyc29yIGZvciBrZXlmcmFtZXNcbi8vIGtleWZyYW1lcyBhcmUgc3RvcmVkIG9uIHRoZSBTZXJpYWxpemVkU3R5bGVzIG9iamVjdCBhcyBhIGxpbmtlZCBsaXN0XG5cblxudmFyIGN1cnNvcjtcbnZhciBzZXJpYWxpemVTdHlsZXMgPSBmdW5jdGlvbiBzZXJpYWxpemVTdHlsZXMoYXJncywgcmVnaXN0ZXJlZCwgbWVyZ2VkUHJvcHMpIHtcbiAgaWYgKGFyZ3MubGVuZ3RoID09PSAxICYmIHR5cGVvZiBhcmdzWzBdID09PSAnb2JqZWN0JyAmJiBhcmdzWzBdICE9PSBudWxsICYmIGFyZ3NbMF0uc3R5bGVzICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gYXJnc1swXTtcbiAgfVxuXG4gIHZhciBzdHJpbmdNb2RlID0gdHJ1ZTtcbiAgdmFyIHN0eWxlcyA9ICcnO1xuICBjdXJzb3IgPSB1bmRlZmluZWQ7XG4gIHZhciBzdHJpbmdzID0gYXJnc1swXTtcblxuICBpZiAoc3RyaW5ncyA9PSBudWxsIHx8IHN0cmluZ3MucmF3ID09PSB1bmRlZmluZWQpIHtcbiAgICBzdHJpbmdNb2RlID0gZmFsc2U7XG4gICAgc3R5bGVzICs9IGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIHN0cmluZ3MpO1xuICB9IGVsc2Uge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHN0cmluZ3NbMF0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgY29uc29sZS5lcnJvcihJTExFR0FMX0VTQ0FQRV9TRVFVRU5DRV9FUlJPUik7XG4gICAgfVxuXG4gICAgc3R5bGVzICs9IHN0cmluZ3NbMF07XG4gIH0gLy8gd2Ugc3RhcnQgYXQgMSBzaW5jZSB3ZSd2ZSBhbHJlYWR5IGhhbmRsZWQgdGhlIGZpcnN0IGFyZ1xuXG5cbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgc3R5bGVzICs9IGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIGFyZ3NbaV0pO1xuXG4gICAgaWYgKHN0cmluZ01vZGUpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHN0cmluZ3NbaV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKElMTEVHQUxfRVNDQVBFX1NFUVVFTkNFX0VSUk9SKTtcbiAgICAgIH1cblxuICAgICAgc3R5bGVzICs9IHN0cmluZ3NbaV07XG4gICAgfVxuICB9XG5cbiAgdmFyIHNvdXJjZU1hcDtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHN0eWxlcyA9IHN0eWxlcy5yZXBsYWNlKHNvdXJjZU1hcFBhdHRlcm4sIGZ1bmN0aW9uIChtYXRjaCkge1xuICAgICAgc291cmNlTWFwID0gbWF0Y2g7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfSk7XG4gIH0gLy8gdXNpbmcgYSBnbG9iYWwgcmVnZXggd2l0aCAuZXhlYyBpcyBzdGF0ZWZ1bCBzbyBsYXN0SW5kZXggaGFzIHRvIGJlIHJlc2V0IGVhY2ggdGltZVxuXG5cbiAgbGFiZWxQYXR0ZXJuLmxhc3RJbmRleCA9IDA7XG4gIHZhciBpZGVudGlmaWVyTmFtZSA9ICcnO1xuICB2YXIgbWF0Y2g7IC8vIGh0dHBzOi8vZXNiZW5jaC5jb20vYmVuY2gvNWI4MDljMmNmMjk0OTgwMGEwZjYxZmI1XG5cbiAgd2hpbGUgKChtYXRjaCA9IGxhYmVsUGF0dGVybi5leGVjKHN0eWxlcykpICE9PSBudWxsKSB7XG4gICAgaWRlbnRpZmllck5hbWUgKz0gJy0nICsgLy8gJEZsb3dGaXhNZSB3ZSBrbm93IGl0J3Mgbm90IG51bGxcbiAgICBtYXRjaFsxXTtcbiAgfVxuXG4gIHZhciBuYW1lID0gaGFzaFN0cmluZyhzdHlsZXMpICsgaWRlbnRpZmllck5hbWU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyAkRmxvd0ZpeE1lIFNlcmlhbGl6ZWRTdHlsZXMgdHlwZSBkb2Vzbid0IGhhdmUgdG9TdHJpbmcgcHJvcGVydHkgKGFuZCB3ZSBkb24ndCB3YW50IHRvIGFkZCBpdClcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogbmFtZSxcbiAgICAgIHN0eWxlczogc3R5bGVzLFxuICAgICAgbWFwOiBzb3VyY2VNYXAsXG4gICAgICBuZXh0OiBjdXJzb3IsXG4gICAgICB0b1N0cmluZzogZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBcIllvdSBoYXZlIHRyaWVkIHRvIHN0cmluZ2lmeSBvYmplY3QgcmV0dXJuZWQgZnJvbSBgY3NzYCBmdW5jdGlvbi4gSXQgaXNuJ3Qgc3VwcG9zZWQgdG8gYmUgdXNlZCBkaXJlY3RseSAoZS5nLiBhcyB2YWx1ZSBvZiB0aGUgYGNsYXNzTmFtZWAgcHJvcCksIGJ1dCByYXRoZXIgaGFuZGVkIHRvIGVtb3Rpb24gc28gaXQgY2FuIGhhbmRsZSBpdCAoZS5nLiBhcyB2YWx1ZSBvZiBgY3NzYCBwcm9wKS5cIjtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBuYW1lLFxuICAgIHN0eWxlczogc3R5bGVzLFxuICAgIG5leHQ6IGN1cnNvclxuICB9O1xufTtcblxuZXhwb3J0IHsgc2VyaWFsaXplU3R5bGVzIH07XG4iLCJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgaWYgKGNhY2hlW2FyZ10gPT09IHVuZGVmaW5lZCkgY2FjaGVbYXJnXSA9IGZuKGFyZyk7XG4gICAgcmV0dXJuIGNhY2hlW2FyZ107XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1lbW9pemU7XG4iLCJpbXBvcnQgeyBjcmVhdGVDb250ZXh0LCBmb3J3YXJkUmVmLCB1c2VDb250ZXh0LCBjcmVhdGVFbGVtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNyZWF0ZUNhY2hlIGZyb20gJ0BlbW90aW9uL2NhY2hlJztcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCB3ZWFrTWVtb2l6ZSBmcm9tICdAZW1vdGlvbi93ZWFrLW1lbW9pemUnO1xuaW1wb3J0IGhvaXN0Tm9uUmVhY3RTdGF0aWNzIGZyb20gJy4uL2lzb2xhdGVkLWhvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLWRvLW5vdC11c2UtdGhpcy1pbi15b3VyLWNvZGUvZGlzdC9lbW90aW9uLXJlYWN0LWlzb2xhdGVkLWhvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLWRvLW5vdC11c2UtdGhpcy1pbi15b3VyLWNvZGUuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgZ2V0UmVnaXN0ZXJlZFN0eWxlcywgaW5zZXJ0U3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vdXRpbHMnO1xuaW1wb3J0IHsgc2VyaWFsaXplU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vc2VyaWFsaXplJztcblxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxudmFyIEVtb3Rpb25DYWNoZUNvbnRleHQgPSAvKiAjX19QVVJFX18gKi9jcmVhdGVDb250ZXh0KCAvLyB3ZSdyZSBkb2luZyB0aGlzIHRvIGF2b2lkIHByZWNvbnN0cnVjdCdzIGRlYWQgY29kZSBlbGltaW5hdGlvbiBpbiB0aGlzIG9uZSBjYXNlXG4vLyBiZWNhdXNlIHRoaXMgbW9kdWxlIGlzIHByaW1hcmlseSBpbnRlbmRlZCBmb3IgdGhlIGJyb3dzZXIgYW5kIG5vZGVcbi8vIGJ1dCBpdCdzIGFsc28gcmVxdWlyZWQgaW4gcmVhY3QgbmF0aXZlIGFuZCBzaW1pbGFyIGVudmlyb25tZW50cyBzb21ldGltZXNcbi8vIGFuZCB3ZSBjb3VsZCBoYXZlIGEgc3BlY2lhbCBidWlsZCBqdXN0IGZvciB0aGF0XG4vLyBidXQgdGhpcyBpcyBtdWNoIGVhc2llciBhbmQgdGhlIG5hdGl2ZSBwYWNrYWdlc1xuLy8gbWlnaHQgdXNlIGEgZGlmZmVyZW50IHRoZW1lIGNvbnRleHQgaW4gdGhlIGZ1dHVyZSBhbnl3YXlcbnR5cGVvZiBIVE1MRWxlbWVudCAhPT0gJ3VuZGVmaW5lZCcgPyAvKiAjX19QVVJFX18gKi9jcmVhdGVDYWNoZSh7XG4gIGtleTogJ2Nzcydcbn0pIDogbnVsbCk7XG52YXIgQ2FjaGVQcm92aWRlciA9IEVtb3Rpb25DYWNoZUNvbnRleHQuUHJvdmlkZXI7XG5cbnZhciB3aXRoRW1vdGlvbkNhY2hlID0gZnVuY3Rpb24gd2l0aEVtb3Rpb25DYWNoZShmdW5jKSB7XG4gIC8vICRGbG93Rml4TWVcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9mb3J3YXJkUmVmKGZ1bmN0aW9uIChwcm9wcywgcmVmKSB7XG4gICAgLy8gdGhlIGNhY2hlIHdpbGwgbmV2ZXIgYmUgbnVsbCBpbiB0aGUgYnJvd3NlclxuICAgIHZhciBjYWNoZSA9IHVzZUNvbnRleHQoRW1vdGlvbkNhY2hlQ29udGV4dCk7XG4gICAgcmV0dXJuIGZ1bmMocHJvcHMsIGNhY2hlLCByZWYpO1xuICB9KTtcbn07XG5cbnZhciBUaGVtZUNvbnRleHQgPSAvKiAjX19QVVJFX18gKi9jcmVhdGVDb250ZXh0KHt9KTtcbnZhciB1c2VUaGVtZSA9IGZ1bmN0aW9uIHVzZVRoZW1lKCkge1xuICByZXR1cm4gdXNlQ29udGV4dChUaGVtZUNvbnRleHQpO1xufTtcblxudmFyIGdldFRoZW1lID0gZnVuY3Rpb24gZ2V0VGhlbWUob3V0ZXJUaGVtZSwgdGhlbWUpIHtcbiAgaWYgKHR5cGVvZiB0aGVtZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBtZXJnZWRUaGVtZSA9IHRoZW1lKG91dGVyVGhlbWUpO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgKG1lcmdlZFRoZW1lID09IG51bGwgfHwgdHlwZW9mIG1lcmdlZFRoZW1lICE9PSAnb2JqZWN0JyB8fCBBcnJheS5pc0FycmF5KG1lcmdlZFRoZW1lKSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignW1RoZW1lUHJvdmlkZXJdIFBsZWFzZSByZXR1cm4gYW4gb2JqZWN0IGZyb20geW91ciB0aGVtZSBmdW5jdGlvbiwgaS5lLiB0aGVtZT17KCkgPT4gKHt9KX0hJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lcmdlZFRoZW1lO1xuICB9XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgKHRoZW1lID09IG51bGwgfHwgdHlwZW9mIHRoZW1lICE9PSAnb2JqZWN0JyB8fCBBcnJheS5pc0FycmF5KHRoZW1lKSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1tUaGVtZVByb3ZpZGVyXSBQbGVhc2UgbWFrZSB5b3VyIHRoZW1lIHByb3AgYSBwbGFpbiBvYmplY3QnKTtcbiAgfVxuXG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgb3V0ZXJUaGVtZSwge30sIHRoZW1lKTtcbn07XG5cbnZhciBjcmVhdGVDYWNoZVdpdGhUaGVtZSA9IC8qICNfX1BVUkVfXyAqL3dlYWtNZW1vaXplKGZ1bmN0aW9uIChvdXRlclRoZW1lKSB7XG4gIHJldHVybiB3ZWFrTWVtb2l6ZShmdW5jdGlvbiAodGhlbWUpIHtcbiAgICByZXR1cm4gZ2V0VGhlbWUob3V0ZXJUaGVtZSwgdGhlbWUpO1xuICB9KTtcbn0pO1xudmFyIFRoZW1lUHJvdmlkZXIgPSBmdW5jdGlvbiBUaGVtZVByb3ZpZGVyKHByb3BzKSB7XG4gIHZhciB0aGVtZSA9IHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTtcblxuICBpZiAocHJvcHMudGhlbWUgIT09IHRoZW1lKSB7XG4gICAgdGhlbWUgPSBjcmVhdGVDYWNoZVdpdGhUaGVtZSh0aGVtZSkocHJvcHMudGhlbWUpO1xuICB9XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KFRoZW1lQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiB0aGVtZVxuICB9LCBwcm9wcy5jaGlsZHJlbik7XG59O1xuZnVuY3Rpb24gd2l0aFRoZW1lKENvbXBvbmVudCkge1xuICB2YXIgY29tcG9uZW50TmFtZSA9IENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSB8fCAnQ29tcG9uZW50JztcblxuICB2YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKHByb3BzLCByZWYpIHtcbiAgICB2YXIgdGhlbWUgPSB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe1xuICAgICAgdGhlbWU6IHRoZW1lLFxuICAgICAgcmVmOiByZWZcbiAgICB9LCBwcm9wcykpO1xuICB9OyAvLyAkRmxvd0ZpeE1lXG5cblxuICB2YXIgV2l0aFRoZW1lID0gLyojX19QVVJFX18qL2ZvcndhcmRSZWYocmVuZGVyKTtcbiAgV2l0aFRoZW1lLmRpc3BsYXlOYW1lID0gXCJXaXRoVGhlbWUoXCIgKyBjb21wb25lbnROYW1lICsgXCIpXCI7XG4gIHJldHVybiBob2lzdE5vblJlYWN0U3RhdGljcyhXaXRoVGhlbWUsIENvbXBvbmVudCk7XG59XG5cbi8vIHRodXMgd2Ugb25seSBuZWVkIHRvIHJlcGxhY2Ugd2hhdCBpcyBhIHZhbGlkIGNoYXJhY3RlciBmb3IgSlMsIGJ1dCBub3QgZm9yIENTU1xuXG52YXIgc2FuaXRpemVJZGVudGlmaWVyID0gZnVuY3Rpb24gc2FuaXRpemVJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgcmV0dXJuIGlkZW50aWZpZXIucmVwbGFjZSgvXFwkL2csICctJyk7XG59O1xuXG52YXIgdHlwZVByb3BOYW1lID0gJ19fRU1PVElPTl9UWVBFX1BMRUFTRV9ET19OT1RfVVNFX18nO1xudmFyIGxhYmVsUHJvcE5hbWUgPSAnX19FTU9USU9OX0xBQkVMX1BMRUFTRV9ET19OT1RfVVNFX18nO1xudmFyIGNyZWF0ZUVtb3Rpb25Qcm9wcyA9IGZ1bmN0aW9uIGNyZWF0ZUVtb3Rpb25Qcm9wcyh0eXBlLCBwcm9wcykge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgcHJvcHMuY3NzID09PSAnc3RyaW5nJyAmJiAvLyBjaGVjayBpZiB0aGVyZSBpcyBhIGNzcyBkZWNsYXJhdGlvblxuICBwcm9wcy5jc3MuaW5kZXhPZignOicpICE9PSAtMSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlN0cmluZ3MgYXJlIG5vdCBhbGxvd2VkIGFzIGNzcyBwcm9wIHZhbHVlcywgcGxlYXNlIHdyYXAgaXQgaW4gYSBjc3MgdGVtcGxhdGUgbGl0ZXJhbCBmcm9tICdAZW1vdGlvbi9yZWFjdCcgbGlrZSB0aGlzOiBjc3NgXCIgKyBwcm9wcy5jc3MgKyBcImBcIik7XG4gIH1cblxuICB2YXIgbmV3UHJvcHMgPSB7fTtcblxuICBmb3IgKHZhciBrZXkgaW4gcHJvcHMpIHtcbiAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChwcm9wcywga2V5KSkge1xuICAgICAgbmV3UHJvcHNba2V5XSA9IHByb3BzW2tleV07XG4gICAgfVxuICB9XG5cbiAgbmV3UHJvcHNbdHlwZVByb3BOYW1lXSA9IHR5cGU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB2YXIgZXJyb3IgPSBuZXcgRXJyb3IoKTtcblxuICAgIGlmIChlcnJvci5zdGFjaykge1xuICAgICAgLy8gY2hyb21lXG4gICAgICB2YXIgbWF0Y2ggPSBlcnJvci5zdGFjay5tYXRjaCgvYXQgKD86T2JqZWN0XFwufE1vZHVsZVxcLnwpKD86anN4fGNyZWF0ZUVtb3Rpb25Qcm9wcykuKlxcblxccythdCAoPzpPYmplY3RcXC58KShbQS1aXVtBLVphLXowLTkkXSspIC8pO1xuXG4gICAgICBpZiAoIW1hdGNoKSB7XG4gICAgICAgIC8vIHNhZmFyaSBhbmQgZmlyZWZveFxuICAgICAgICBtYXRjaCA9IGVycm9yLnN0YWNrLm1hdGNoKC8uKlxcbihbQS1aXVtBLVphLXowLTkkXSspQC8pO1xuICAgICAgfVxuXG4gICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgbmV3UHJvcHNbbGFiZWxQcm9wTmFtZV0gPSBzYW5pdGl6ZUlkZW50aWZpZXIobWF0Y2hbMV0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXdQcm9wcztcbn07XG52YXIgRW1vdGlvbiA9IC8qICNfX1BVUkVfXyAqL3dpdGhFbW90aW9uQ2FjaGUoZnVuY3Rpb24gKHByb3BzLCBjYWNoZSwgcmVmKSB7XG4gIHZhciBjc3NQcm9wID0gcHJvcHMuY3NzOyAvLyBzbyB0aGF0IHVzaW5nIGBjc3NgIGZyb20gYGVtb3Rpb25gIGFuZCBwYXNzaW5nIHRoZSByZXN1bHQgdG8gdGhlIGNzcyBwcm9wIHdvcmtzXG4gIC8vIG5vdCBwYXNzaW5nIHRoZSByZWdpc3RlcmVkIGNhY2hlIHRvIHNlcmlhbGl6ZVN0eWxlcyBiZWNhdXNlIGl0IHdvdWxkXG4gIC8vIG1ha2UgY2VydGFpbiBiYWJlbCBvcHRpbWlzYXRpb25zIG5vdCBwb3NzaWJsZVxuXG4gIGlmICh0eXBlb2YgY3NzUHJvcCA9PT0gJ3N0cmluZycgJiYgY2FjaGUucmVnaXN0ZXJlZFtjc3NQcm9wXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgY3NzUHJvcCA9IGNhY2hlLnJlZ2lzdGVyZWRbY3NzUHJvcF07XG4gIH1cblxuICB2YXIgdHlwZSA9IHByb3BzW3R5cGVQcm9wTmFtZV07XG4gIHZhciByZWdpc3RlcmVkU3R5bGVzID0gW2Nzc1Byb3BdO1xuICB2YXIgY2xhc3NOYW1lID0gJyc7XG5cbiAgaWYgKHR5cGVvZiBwcm9wcy5jbGFzc05hbWUgPT09ICdzdHJpbmcnKSB7XG4gICAgY2xhc3NOYW1lID0gZ2V0UmVnaXN0ZXJlZFN0eWxlcyhjYWNoZS5yZWdpc3RlcmVkLCByZWdpc3RlcmVkU3R5bGVzLCBwcm9wcy5jbGFzc05hbWUpO1xuICB9IGVsc2UgaWYgKHByb3BzLmNsYXNzTmFtZSAhPSBudWxsKSB7XG4gICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lICsgXCIgXCI7XG4gIH1cblxuICB2YXIgc2VyaWFsaXplZCA9IHNlcmlhbGl6ZVN0eWxlcyhyZWdpc3RlcmVkU3R5bGVzLCB1bmRlZmluZWQsIHR5cGVvZiBjc3NQcm9wID09PSAnZnVuY3Rpb24nIHx8IEFycmF5LmlzQXJyYXkoY3NzUHJvcCkgPyB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCkgOiB1bmRlZmluZWQpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHNlcmlhbGl6ZWQubmFtZS5pbmRleE9mKCctJykgPT09IC0xKSB7XG4gICAgdmFyIGxhYmVsRnJvbVN0YWNrID0gcHJvcHNbbGFiZWxQcm9wTmFtZV07XG5cbiAgICBpZiAobGFiZWxGcm9tU3RhY2spIHtcbiAgICAgIHNlcmlhbGl6ZWQgPSBzZXJpYWxpemVTdHlsZXMoW3NlcmlhbGl6ZWQsICdsYWJlbDonICsgbGFiZWxGcm9tU3RhY2sgKyAnOyddKTtcbiAgICB9XG4gIH1cblxuICB2YXIgcnVsZXMgPSBpbnNlcnRTdHlsZXMoY2FjaGUsIHNlcmlhbGl6ZWQsIHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJyk7XG4gIGNsYXNzTmFtZSArPSBjYWNoZS5rZXkgKyBcIi1cIiArIHNlcmlhbGl6ZWQubmFtZTtcbiAgdmFyIG5ld1Byb3BzID0ge307XG5cbiAgZm9yICh2YXIga2V5IGluIHByb3BzKSB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwocHJvcHMsIGtleSkgJiYga2V5ICE9PSAnY3NzJyAmJiBrZXkgIT09IHR5cGVQcm9wTmFtZSAmJiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyB8fCBrZXkgIT09IGxhYmVsUHJvcE5hbWUpKSB7XG4gICAgICBuZXdQcm9wc1trZXldID0gcHJvcHNba2V5XTtcbiAgICB9XG4gIH1cblxuICBuZXdQcm9wcy5yZWYgPSByZWY7XG4gIG5ld1Byb3BzLmNsYXNzTmFtZSA9IGNsYXNzTmFtZTtcbiAgdmFyIGVsZSA9IC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KHR5cGUsIG5ld1Byb3BzKTtcblxuICByZXR1cm4gZWxlO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIEVtb3Rpb24uZGlzcGxheU5hbWUgPSAnRW1vdGlvbkNzc1Byb3BJbnRlcm5hbCc7XG59XG5cbmV4cG9ydCB7IENhY2hlUHJvdmlkZXIgYXMgQywgRW1vdGlvbiBhcyBFLCBUaGVtZUNvbnRleHQgYXMgVCwgVGhlbWVQcm92aWRlciBhcyBhLCB3aXRoVGhlbWUgYXMgYiwgY3JlYXRlRW1vdGlvblByb3BzIGFzIGMsIGhhc093blByb3BlcnR5IGFzIGgsIHVzZVRoZW1lIGFzIHUsIHdpdGhFbW90aW9uQ2FjaGUgYXMgdyB9O1xuIiwidmFyIGlzQnJvd3NlciA9IFwib2JqZWN0XCIgIT09ICd1bmRlZmluZWQnO1xuZnVuY3Rpb24gZ2V0UmVnaXN0ZXJlZFN0eWxlcyhyZWdpc3RlcmVkLCByZWdpc3RlcmVkU3R5bGVzLCBjbGFzc05hbWVzKSB7XG4gIHZhciByYXdDbGFzc05hbWUgPSAnJztcbiAgY2xhc3NOYW1lcy5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGlmIChyZWdpc3RlcmVkW2NsYXNzTmFtZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmVnaXN0ZXJlZFN0eWxlcy5wdXNoKHJlZ2lzdGVyZWRbY2xhc3NOYW1lXSArIFwiO1wiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmF3Q2xhc3NOYW1lICs9IGNsYXNzTmFtZSArIFwiIFwiO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByYXdDbGFzc05hbWU7XG59XG52YXIgaW5zZXJ0U3R5bGVzID0gZnVuY3Rpb24gaW5zZXJ0U3R5bGVzKGNhY2hlLCBzZXJpYWxpemVkLCBpc1N0cmluZ1RhZykge1xuICB2YXIgY2xhc3NOYW1lID0gY2FjaGUua2V5ICsgXCItXCIgKyBzZXJpYWxpemVkLm5hbWU7XG5cbiAgaWYgKCAvLyB3ZSBvbmx5IG5lZWQgdG8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIHJlZ2lzdGVyZWQgY2FjaGUgaWYgdGhlXG4gIC8vIGNsYXNzIG5hbWUgY291bGQgYmUgdXNlZCBmdXJ0aGVyIGRvd25cbiAgLy8gdGhlIHRyZWUgYnV0IGlmIGl0J3MgYSBzdHJpbmcgdGFnLCB3ZSBrbm93IGl0IHdvbid0XG4gIC8vIHNvIHdlIGRvbid0IGhhdmUgdG8gYWRkIGl0IHRvIHJlZ2lzdGVyZWQgY2FjaGUuXG4gIC8vIHRoaXMgaW1wcm92ZXMgbWVtb3J5IHVzYWdlIHNpbmNlIHdlIGNhbiBhdm9pZCBzdG9yaW5nIHRoZSB3aG9sZSBzdHlsZSBzdHJpbmdcbiAgKGlzU3RyaW5nVGFnID09PSBmYWxzZSB8fCAvLyB3ZSBuZWVkIHRvIGFsd2F5cyBzdG9yZSBpdCBpZiB3ZSdyZSBpbiBjb21wYXQgbW9kZSBhbmRcbiAgLy8gaW4gbm9kZSBzaW5jZSBlbW90aW9uLXNlcnZlciByZWxpZXMgb24gd2hldGhlciBhIHN0eWxlIGlzIGluXG4gIC8vIHRoZSByZWdpc3RlcmVkIGNhY2hlIHRvIGtub3cgd2hldGhlciBhIHN0eWxlIGlzIGdsb2JhbCBvciBub3RcbiAgLy8gYWxzbywgbm90ZSB0aGF0IHRoaXMgY2hlY2sgd2lsbCBiZSBkZWFkIGNvZGUgZWxpbWluYXRlZCBpbiB0aGUgYnJvd3NlclxuICBpc0Jyb3dzZXIgPT09IGZhbHNlICkgJiYgY2FjaGUucmVnaXN0ZXJlZFtjbGFzc05hbWVdID09PSB1bmRlZmluZWQpIHtcbiAgICBjYWNoZS5yZWdpc3RlcmVkW2NsYXNzTmFtZV0gPSBzZXJpYWxpemVkLnN0eWxlcztcbiAgfVxuXG4gIGlmIChjYWNoZS5pbnNlcnRlZFtzZXJpYWxpemVkLm5hbWVdID09PSB1bmRlZmluZWQpIHtcbiAgICB2YXIgY3VycmVudCA9IHNlcmlhbGl6ZWQ7XG5cbiAgICBkbyB7XG4gICAgICB2YXIgbWF5YmVTdHlsZXMgPSBjYWNoZS5pbnNlcnQoc2VyaWFsaXplZCA9PT0gY3VycmVudCA/IFwiLlwiICsgY2xhc3NOYW1lIDogJycsIGN1cnJlbnQsIGNhY2hlLnNoZWV0LCB0cnVlKTtcblxuICAgICAgY3VycmVudCA9IGN1cnJlbnQubmV4dDtcbiAgICB9IHdoaWxlIChjdXJyZW50ICE9PSB1bmRlZmluZWQpO1xuICB9XG59O1xuXG5leHBvcnQgeyBnZXRSZWdpc3RlcmVkU3R5bGVzLCBpbnNlcnRTdHlsZXMgfTtcbiIsImltcG9ydCB7IGNyZWF0ZUVsZW1lbnQsIHVzZUNvbnRleHQsIHVzZVJlZiwgdXNlTGF5b3V0RWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0ICdAZW1vdGlvbi9jYWNoZSc7XG5pbXBvcnQgeyBoIGFzIGhhc093blByb3BlcnR5LCBFIGFzIEVtb3Rpb24sIGMgYXMgY3JlYXRlRW1vdGlvblByb3BzLCB3IGFzIHdpdGhFbW90aW9uQ2FjaGUsIFQgYXMgVGhlbWVDb250ZXh0IH0gZnJvbSAnLi9lbW90aW9uLWVsZW1lbnQtNGZiZDg5YzUuYnJvd3Nlci5lc20uanMnO1xuZXhwb3J0IHsgQyBhcyBDYWNoZVByb3ZpZGVyLCBUIGFzIFRoZW1lQ29udGV4dCwgYSBhcyBUaGVtZVByb3ZpZGVyLCB1IGFzIHVzZVRoZW1lLCB3IGFzIHdpdGhFbW90aW9uQ2FjaGUsIGIgYXMgd2l0aFRoZW1lIH0gZnJvbSAnLi9lbW90aW9uLWVsZW1lbnQtNGZiZDg5YzUuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0ICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHMnO1xuaW1wb3J0ICdAZW1vdGlvbi93ZWFrLW1lbW9pemUnO1xuaW1wb3J0ICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5pbXBvcnQgJy4uL2lzb2xhdGVkLWhvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLWRvLW5vdC11c2UtdGhpcy1pbi15b3VyLWNvZGUvZGlzdC9lbW90aW9uLXJlYWN0LWlzb2xhdGVkLWhvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLWRvLW5vdC11c2UtdGhpcy1pbi15b3VyLWNvZGUuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgaW5zZXJ0U3R5bGVzLCBnZXRSZWdpc3RlcmVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vdXRpbHMnO1xuaW1wb3J0IHsgc2VyaWFsaXplU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vc2VyaWFsaXplJztcbmltcG9ydCB7IFN0eWxlU2hlZXQgfSBmcm9tICdAZW1vdGlvbi9zaGVldCc7XG5cbnZhciBwa2cgPSB7XG5cdG5hbWU6IFwiQGVtb3Rpb24vcmVhY3RcIixcblx0dmVyc2lvbjogXCIxMS4xLjVcIixcblx0bWFpbjogXCJkaXN0L2Vtb3Rpb24tcmVhY3QuY2pzLmpzXCIsXG5cdG1vZHVsZTogXCJkaXN0L2Vtb3Rpb24tcmVhY3QuZXNtLmpzXCIsXG5cdGJyb3dzZXI6IHtcblx0XHRcIi4vZGlzdC9lbW90aW9uLXJlYWN0LmNqcy5qc1wiOiBcIi4vZGlzdC9lbW90aW9uLXJlYWN0LmJyb3dzZXIuY2pzLmpzXCIsXG5cdFx0XCIuL2Rpc3QvZW1vdGlvbi1yZWFjdC5lc20uanNcIjogXCIuL2Rpc3QvZW1vdGlvbi1yZWFjdC5icm93c2VyLmVzbS5qc1wiXG5cdH0sXG5cdHR5cGVzOiBcInR5cGVzL2luZGV4LmQudHNcIixcblx0ZmlsZXM6IFtcblx0XHRcInNyY1wiLFxuXHRcdFwiZGlzdFwiLFxuXHRcdFwianN4LXJ1bnRpbWVcIixcblx0XHRcImpzeC1kZXYtcnVudGltZVwiLFxuXHRcdFwiaXNvbGF0ZWQtaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MtZG8tbm90LXVzZS10aGlzLWluLXlvdXItY29kZVwiLFxuXHRcdFwidHlwZXMvKi5kLnRzXCIsXG5cdFx0XCJtYWNyby5qc1wiLFxuXHRcdFwibWFjcm8uZC50c1wiLFxuXHRcdFwibWFjcm8uanMuZmxvd1wiXG5cdF0sXG5cdHNpZGVFZmZlY3RzOiBmYWxzZSxcblx0YXV0aG9yOiBcIm1pdGNoZWxsaGFtaWx0b24gPG1pdGNoZWxsQG1pdGNoZWxsaGFtaWx0b24ubWU+XCIsXG5cdGxpY2Vuc2U6IFwiTUlUXCIsXG5cdHNjcmlwdHM6IHtcblx0XHRcInRlc3Q6dHlwZXNjcmlwdFwiOiBcImR0c2xpbnQgdHlwZXNcIlxuXHR9LFxuXHRkZXBlbmRlbmNpZXM6IHtcblx0XHRcIkBiYWJlbC9ydW50aW1lXCI6IFwiXjcuNy4yXCIsXG5cdFx0XCJAZW1vdGlvbi9jYWNoZVwiOiBcIl4xMS4xLjNcIixcblx0XHRcIkBlbW90aW9uL3NlcmlhbGl6ZVwiOiBcIl4xLjAuMFwiLFxuXHRcdFwiQGVtb3Rpb24vc2hlZXRcIjogXCJeMS4wLjFcIixcblx0XHRcIkBlbW90aW9uL3V0aWxzXCI6IFwiXjEuMC4wXCIsXG5cdFx0XCJAZW1vdGlvbi93ZWFrLW1lbW9pemVcIjogXCJeMC4yLjVcIixcblx0XHRcImhvaXN0LW5vbi1yZWFjdC1zdGF0aWNzXCI6IFwiXjMuMy4xXCJcblx0fSxcblx0cGVlckRlcGVuZGVuY2llczoge1xuXHRcdFwiQGJhYmVsL2NvcmVcIjogXCJeNy4wLjBcIixcblx0XHRyZWFjdDogXCI+PTE2LjguMFwiXG5cdH0sXG5cdHBlZXJEZXBlbmRlbmNpZXNNZXRhOiB7XG5cdFx0XCJAYmFiZWwvY29yZVwiOiB7XG5cdFx0XHRvcHRpb25hbDogdHJ1ZVxuXHRcdH0sXG5cdFx0XCJAdHlwZXMvcmVhY3RcIjoge1xuXHRcdFx0b3B0aW9uYWw6IHRydWVcblx0XHR9XG5cdH0sXG5cdGRldkRlcGVuZGVuY2llczoge1xuXHRcdFwiQGJhYmVsL2NvcmVcIjogXCJeNy43LjJcIixcblx0XHRcIkBlbW90aW9uL2Nzc1wiOiBcIjExLjEuM1wiLFxuXHRcdFwiQGVtb3Rpb24vY3NzLXByZXR0aWZpZXJcIjogXCIxLjAuMFwiLFxuXHRcdFwiQGVtb3Rpb24vc2VydmVyXCI6IFwiMTEuMC4wXCIsXG5cdFx0XCJAZW1vdGlvbi9zdHlsZWRcIjogXCIxMS4xLjVcIixcblx0XHRcIkB0eXBlcy9yZWFjdFwiOiBcIl4xNi45LjExXCIsXG5cdFx0ZHRzbGludDogXCJeMC4zLjBcIixcblx0XHRcImh0bWwtdGFnLW5hbWVzXCI6IFwiXjEuMS4yXCIsXG5cdFx0cmVhY3Q6IFwiMTYuMTQuMFwiLFxuXHRcdFwic3ZnLXRhZy1uYW1lc1wiOiBcIl4xLjEuMVwiXG5cdH0sXG5cdHJlcG9zaXRvcnk6IFwiaHR0cHM6Ly9naXRodWIuY29tL2Vtb3Rpb24tanMvZW1vdGlvbi90cmVlL21hc3Rlci9wYWNrYWdlcy9yZWFjdFwiLFxuXHRwdWJsaXNoQ29uZmlnOiB7XG5cdFx0YWNjZXNzOiBcInB1YmxpY1wiXG5cdH0sXG5cdFwidW1kOm1haW5cIjogXCJkaXN0L2Vtb3Rpb24tcmVhY3QudW1kLm1pbi5qc1wiLFxuXHRwcmVjb25zdHJ1Y3Q6IHtcblx0XHRlbnRyeXBvaW50czogW1xuXHRcdFx0XCIuL2luZGV4LmpzXCIsXG5cdFx0XHRcIi4vanN4LXJ1bnRpbWUuanNcIixcblx0XHRcdFwiLi9qc3gtZGV2LXJ1bnRpbWUuanNcIixcblx0XHRcdFwiLi9pc29sYXRlZC1ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy1kby1ub3QtdXNlLXRoaXMtaW4teW91ci1jb2RlLmpzXCJcblx0XHRdLFxuXHRcdHVtZE5hbWU6IFwiZW1vdGlvblJlYWN0XCJcblx0fVxufTtcblxudmFyIGpzeCA9IGZ1bmN0aW9uIGpzeCh0eXBlLCBwcm9wcykge1xuICB2YXIgYXJncyA9IGFyZ3VtZW50cztcblxuICBpZiAocHJvcHMgPT0gbnVsbCB8fCAhaGFzT3duUHJvcGVydHkuY2FsbChwcm9wcywgJ2NzcycpKSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIHJldHVybiBjcmVhdGVFbGVtZW50LmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gIH1cblxuICB2YXIgYXJnc0xlbmd0aCA9IGFyZ3MubGVuZ3RoO1xuICB2YXIgY3JlYXRlRWxlbWVudEFyZ0FycmF5ID0gbmV3IEFycmF5KGFyZ3NMZW5ndGgpO1xuICBjcmVhdGVFbGVtZW50QXJnQXJyYXlbMF0gPSBFbW90aW9uO1xuICBjcmVhdGVFbGVtZW50QXJnQXJyYXlbMV0gPSBjcmVhdGVFbW90aW9uUHJvcHModHlwZSwgcHJvcHMpO1xuXG4gIGZvciAodmFyIGkgPSAyOyBpIDwgYXJnc0xlbmd0aDsgaSsrKSB7XG4gICAgY3JlYXRlRWxlbWVudEFyZ0FycmF5W2ldID0gYXJnc1tpXTtcbiAgfSAvLyAkRmxvd0ZpeE1lXG5cblxuICByZXR1cm4gY3JlYXRlRWxlbWVudC5hcHBseShudWxsLCBjcmVhdGVFbGVtZW50QXJnQXJyYXkpO1xufTtcblxudmFyIHdhcm5lZEFib3V0Q3NzUHJvcEZvckdsb2JhbCA9IGZhbHNlOyAvLyBtYWludGFpbiBwbGFjZSBvdmVyIHJlcmVuZGVycy5cbi8vIGluaXRpYWwgcmVuZGVyIGZyb20gYnJvd3NlciwgaW5zZXJ0QmVmb3JlIGNvbnRleHQuc2hlZXQudGFnc1swXSBvciBpZiBhIHN0eWxlIGhhc24ndCBiZWVuIGluc2VydGVkIHRoZXJlIHlldCwgYXBwZW5kQ2hpbGRcbi8vIGluaXRpYWwgY2xpZW50LXNpZGUgcmVuZGVyIGZyb20gU1NSLCB1c2UgcGxhY2Ugb2YgaHlkcmF0aW5nIHRhZ1xuXG52YXIgR2xvYmFsID0gLyogI19fUFVSRV9fICovd2l0aEVtb3Rpb25DYWNoZShmdW5jdGlvbiAocHJvcHMsIGNhY2hlKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICF3YXJuZWRBYm91dENzc1Byb3BGb3JHbG9iYWwgJiYgKCAvLyBjaGVjayBmb3IgY2xhc3NOYW1lIGFzIHdlbGwgc2luY2UgdGhlIHVzZXIgaXNcbiAgLy8gcHJvYmFibHkgdXNpbmcgdGhlIGN1c3RvbSBjcmVhdGVFbGVtZW50IHdoaWNoXG4gIC8vIG1lYW5zIGl0IHdpbGwgYmUgdHVybmVkIGludG8gYSBjbGFzc05hbWUgcHJvcFxuICAvLyAkRmxvd0ZpeE1lIEkgZG9uJ3QgcmVhbGx5IHdhbnQgdG8gYWRkIGl0IHRvIHRoZSB0eXBlIHNpbmNlIGl0IHNob3VsZG4ndCBiZSB1c2VkXG4gIHByb3BzLmNsYXNzTmFtZSB8fCBwcm9wcy5jc3MpKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkl0IGxvb2tzIGxpa2UgeW91J3JlIHVzaW5nIHRoZSBjc3MgcHJvcCBvbiBHbG9iYWwsIGRpZCB5b3UgbWVhbiB0byB1c2UgdGhlIHN0eWxlcyBwcm9wIGluc3RlYWQ/XCIpO1xuICAgIHdhcm5lZEFib3V0Q3NzUHJvcEZvckdsb2JhbCA9IHRydWU7XG4gIH1cblxuICB2YXIgc3R5bGVzID0gcHJvcHMuc3R5bGVzO1xuICB2YXIgc2VyaWFsaXplZCA9IHNlcmlhbGl6ZVN0eWxlcyhbc3R5bGVzXSwgdW5kZWZpbmVkLCB0eXBlb2Ygc3R5bGVzID09PSAnZnVuY3Rpb24nIHx8IEFycmF5LmlzQXJyYXkoc3R5bGVzKSA/IHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KSA6IHVuZGVmaW5lZCk7XG4gIC8vIGJ1dCBpdCBpcyBiYXNlZCBvbiBhIGNvbnN0YW50IHRoYXQgd2lsbCBuZXZlciBjaGFuZ2UgYXQgcnVudGltZVxuICAvLyBpdCdzIGVmZmVjdGl2ZWx5IGxpa2UgaGF2aW5nIHR3byBpbXBsZW1lbnRhdGlvbnMgYW5kIHN3aXRjaGluZyB0aGVtIG91dFxuICAvLyBzbyBpdCdzIG5vdCBhY3R1YWxseSBicmVha2luZyBhbnl0aGluZ1xuXG5cbiAgdmFyIHNoZWV0UmVmID0gdXNlUmVmKCk7XG4gIHVzZUxheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGtleSA9IGNhY2hlLmtleSArIFwiLWdsb2JhbFwiO1xuICAgIHZhciBzaGVldCA9IG5ldyBTdHlsZVNoZWV0KHtcbiAgICAgIGtleToga2V5LFxuICAgICAgbm9uY2U6IGNhY2hlLnNoZWV0Lm5vbmNlLFxuICAgICAgY29udGFpbmVyOiBjYWNoZS5zaGVldC5jb250YWluZXIsXG4gICAgICBzcGVlZHk6IGNhY2hlLnNoZWV0LmlzU3BlZWR5XG4gICAgfSk7IC8vICRGbG93Rml4TWVcblxuICAgIHZhciBub2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcInN0eWxlW2RhdGEtZW1vdGlvbj1cXFwiXCIgKyBrZXkgKyBcIiBcIiArIHNlcmlhbGl6ZWQubmFtZSArIFwiXFxcIl1cIik7XG5cbiAgICBpZiAoY2FjaGUuc2hlZXQudGFncy5sZW5ndGgpIHtcbiAgICAgIHNoZWV0LmJlZm9yZSA9IGNhY2hlLnNoZWV0LnRhZ3NbMF07XG4gICAgfVxuXG4gICAgaWYgKG5vZGUgIT09IG51bGwpIHtcbiAgICAgIHNoZWV0Lmh5ZHJhdGUoW25vZGVdKTtcbiAgICB9XG5cbiAgICBzaGVldFJlZi5jdXJyZW50ID0gc2hlZXQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHNoZWV0LmZsdXNoKCk7XG4gICAgfTtcbiAgfSwgW2NhY2hlXSk7XG4gIHVzZUxheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHNlcmlhbGl6ZWQubmV4dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyBpbnNlcnQga2V5ZnJhbWVzXG4gICAgICBpbnNlcnRTdHlsZXMoY2FjaGUsIHNlcmlhbGl6ZWQubmV4dCwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgdmFyIHNoZWV0ID0gc2hlZXRSZWYuY3VycmVudDtcblxuICAgIGlmIChzaGVldC50YWdzLmxlbmd0aCkge1xuICAgICAgLy8gaWYgdGhpcyBkb2Vzbid0IGV4aXN0IHRoZW4gaXQgd2lsbCBiZSBudWxsIHNvIHRoZSBzdHlsZSBlbGVtZW50IHdpbGwgYmUgYXBwZW5kZWRcbiAgICAgIHZhciBlbGVtZW50ID0gc2hlZXQudGFnc1tzaGVldC50YWdzLmxlbmd0aCAtIDFdLm5leHRFbGVtZW50U2libGluZztcbiAgICAgIHNoZWV0LmJlZm9yZSA9IGVsZW1lbnQ7XG4gICAgICBzaGVldC5mbHVzaCgpO1xuICAgIH1cblxuICAgIGNhY2hlLmluc2VydChcIlwiLCBzZXJpYWxpemVkLCBzaGVldCwgZmFsc2UpO1xuICB9LCBbY2FjaGUsIHNlcmlhbGl6ZWQubmFtZV0pO1xuICByZXR1cm4gbnVsbDtcbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBHbG9iYWwuZGlzcGxheU5hbWUgPSAnRW1vdGlvbkdsb2JhbCc7XG59XG5cbmZ1bmN0aW9uIGNzcygpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBzZXJpYWxpemVTdHlsZXMoYXJncyk7XG59XG5cbnZhciBrZXlmcmFtZXMgPSBmdW5jdGlvbiBrZXlmcmFtZXMoKSB7XG4gIHZhciBpbnNlcnRhYmxlID0gY3NzLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgdmFyIG5hbWUgPSBcImFuaW1hdGlvbi1cIiArIGluc2VydGFibGUubmFtZTsgLy8gJEZsb3dGaXhNZVxuXG4gIHJldHVybiB7XG4gICAgbmFtZTogbmFtZSxcbiAgICBzdHlsZXM6IFwiQGtleWZyYW1lcyBcIiArIG5hbWUgKyBcIntcIiArIGluc2VydGFibGUuc3R5bGVzICsgXCJ9XCIsXG4gICAgYW5pbTogMSxcbiAgICB0b1N0cmluZzogZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICByZXR1cm4gXCJfRU1PX1wiICsgdGhpcy5uYW1lICsgXCJfXCIgKyB0aGlzLnN0eWxlcyArIFwiX0VNT19cIjtcbiAgICB9XG4gIH07XG59O1xuXG52YXIgY2xhc3NuYW1lcyA9IGZ1bmN0aW9uIGNsYXNzbmFtZXMoYXJncykge1xuICB2YXIgbGVuID0gYXJncy5sZW5ndGg7XG4gIHZhciBpID0gMDtcbiAgdmFyIGNscyA9ICcnO1xuXG4gIGZvciAoOyBpIDwgbGVuOyBpKyspIHtcbiAgICB2YXIgYXJnID0gYXJnc1tpXTtcbiAgICBpZiAoYXJnID09IG51bGwpIGNvbnRpbnVlO1xuICAgIHZhciB0b0FkZCA9IHZvaWQgMDtcblxuICAgIHN3aXRjaCAodHlwZW9mIGFyZykge1xuICAgICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdvYmplY3QnOlxuICAgICAgICB7XG4gICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuICAgICAgICAgICAgdG9BZGQgPSBjbGFzc25hbWVzKGFyZyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGFyZy5zdHlsZXMgIT09IHVuZGVmaW5lZCAmJiBhcmcubmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1lvdSBoYXZlIHBhc3NlZCBzdHlsZXMgY3JlYXRlZCB3aXRoIGBjc3NgIGZyb20gYEBlbW90aW9uL3JlYWN0YCBwYWNrYWdlIHRvIHRoZSBgY3hgLlxcbicgKyAnYGN4YCBpcyBtZWFudCB0byBjb21wb3NlIGNsYXNzIG5hbWVzIChzdHJpbmdzKSBzbyB5b3Ugc2hvdWxkIGNvbnZlcnQgdGhvc2Ugc3R5bGVzIHRvIGEgY2xhc3MgbmFtZSBieSBwYXNzaW5nIHRoZW0gdG8gdGhlIGBjc3NgIHJlY2VpdmVkIGZyb20gPENsYXNzTmFtZXMvPiBjb21wb25lbnQuJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRvQWRkID0gJyc7XG5cbiAgICAgICAgICAgIGZvciAodmFyIGsgaW4gYXJnKSB7XG4gICAgICAgICAgICAgIGlmIChhcmdba10gJiYgaykge1xuICAgICAgICAgICAgICAgIHRvQWRkICYmICh0b0FkZCArPSAnICcpO1xuICAgICAgICAgICAgICAgIHRvQWRkICs9IGs7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICB7XG4gICAgICAgICAgdG9BZGQgPSBhcmc7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodG9BZGQpIHtcbiAgICAgIGNscyAmJiAoY2xzICs9ICcgJyk7XG4gICAgICBjbHMgKz0gdG9BZGQ7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNscztcbn07XG5cbmZ1bmN0aW9uIG1lcmdlKHJlZ2lzdGVyZWQsIGNzcywgY2xhc3NOYW1lKSB7XG4gIHZhciByZWdpc3RlcmVkU3R5bGVzID0gW107XG4gIHZhciByYXdDbGFzc05hbWUgPSBnZXRSZWdpc3RlcmVkU3R5bGVzKHJlZ2lzdGVyZWQsIHJlZ2lzdGVyZWRTdHlsZXMsIGNsYXNzTmFtZSk7XG5cbiAgaWYgKHJlZ2lzdGVyZWRTdHlsZXMubGVuZ3RoIDwgMikge1xuICAgIHJldHVybiBjbGFzc05hbWU7XG4gIH1cblxuICByZXR1cm4gcmF3Q2xhc3NOYW1lICsgY3NzKHJlZ2lzdGVyZWRTdHlsZXMpO1xufVxuXG52YXIgQ2xhc3NOYW1lcyA9IC8qICNfX1BVUkVfXyAqL3dpdGhFbW90aW9uQ2FjaGUoZnVuY3Rpb24gKHByb3BzLCBjYWNoZSkge1xuICB2YXIgaGFzUmVuZGVyZWQgPSBmYWxzZTtcblxuICB2YXIgY3NzID0gZnVuY3Rpb24gY3NzKCkge1xuICAgIGlmIChoYXNSZW5kZXJlZCAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NzcyBjYW4gb25seSBiZSB1c2VkIGR1cmluZyByZW5kZXInKTtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgdmFyIHNlcmlhbGl6ZWQgPSBzZXJpYWxpemVTdHlsZXMoYXJncywgY2FjaGUucmVnaXN0ZXJlZCk7XG5cbiAgICB7XG4gICAgICBpbnNlcnRTdHlsZXMoY2FjaGUsIHNlcmlhbGl6ZWQsIGZhbHNlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY2FjaGUua2V5ICsgXCItXCIgKyBzZXJpYWxpemVkLm5hbWU7XG4gIH07XG5cbiAgdmFyIGN4ID0gZnVuY3Rpb24gY3goKSB7XG4gICAgaWYgKGhhc1JlbmRlcmVkICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignY3ggY2FuIG9ubHkgYmUgdXNlZCBkdXJpbmcgcmVuZGVyJyk7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICBhcmdzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lcmdlKGNhY2hlLnJlZ2lzdGVyZWQsIGNzcywgY2xhc3NuYW1lcyhhcmdzKSk7XG4gIH07XG5cbiAgdmFyIGNvbnRlbnQgPSB7XG4gICAgY3NzOiBjc3MsXG4gICAgY3g6IGN4LFxuICAgIHRoZW1lOiB1c2VDb250ZXh0KFRoZW1lQ29udGV4dClcbiAgfTtcbiAgdmFyIGVsZSA9IHByb3BzLmNoaWxkcmVuKGNvbnRlbnQpO1xuICBoYXNSZW5kZXJlZCA9IHRydWU7XG5cbiAgcmV0dXJuIGVsZTtcbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBDbGFzc05hbWVzLmRpc3BsYXlOYW1lID0gJ0Vtb3Rpb25DbGFzc05hbWVzJztcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIGlzQnJvd3NlciA9IFwib2JqZWN0XCIgIT09ICd1bmRlZmluZWQnOyAvLyAjMTcyNyBmb3Igc29tZSByZWFzb24gSmVzdCBldmFsdWF0ZXMgbW9kdWxlcyB0d2ljZSBpZiBzb21lIGNvbnN1bWluZyBtb2R1bGUgZ2V0cyBtb2NrZWQgd2l0aCBqZXN0Lm1vY2tcblxuICB2YXIgaXNKZXN0ID0gdHlwZW9mIGplc3QgIT09ICd1bmRlZmluZWQnO1xuXG4gIGlmIChpc0Jyb3dzZXIgJiYgIWlzSmVzdCkge1xuICAgIHZhciBnbG9iYWxDb250ZXh0ID0gaXNCcm93c2VyID8gd2luZG93IDogZ2xvYmFsO1xuICAgIHZhciBnbG9iYWxLZXkgPSBcIl9fRU1PVElPTl9SRUFDVF9cIiArIHBrZy52ZXJzaW9uLnNwbGl0KCcuJylbMF0gKyBcIl9fXCI7XG5cbiAgICBpZiAoZ2xvYmFsQ29udGV4dFtnbG9iYWxLZXldKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ1lvdSBhcmUgbG9hZGluZyBAZW1vdGlvbi9yZWFjdCB3aGVuIGl0IGlzIGFscmVhZHkgbG9hZGVkLiBSdW5uaW5nICcgKyAnbXVsdGlwbGUgaW5zdGFuY2VzIG1heSBjYXVzZSBwcm9ibGVtcy4gVGhpcyBjYW4gaGFwcGVuIGlmIG11bHRpcGxlICcgKyAndmVyc2lvbnMgYXJlIHVzZWQsIG9yIGlmIG11bHRpcGxlIGJ1aWxkcyBvZiB0aGUgc2FtZSB2ZXJzaW9uIGFyZSAnICsgJ3VzZWQuJyk7XG4gICAgfVxuXG4gICAgZ2xvYmFsQ29udGV4dFtnbG9iYWxLZXldID0gdHJ1ZTtcbiAgfVxufVxuXG5leHBvcnQgeyBDbGFzc05hbWVzLCBHbG9iYWwsIGpzeCBhcyBjcmVhdGVFbGVtZW50LCBjc3MsIGpzeCwga2V5ZnJhbWVzIH07XG4iLCIvKiogQGpzeCBqc3ggKi9cclxuaW1wb3J0IHsgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9yZWFjdCdcclxuXHJcbmNvbnN0IGNvbG9yID0gY3NzYGNvbG9yOiByZWQ7YFxyXG5cclxuY29uc3QgSG9tZSA9ICgpID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPGRpdj5cclxuICAgICAgVGhpcyBpcyBob21lIGRkZFxyXG4gICAgICA8ZGl2IGNzcz17Y29sb3IgfT5cclxuICAgICAgICB0ZXN0XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBIb21lIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5cclxuY29uc3QgQWJvdXQgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXY+XHJcbiAgICAgIGFib3V0XHJcbiAgICA8L2Rpdj5cclxuICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFib3V0IiwiaW1wb3J0IFwiLi9hcHAuY3NzXCJcclxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgUmVhY3RET00gZnJvbSBcInJlYWN0LWRvbVwiO1xyXG5pbXBvcnQgeyBCcm93c2VyUm91dGVyLCBTd2l0Y2gsIFJvdXRlIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIlxyXG5cclxuaW1wb3J0IEhvbWUgZnJvbSBcIi4vcGFnZXMvaG9tZVwiXHJcbmltcG9ydCBBYm91dCBmcm9tIFwiLi9wYWdlcy9hYm91dFwiXHJcblxyXG5jb25zdCBBcHAgPSAoKSA9PiB7XHJcbiAgcmV0dXJuKFxyXG4gICAgPEJyb3dzZXJSb3V0ZXIgYmFzZW5hbWU9e3Byb2Nlc3MuZW52LlBVQkxJQ19VUkx9PlxyXG4gICAgPFN3aXRjaD5cclxuICAgICAgPFJvdXRlIHBhdGg9XCIvXCIgZXhhY3QgY29tcG9uZW50PXtIb21lfSAvPlxyXG4gICAgICA8Um91dGUgcGF0aD1cIi9hYm91dFwiIGV4YWN0IGNvbXBvbmVudD17QWJvdXR9IC8+XHJcbiAgICA8L1N3aXRjaD5cclxuICAgIDwvQnJvd3NlclJvdXRlcj5cclxuICApXHJcbn1cclxuXHJcblJlYWN0RE9NLnJlbmRlcig8QXBwIC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFwcFwiKSk7Il0sInNvdXJjZVJvb3QiOiIifQ==